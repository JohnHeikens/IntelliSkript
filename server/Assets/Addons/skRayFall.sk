#AUTOMATIC GENERATED SKRIPT FILE
#COPYRIGHT JOHN HEIKENS

#Add Player to ID Based Bossbar
#Add a player to an ID based Bossbar.
effect:
	patterns:
		(add|set) bossbar %string% for %player% 
		(add|give) %players% [to] bossbar %string%

#Add/Remove Players from Group Scores
#Add or removed a players group based score.
effect:
	patterns:
		add %player% to group score [with id] %string%
		(delete|remove) %player% from group [id based] score %string%

#Add/Set Bossbar Flag
#Add a flag to a ID based Bossbar.
effect:
	patterns:
		(add|set) [a] [the] flag %bossbarflag% to [the] bossbar %string%

#Animated Ball Effect
#Creates an EffectLib animated ball effect.
effect:
	patterns:
		(spawn|create|apply) (a|the|an) animated ball (effect|formation) (at|on|for|to) %entity/location% with id %string% [with particle %visualeffects%] [offset by %number%, %number%(,| and) %number%]

#Arc Effect
#Creates an EffectLib arc effect.
effect:
	patterns:
		(spawn|create|apply) (a|the|an) arc (effect|formation) from %entity/location% to %entity/location% with id %string% [with particle[s] %visualeffects%] [%number% high] [and %number% particles]

#Atom Effect
#Creates an EffectLib atom effect.
effect:
	patterns:
		(spawn|create|apply) (a|the|an) atom (effect|formation) (at|on|for|to) %entity/location% with id %string%

#Bleed Effect
#Creates an EffectLib bleed effect.
#Examples:
#command /bleedtest:
#	trigger:
#		create a bleed effect to player with id "test"
#		wait 10 seconds
#		message "&cDelete"
#		delete effect "test"
effect:
	patterns:
		(spawn|create|apply) (a|the|an) bleed (effect|formation) (at|on|for|to) %entity/location% with id %string%

#Change Citizen Skin
#Change the skin of a citizen by:
#* ID
#* Minecraft Username
#This will change the skin of an NPC to a given Minecraft username
#Examples:
#command /npcskin:
#	trigger:
#		create a citizen named "notch" at location of player
#		change citizen last created citizen skin to "eyesniper2"
#Citizens
effect:
	patterns:
		change citizen %number% skin to %string%

#Circle Effect
#Creates an EffectLib circle effect.
effect:
	patterns:
		(spawn|create|apply) (a|the|an) circle (effect|formation) (at|on|for) %entity/location% with id %string% [with particle[s] %visualeffects%] [(and|with) radius %number%]

#Citizen Hold
#This will make a Citizen hold an object in their hand.
#Examples:
#command /npcholdsword:
#	trigger:
#		make citizen last created citizen id hold iron sword
#Citizens
effect:
	patterns:
		make citizen %number% hold [an] %itemstack%

#Citizen Invulnerability
#Change if a citizen takes damage by:
#* ID
#* Invulnerable
#* Vulnerable
#This will allow you to choose if an NPC can receive damage
#Citizens
effect:
	patterns:
		make citizen %number% (invulnerable|vulnerable)

#Citizen Look Targeting
#Change the view of a citizen by:
#* ID
#* Location
#Pick a location for an NPC to look at
#Citizens
effect:
	patterns:
		make citizen %number% look at %location%

#Citizen Max Health
#Modify citizens max health by:
#* ID
#* Number
#Will allow you to modify the maximum amount of health an NPC can have. 0.5 = half a heart, 1 = a heart, etc...
#Citizens
effect:
	patterns:
		(set|make) citizen[s] %number% max health [to] %number%

#Citizen Nametag Visibility
#Modify citizen nametags by:
#* ID
#* Invisibility
#* Visibility
#For if you want to toggle the visibility of names above the NPC's head
#Citizens
effect:
	patterns:
		(set|make) citizen[s] %number% nametag (invisible|visible)

#Citizens Look Close Trait
#Allow citizens to look at the closest player automatically. This effect is toggleable, so to disable this trait for a citizen run this effect again.
#Citizens
effect:
	patterns:
		(give|set) npc %number% the look close trait

#Citizens Look Close Trait
#Allow citizens to look at the closest player automatically. This effect is toggleable, so to disable this trait for a citizen run this effect again.
#Citizens
effect:
	patterns:
		remove npc %number%['s] look close trait

#Create Citizen
#Create citizens with:
#* Name
#* Direction
#* Location
#* Entity Type
#This will place an NPC in your world that can be modified
#Examples:
#command /createwolf <text>:
#	trigger:
#		create a citizen named "%arg 1%" at location of player as a wolf
#Citizens
effect:
	patterns:
		create [a] citizen named %string% (at|%direction%) %location% [as (a|an) %entitytypes%]

#Create Group Based Score
#Create a group ID based score and assign it to a player or multiple players.
effect:
	patterns:
		(set|create) group id [based] score %string% in sidebar for %players% to %number% with id %string%

#Create ID based Bossbar
#Create a ID based Bossbar for a group of people.
effect:
	patterns:
		create (bossbar|boss bar) title[d] %string% and id %string% for %players% [with (value|progress) %number%] [with colors %bossbarcolor%] [with style %bossbarstyle%] [with flags %bossbarflag%]

#Delete Group Score
#Deletes a group score.
effect:
	patterns:
		(delete|remove) score [with] id %string%

#Delete Group Score
#Deletes a group score.
effect:
	patterns:
		(delete|remove) score[s] [with] group id %string%

#Delete ID based Bossbar
#Delete/destroy an ID based Bossbar.
effect:
	patterns:
		(remove|destroy) bossbar %string%

#Delete Sidebar Score
#Delete a sidebar score by:
#* Name
#* Player
#This will delete a specified score from a specified player
effect:
	patterns:
		delete score %string% in sidebar of %player%

#Delete/Stop Effect
#Stops a EffectLib effect that matches the id value.
#Examples:
#command /bleedtest:
#	trigger:
#		create a bleed effect to player with id "bleedtest"
#		wait 10 seconds
#		message "&cDelete"
#		delete effect "bleedtest"
effect:
	patterns:
		(delete|stop) (effect|formation) %string%

#Despawn Citizen
#Despawn citizens by:
#* ID
#Unlike delete a citizen this will just kill the NPC you can respawnit back at the created location with the respawn citizen effect.
#Citizens
effect:
	patterns:
		despawn citizen %number%

#Edit ID based score
#Edit an ID based score.
effect:
	patterns:
		(edit|update) score [with] id %string% to %string% and %number%

#EffCitizenSleep
effect:
	patterns:
		(make|force) (npc|citizen) with id %number% to sleep
		(make|force) (npc|citizen) with id %number% to wake [up]

#Equip Citizen
#Give citizens:
#* Tools
#* Armo(u)r
#Give citizens things to hold in their hands and wear
#Citizens
effect:
	patterns:
		(equip|give) citizen %number% with [an] %itemstack%

#Fake Lightning (No Sound)
#Creates a silent fake lightning strike at a location.
#Examples:
#command /fakelightningtest:
#	trigger:
#		create fake fake lightning at location of player
effect:
	patterns:
		(create|strike) (fake|ultra|no sound) fake lightning at %location%

#Hide BossBar
#Hide a ID based Bossbar.
effect:
	patterns:
		hide bossbar %string%

#Line Effect
#Creates a EffectLib line effect.
effect:
	patterns:
		(spawn|create|apply) (a|the|an) line (effect|formation) from %entity/location% to %entity/location% with id %string% [with particle[s] %visualeffects%]

#Make Citizen Attack
#Make citizens attack with:
#* ID
#* Mobs
#* Players
#Makes a citizen attack a living entity. The entity must be close enough to the NPC
#Examples:
#command /attack <integer>:
#	trigger:
#		make citizen arg 1 attack player
#		make citizen arg 1 vulnerable
#Citizens
effect:
	patterns:
		make citizen %number% (attack|fight) %entity%

#Make Citizen Crouch/Uncrouch/Stand
#Make a NPC/Citizen Crouch, Uncrouch or stand.
#Citizens
effect:
	patterns:
		(set|make) citizen %number% [to] [be] crouch[ed]
		(set|make) citizen %number% [to] [be] (uncrouch[ed]|standing)

#Make Citizen Crouch/Uncrouch/Stand
#Make a NPC/Citizen Crouch, Uncrouch or stand.
#Citizens
effect:
	patterns:
		toggle citizen %number%['s] crouch

#Make Citizen Swing
#Force a citizens to play the arm swing animation
#Examples:
#command /npcarmswing:
#	trigger:
#		make citizen last created citizen swing arm    
#Citizens
effect:
	patterns:
		make citizen %number% swing [arm]

#Make Citizen Talk
#Make citizens communicate with:
#* ID
#* Messages
#* Players
#This will make an NPC speak to a player with a custom message
#Examples:
#command /npcspeak <integer> <text>:
#	trigger:
#		make citizen arg 1 say "%arg 2%" to player
#Citizens
effect:
	patterns:
		make citizen %number% (say|communicate) %string% to %livingentities%

#Make Player Glow
#Make a player glow. This is based on team color, will be white by default.
#Examples:
#command /playerglow:
#	trigger:
#		make player glow
#		wait 5 seconds
#		make player stop glowing
effect:
	patterns:
		make %player% glow

#Max Health
#Set max health by:
#* Entity
#* Value
#This will change the maximum health of an entity
effect:
	patterns:
		set rf max[imum] h(p|ealth) of %livingentities% to %number%

#Move Citizen
#Move citizens by:
#* ID
#* Location
#* Speed
#This will make a given NPC pathfind to a location
#Examples:
#command /movenpc:
#	trigger:
#		move citizen 1 to location of player at speed 2
#Citizens
effect:
	patterns:
		move citizen %number% to %location% [at speed %number%]

#Play Resource Pack Sound
#Play a sound from a resource pack.
effect:
	patterns:
		play (resource|[custom ]sound) [sound] pack %string% to %player% [at %location%] [(and|with) volume %number%] [(and|with) pitch %number%]

#Play Sound
#Play sound by:
#* Player
#* Client
#* Volume
#* This will play a sound to a player and nobody else
#If you want a list of skRayFall sounds go https://hub.spigotmc.org/javadocs/spigot/ click ctrl + f and type 'sound' then press the down arrow once and then click the sound that is shown in green text and that will list all the sounds for you
effect:
	patterns:
		play %string% to %players% [at volume %number%]

#Players Tab Name
#Lets you customize a players name within the tab menu. Please note the ['s] was added as of 1.9.18.
effect:
	patterns:
		set %player%['s] tab name to %string%

#Remove Citizen
#Remove citizens by:
#* ID
#This will permanently remove a citizen
#Examples:
#command /removelastnpc:
#	trigger:
#		destroy citizen last created citizen
#Citizens
effect:
	patterns:
		(remove|destroy) citizen %number%

#Remove Player from BossBar
#Remove a player from a ID based Bossbar.
effect:
	patterns:
		remove %players% [from] bossbar %string%

#Remove/Delete Bossbar Flag
#Remove a flag from a ID based Bossbar.
effect:
	patterns:
		(remove|delete) [a] [the] flag %bossbarflag% [to] [from] [the] bossbar %string%

#Respawn Citizen
#Respawn citizens by:
#* ID
#* Direction
#* Location
#This will force an NPC to come back to life if it was previously killed or despawned by the despawn citizen effect. This will not work if the citizen is already alive so it can't be used to duplicate citizens
#Examples:
#command /npcrespawn:
#	trigger:
#
#		respawn citizen 0 at location of player
#Citizens
effect:
	patterns:
		respawn citizen %number% (at|%direction%) %location%

#Send Title
#Set title by:
#* Name
#* Subtitle
#* Player
#* Time
#* Fadein
#* Fadeout
#This will send a title to a player with an optional subtitle and display time
effect:
	patterns:
		send %players% title %string% [with subtitle %string%] [for %timespan%] [with %timespan% fade in and %timespan% fade out]

#Set Action Bar
#Display Action Bar by:
#* Player
#* Text
#This will display text above the player's hotbar for a few seconds. This is like the text you receive when changing the item in your hand
effect:
	patterns:
		set action bar of %players% to %string%
		set %player%['s] action bar to %string%

#Set Below Name Score
#Set score of a sidebar by:
#* Name
#* Value
#* Player
#* Target
#This will change the name and score below a player's name
effect:
	patterns:
		set score %string% below %player% to %number% for %players%

#Set Bossbar Color
#Set the color of an ID based Bossbar.
effect:
	patterns:
		(set|edit) bossbar %string% colo[u]r to %bossbarcolor%

#Set Bossbar Progress/Value
#Set the progress of an ID based bossbar.
effect:
	patterns:
		(set|edit) bossbar %string% (value|progress) to %number%

#Set Bossbar Style
#Set the style of an ID based Bossbar.
effect:
	patterns:
		(set|edit) bossbar %string% style to %bossbarstyle%

#Set Bossbar Title/Name
#Set the name of an ID based Bossbar.
effect:
	patterns:
		(set|edit) bossbar %string% (title|name) to %string%

#Set Citizens Name
#Set the name of a citizen/npc using their ID number.
#Examples:
#set citizen 1 name to "eyesniper2"
#Citizens
effect:
	patterns:
		(set|make) citizen[s] %number% name to %string%

#Set ID based Score
#Make an ID based score in a players scoreboard. This method is ideal for creating complex text based scoreboards.
effect:
	patterns:
		(set|create) id [based] score %string% in sidebar of %player% to %number% with id %string%

#Set Meta Data
#Set a meta data on an entity to a value
effect:
	patterns:
		set meta %string% for %entity% to %string%

#Set Sidebar Name
#Change the sidebar name by:
#* Scoreboard
#* Name
#* Players
#This will change the name of a player's sidebar. The sidebar of the player must have at least one score in order for it to show on the sidebar
effect:
	patterns:
		set name of sidebar (of|for) %players% to %string%

#Set Sidebar Score
#Set score of a sidebar by:
#* Scoreboard
#* Name
#* Value
#* Player
#This will change the score of a score in a player's sidebar or create a new score if it does not exist
effect:
	patterns:
		set score %string% in sidebar of %player% to %number%

#Set Tab Header & Footer
#Modify Tab by:
#* Header
#* Footer
#* Player
#This will display a client side header and footer for a player
effect:
	patterns:
		set tab header to %string% and footer to %string% for %player%

#Set Tablist Score
#Set the tablist score by:
#* Scoreboard
#* Value
#* Player
#* Target
#This will change the score for a player in the tablist
effect:
	patterns:
		set tab[list] score of %player% to %number% for %player%

#Show Particle
#Show particle by:
#* Player
#* Location
#* Amount
#* Particle Type
#This will display a particle at a given location for a player. This is client side!
#[List of particles](https://gist.github.com/eyesniper2/935315532ef05fc56656)
effect:
	patterns:
		show %number% %string% particle[s] at %location% for %player% [offset by %number%, %number%( and|,) %number%]

#Show/Unhide Bossbar
#Show a hidden ID based Bossbar.
effect:
	patterns:
		(show|display|unhide) bossbar %string%

#Text Effect
#Creates an EffectLib text effect.
#Examples:
#command /texteffect:
#	trigger:
#		apply the text effect with text "Text Effect" as Redstone to player with id "texteffecttest"
effect:
	patterns:
		(spawn|create|apply) (a|the|an) text (effect|formation) with text %string% as %visualeffects% (at|on|for|to) %entities/location% with id %string%[(,| and) %number% large]

#Tornado Effect
#Creates an EffectLib tornado effect.
effect:
	patterns:
		(spawn|create|apply) (a|the|an) tornado (effect|formation) at %entity/location% with id %string% [with tornado particle[s] %visualeffects% and cloud particle[s] %visualeffects%] [(set|and) radius %number%] [(set|and) max height %number%]

#Unglow/Stop Glowing
#Remove the glowing effect from the player.
#Examples:
#command /playerglow:
#	trigger:
#		make player glow
#		wait 5 seconds
#		make player stop glowing
effect:
	patterns:
		make %player% (unglow|stop glowing)

#Update Group Score
#Updates a group based score.
effect:
	patterns:
		(edit|update) score [with][in] group [id] %string% to %string% and %number%

#Wave Effect
#Creates an EffectLib wave effect.
effect:
	patterns:
		(spawn|create|apply) (a|the|an) wave (effect|formation) at %entity/location% with id %string% [with particle[s] %visualeffects%]

#Wipe Below Name
#Wipe score below player by:
#* Scoreboard
#* Player
#This will wipe the score below the player
effect:
	patterns:
		(wipe|erase) below score[s] for %player%

#Wipe Tablist Score
#Wipe tablist score by:
#* Scoreboard
#* Player
#This will remove the score from a player in the tablist
effect:
	patterns:
		(wipe|erase|delete) %player%['s] tab[list]

#Wipe/Delete/Remove Sidebar
#Delete a sidebar by:
#* Scoreboard
#* Player
#This will completely wipe a specified player's sidebar deleting all scores and the name of the sidebar.
effect:
	patterns:
		(wipe|erase|delete) %player%['s] sidebar

#Citizen is
#Checks if a citizen has a certain ID.
#Citizens
condition:
	patterns:
		(NPC|Citizen) is %number%
		%entity% is (citizen|npc) %number%
		%entity% is [a] (npc|citizen)

#Citizen is named
#Check citizen by:
#* Name
#A conditional check using citizens names over id numbers
#Citizens
condition:
	patterns:
		(NPC|Citizen)['s] [is] name[d] [is] %string%

#Is Glowing
#Check to see if a player is currently glowing
#since 1.9.13
condition:
	patterns:
		%player% glowing

#Sidebar Is Set
#Check if sidebar:
#* Is set
#* For player
#This will check if a sidebar is being displayed to a player
condition:
	patterns:
		side bar is set for %player%

#On Crafting Click
event "crafting_click":
	patterns:
		[on] crafting click in slot %number%
	event-values: inventoryaction, clicktype, string, world, slot, inventory, player, itemstack, itemtype

#On NPC/Citizen Death
event "npccitizen_death":
	patterns:
		[on] (NPC|Citizen) death
	event-values: object

#On NPC/Citizen Left Click
event "npccitizen_left_click":
	patterns:
		[on] (NPC|Citizen) left click
	event-values: object, number, player

#On NPC/Citizen Right Click
event "npccitizen_right_click":
	patterns:
		[on] (NPC|Citizen) right click
	event-values: object, number, player

#On On Store
event "on_store":
	patterns:
		[on] (store|chest add)
	event-values: inventory, player, itemstack

#On On Unstore
event "on_unstore":
	patterns:
		[on] (unstore|chest remove)
	event-values: inventory, player, itemstack

#On armorstand damage
event "armorstand_damage":
	patterns:
		[on] armo[u]r stand damage
	event-values: player, entity

#Absolute Amount of Items
#Get the number of items in a player’s inventory that are an absolute match to a sample item. To match they must have the same enchants, name and lore.
expression:
	patterns:
		(absolute|complex|abs) number of %itemstack% in %player%['s] (inventory|inv)
	return type: Number
#Armor Value
#Get a players armor value.
expression:
	patterns:
		%player%['s] armo[u]r value
	return type: Number
#Citizen ID
#Get the id number of a citizen from an entity.
#Citizens
expression:
	patterns:
		citizen id of %entity%
	return type: Number
#Citizen Owner
#Gets the owner of a citizen.
#Citizens
expression:
	patterns:
		owner of (citizen|npc) %number%
	return type: Text
#Convert Text to Location
#Convert a comma separated string of x, y and z cords into a location. eg. "1.3,4.5,1.5" to a location
expression:
	patterns:
		%string% converted to location
	return type: Location
#General Citizen
#Get the general entity for a citizen
#Citizens
expression:
	patterns:
		citizen %number%
	add:
#		(internal code)
	remove:
#		(internal code)
	remove all:
#		(internal code)
	return type: Entity
#Group Score Value
#These expressions will get either the name or value of a group based score.
expression:
	patterns:
		group score (name|title) (of|from) id %string%
		group score (value|number) (of|from) id %string%
	return type: Text
#Info of Enchantment
#Get the presentable info of a specific enchantment number of an item.
expression:
	patterns:
		info of enchant[ment] %number% (of|on) %itemstack%
	return type: Text
#Last Created Citizen ID
#Checks for:
#* The last created citizen
#You can use this to check the ID of the last created citizen good for if you want to check the unique ID of a citizen you just created
#Examples:
#command /npctest <text>:
#	trigger:
#		create a citizen named "%arg 1%" at location of player as a player
#		message "%last created citizen%"
#Citizens
expression:
	patterns:
		last created citizen [id]
	return type: Number
#Meta Data
#Get the meta data value for an entity
expression:
	patterns:
		meta %string% for %entity%
	return type: Text
#Name of Citizen
#Used for:
#* Checking citizen names
#* Changing citizen names
#This will allow you to check and set an NPC's name
#Citizens
expression:
	patterns:
		name of citizen %number%
	return type: Text
#Name/Title of Sidebar
#Get the name/title of a players side bar.
expression:
	patterns:
		sidebar (title|name) for %player%
	return type: Text
#No NBT
#Removes all NBT tags by:
#Item Stack
#Using this expression will remove all vanilla minecraft lore from an item. For example a diamond sword would not show the vanilla +7 damage in the lore anymore
expression:
	patterns:
		%itemstacks% with no nbt
	return type: Item / Material
#Number of Enchantments
#Get the number of enchantments on an item.
expression:
	patterns:
		number of enchant[ment]s on %itemstack%
	return type: Number
#Shiny Item
#Show Items by:
#* Glow
#Makes an item glow as an enchanted item but without the lore
#Examples:
#give player shiny diamond
expression:
	patterns:
		shiny %itemstacks%
	return type: Item / Material
#Single ID Score Value
#These expressions will get either the name or value of a ID based score.
expression:
	patterns:
		score (name|title) (of|from) id %string%
		score (value|number) (of|from) id %string%
	return type: Text
#Title/Name of BossBar
#Get the name of an ID based Bossbar.
expression:
	patterns:
		(title|name) of bossbar %string%
	return type: Text
#Value/Progress of Bossbar
#Get the value of an ID based Bossbar.
expression:
	patterns:
		(value|progress) of bossbar %string%
	return type: Number
#skRayFall Offhand
#Manipulate items in the players offhand/secondary hand.
#Examples:
#command /offhand:
#	trigger:
#		broadcast "%player's offhand%"
#		set player's offhand to 1 diamond block
expression:
	patterns:
		%player%['s] offhand
		item in %player%['s] offhand
	set:
#		(internal code)
	return type: Item / Material