#AUTOMATIC GENERATED SKRIPT FILE
#COPYRIGHT JOHN HEIKENS

#EffCreateFile
effect:
	patterns:
		[skutil[ities] ]create ((script|program|app[lication]|[zip ]file)|dir[ectory]) %string%

#EffDeleteFile
effect:
	patterns:
		[skutil[ities] ]delete ((script|program|app[lication]|[zip ]file)|dir[ectory]) %string%

#EffFileDownload
effect:
	patterns:
		[skutil[ities] ]download file from %string% to file %string%

#EffFileRenameMove
effect:
	patterns:
		[skutil[ities] ](rename (file|dir[ectory])|move file|copy file|move dir[ectory]|copy dir[ectory]) %string% to %string%

#EffInsertLine
effect:
	patterns:
		[skutil[ities] ]write %string% at line %numbers% to file %string%

#EffReloadConfig
effect:
	patterns:
		reload %string%'s config
		reload config of %string%

#EffReloadSkript
effect:
	patterns:
		[skutil[ities] ]reload s(k|c)ript %string%

#EffRestartServer
effect:
	patterns:
		[skutil[ities] ]re(start|load) server

#EffRunApp
effect:
	patterns:
		[skutil[ities] ]run (script|program|app[lication]|file) at %string%

#EffRunCmd
effect:
	patterns:
		[skutil[ities] ]run (bash|batch|sh) (command|cmd) %string%

#EffRunOpCmd
effect:
	patterns:
		[skutil[ities] ](force|make) %player% run (cmd|command) %string% as op

#EffSkReloadAliases
effect:
	patterns:
		[skutil[ities] ]skript reload aliases

#EffUnzip
effect:
	patterns:
		[skutil[ities] ](unzip|extract) %string% to dir[ectory] %string%

#EffZipDirectory
effect:
	patterns:
		[skutil[ities] ]zip dir[ectory] %string% to zip[ file] %string%

#EffZipFiles
effect:
	patterns:
		[skutil[ities] ]zip file[s] %strings% to zip[ file] %string%

#CondFileExists
condition:
	patterns:
		[skutil[ities] ](script|program|app[lication]|file|dir[ectory]) %string% exists
		[skutil[ities] ](script|program|app[lication]|file|dir[ectory]) %string% does(n't| not) exist

#CondIsDirectory
condition:
	patterns:
		[skutil[ities] ]file %string% is a dir[ectory]
		[skutil[ities] ]file %string% is(n'| no)t a dir[ectory]

#CondIsExecutable
condition:
	patterns:
		[skutil[ities] ]file %string% is(n't| not) exec[utable]
		[skutil[ities] ]file %string% is exec[utable]

#CondIsFile
condition:
	patterns:
		[skutil[ities] ]file %string% is a file
		[skutil[ities] ]file %string% is(n'| no)t a file

#CondIsSymbolic
condition:
	patterns:
		[skutil[ities] ]file %string% is (symbolic|shortcut)
		[skutil[ities] ]file %string% is(n'| no)t (symbolic|shortcut)

#CondStartsEndsWith
condition:
	patterns:
		[skutil[ities] ]%string% (starts|ends) with %string%
		[skutil[ities] ]%string% does(n't| not) (start|end) with %string%

#CondYamlExists
condition:
	patterns:
		[skutil[ities] ]y[a]ml[ path] %string% in file %string% exists
		[skutil[ities] ]y[a]ml[ path] %string% in file %string% does(n't| not) exist

#CondisOS
condition:
	patterns:
		[skutil[ities] ](operating system|os) is (windows|mac|linux|unix|solaris|sun os|hp ux|aix|irix|free bsd|open bsd|net bsd)
		[skutil[ities] ](operating system|os) is(n'| no)t (windows|mac|linux|unix|solaris|sun os|hp ux|aix|irix|free bsd|open bsd|net bsd)

#CondisTimeZone
condition:
	patterns:
		[skutil[ities] ]server is time[ ]zone %string%
		[skutil[ities] ]server is(n'| no)t time[ ]zone %string%

#On DownloadFile
event "downloadfile":
	patterns:
		[on] [skutil[ities] ]file download
	event-values: object, string

#On FileCopy
event "filecopy":
	patterns:
		[on] [skutil[ities] ]file copy
	event-values: object, string

#On FileCreation
event "filecreation":
	patterns:
		[on] [skutil[ities] ]file creat(ion|e)
	event-values: object

#On FileDeletion
event "filedeletion":
	patterns:
		[on] [skutil[ities] ]file delet(ion|e)
	event-values: object

#On FileMove
event "filemove":
	patterns:
		[on] [skutil[ities] ]file move
	event-values: object, string

#On FileRename
event "filerename":
	patterns:
		[on] [skutil[ities] ]file rename
	event-values: object, string

#On FileWipe
event "filewipe":
	patterns:
		[on] [skutil[ities] ]file (wipe|reset|clear)
	event-values: object

#On FileWrite
event "filewrite":
	patterns:
		[on] [skutil[ities] ]file write
	event-values: object, string, number

#On FileZip
event "filezip":
	patterns:
		[on] [skutil[ities] ]file zip
	event-values: object, string

#On RunApp
event "runapp":
	patterns:
		[on] [skutil[ities] ](file|app|script) (run|execute)
	event-values: object

#On RunCode
event "runcode":
	patterns:
		[on] [skutil[ities] ](bash|batch|sh) (command|cmd) (run|execute)
	event-values: string

#On Unzip
event "unzip":
	patterns:
		[on] [skutil[ities] ]unzip
	event-values: object, string

#ExprBase64
expression:
	patterns:
		[skutil[ities] ](en|de)code base[ ]64 %string%
	return type: text
#ExprCaseLength
expression:
	patterns:
		[skutil[ities] ]number of (upper|lower)case char[acter]s in %string%
	return type: number
#ExprClearAccented
expression:
	patterns:
		[skutil[ities] ]clear accented chars from %string%
	return type: text
#ExprCpuCores
expression:
	patterns:
		[skutil[ities] ]number of (cpu|processor) cores
		[skutil[ities] ](cpu|processor) core count
	return type: number
#ExprCpuSpec
expression:
	patterns:
		[skutil[ities] ](name|arch[itecture]) of (cpu|processor)
		[skutil[ities] ](cpu|processor) (name|arch[itecture])
	return type: text
#ExprDateInner
expression:
	patterns:
		[skutil[ities] ](year|month|month name|day of year|day of month|day of week|day name|hours|minutes|seconds) from date %date%
		[skutil[ities] ]date %date%'s (year|month|month name|day of year|day of month|day of week|day name|hours|minutes|seconds)
	return type: text
#ExprDateParsed
expression:
	patterns:
		[skutil[ities] ]%string% parsed as date[ formatted as %string%]
	return type: date
#ExprDateToUnix
expression:
	patterns:
		[skutil[ities] ]convert date %date% to unix[ date]
		[skutil[ities] ]date %date% as unix[ date]
	return type: number
#ExprDirList
expression:
	patterns:
		[skutil[ities] ]files in dir[ectory](| including sub dir[ectorie]s) %string%
		[skutil[ities] ]dir[ectory](| including sub dir[ectorie]s) %string%'s files
	return type: text
#ExprDiskSpace
expression:
	patterns:
		[skutil[ities] ]disk's (total|free|usable) space
		[skutil[ities] ](total|free|usable) space on disk
	return type: text
#ExprEncrypt
expression:
	patterns:
		[skutil[ities] ](en|de)crypt %string% using %string% with key %string%
	return type: text
#ExprFile
expression:
	patterns:
		[event-]file
	return type: object
#ExprFileDirSize
expression:
	patterns:
		[skutil[ities] ]size of (file|dir[ectory]) %string%
		[skutil[ities] ](file|dir[ectory]) %string%'s size
	return type: text
#ExprFileDirSizeBytes
expression:
	patterns:
		[skutil[ities] ]size of (file|dir[ectory]) %string% in bytes
		[skutil[ities] ](file|dir[ectory]) %string%'s size in bytes
	return type: number
#ExprFileLines
expression:
	patterns:
		[skutil[ities] ]line count of file %string%
		[skutil[ities] ]file %string%'s line count
	return type: number
#ExprFileNameExt
expression:
	patterns:
		[skutil[ities] ](name|extension) of file %string%
		[skutil[ities] ]file %string%'s (name|extension)
	return type: text
#ExprFileTimeAttributes
expression:
	patterns:
		[skutil[ities] ]file %string%'s (last modified|creation|last access) value
		[skutil[ities] ](last modified|creation|last access) value of file %string%
	return type: number
#ExprFromBin
expression:
	patterns:
		[skutil[ities] ]convert bin[ary] %string% to ((text|string)|decimal|hexa[decimal]|octal)
		[skutil[ities] ]bin[ary] %string% as ((text|string)|decimal|hexa[decimal]|octal)
	return type: text
#ExprFromString
expression:
	patterns:
		[skutil[ities] ]convert (text|string) %string% to (ascii|unicode)
		[skutil[ities] ](text|string) %string% as (ascii|unicode)
	return type: text
#ExprFromUnicode
expression:
	patterns:
		[skutil[ities] ]convert unicode %string% to ((text|string)|ascii)
		[skutil[ities] ]unicode %string% as ((text|string)|ascii)
	return type: text
#ExprGetJsonIDS
expression:
	patterns:
		[skutil[ities] ]content of json value( |'s) %strings% from text %string%
		[skutil[ities] ]value's %strings%'s json contents from text %string%
	return type: text
#ExprGetPathASR
expression:
	patterns:
		[skutil[ities] ]((absolute|complete)|short|relative) path of %string%
		[skutil[ities] ]%string%'s ((absolute|complete)|short|relative) path
	return type: text
#ExprGetRegion
expression:
	patterns:
		[skutil[ities] ]region of server
		[skutil[ities] ]server's region
	return type: text
#ExprGetSysProp
expression:
	patterns:
		[skutil[ities] ]system property (os arch|os name|os version|java home|user dir|user home|user name|user lang[uage]|user timezone|line separator|file separator|path separator|file encoding)
	return type: text
#ExprGetTimeZone
expression:
	patterns:
		[skutil[ities] ]time[ ]zone of server
		[skutil[ities] ]server's time[ ]zone
	return type: text
#ExprHash
expression:
	patterns:
		[skutil[ities] ]hash[ed] %string% using %string%
	return type: text
#ExprHexToRgb
expression:
	patterns:
		[skutil[ities] ]convert hex %string% to rgb
		[skutil[ities] ]hex %string% as rgb
	return type: text
#ExprHexaToNum
expression:
	patterns:
		[skutil[ities] ]convert hexa[decimal] %string% to num[ber]
		[skutil[ities] ]hexa[decimal] %string% as num[ber]
	return type: number
#ExprLoaded
expression:
	patterns:
		[skutil[ities] ]number of[ loaded] ((commands|cmds)|functions|s(c|k)ripts|triggers|statements|variables|aliases|events|effects|expressions|conditions)
	return type: number
#ExprLoadedList
expression:
	patterns:
		[skutil[ities] ](plugins|addons) list
		[skutil[ities] ]list of (plugins|addons)
	return type: text
#ExprMirrorTxt
expression:
	patterns:
		[skutil[ities] ](mirror[ed]|flip[ped]|reverse[d]) %string%
	return type: text
#ExprMorse
expression:
	patterns:
		[skutil[ities] ](en|de)code morse[ code] %string%
	return type: text
#ExprNumToHexa
expression:
	patterns:
		convert num[ber] %number% to hexa[decimal]
		[skutil[ities] ]num[ber] %number% as hexa[decimal]
	return type: text
#ExprRam
expression:
	patterns:
		[skutil[ities] ](free|total|max) (ram|memory)
	return type: number
#ExprRandomizeString
expression:
	patterns:
		[skutil[ities] ]randomize %string%
	return type: text
#ExprRgbToHex
expression:
	patterns:
		[skutil[ities] ]convert rgb %number%, %number%, %number% to hex
		[skutil[ities] ]rgb %number%, %number%, %number% as hex
	return type: text
#ExprRunCmdOutput
expression:
	patterns:
		[skutil[ities] ][last ]output of executed (bash|batch|sh) (command|cmd)
		[skutil[ities] ][last ]executed (bash|batch|sh) (command|cmd)'s output
	return type: text
#ExprSysTime
expression:
	patterns:
		[skutil[ities] ][current ]system (nanos[econds]|millis[econds]|seconds)
	return type: number
#ExprTimeInTimeZone
expression:
	patterns:
		[skutil[ities] ][current ]time in time[ ]zone %string%
		[skutil[ities] ][current ]time[ ]zone %string%'s time
	return type: text
#ExprTimeZoneList
expression:
	patterns:
		[skutil[ities] ][all ]time[ ]zones
	return type: text
#ExprToAscii
expression:
	patterns:
		[skutil[ities] ]convert ascii %numbers% to ((text|string)|unicode)
		[skutil[ities] ]ascii %numbers% as ((text|string)|unicode)
	return type: text
#ExprToBin
expression:
	patterns:
		[skutil[ities] ]convert ((text|string)|decimal|hexa[decimal]|octal) %string% to bin[ary]
		[skutil[ities] ]((text|string)|decimal|hexa[decimal]|octal) %string% as bin[ary]
	return type: text
#ExprToUpperLower
expression:
	patterns:
		[skutil[ities] ]convert (text|string) %string% to (uppercase|lowercase)
	return type: text
#ExprUnixToDate
expression:
	patterns:
		[skutil[ities] ]convert unix[ date] %number% to date
		[skutil[ities] ]unix[ date] %number% as date
	return type: date
#ExprUnixToFormattedDate
expression:
	patterns:
		[skutil[ities] ]convert unix[ date] %number% to date formatted as %string%
		[skutil[ities] ]unix[ date] %number% as date formatted as %string%
	return type: text
#ExprUrlContents
expression:
	patterns:
		[skutil[ities] ]contents from url %string%
		[skutil[ities] ]url %string%'s contents
	return type: text
#ExprUrlLastModified
expression:
	patterns:
		[skutil[ities] ]last modified value of url %string%
		[skutil[ities] ]url %string%'s last modified value
	return type: number
#ExprUrlLines
expression:
	patterns:
		[skutil[ities] ]line count of url %string%
		[skutil[ities] ]url %string%'s line count
	return type: number
#ExprUrlOnlineState
expression:
	patterns:
		[skutil[ities] ]online stat(us|e) of url %string%
		[skutil[ities] ]url %string%'s online stat(us|e)
	return type: boolean
#ExprUrlReadLine
expression:
	patterns:
		[skutil[ities] ]line %number% from url %string%
		[skutil[ities] ]url %string%'s line %number%
	return type: text
#ExprUrlResponseCode
expression:
	patterns:
		[skutil[ities] ]response code of url %string%
		[skutil[ities] ]url %string%'s response code
	return type: integer
#ExprUrlSSLAlgorithm
expression:
	patterns:
		[skutil[ities] ]ssl algorithm of url %string%
		[skutil[ities] ]url %string%'s ssl algorithm
	return type: text
#ExprUrlSSLIssueExpire
expression:
	patterns:
		[skutil[ities] ]ssl (issue|expire) value of url %string%
		[skutil[ities] ]url %string%'s ssl (issue|expire) value
	return type: number
#ExprUrlSSLSerialNumber
expression:
	patterns:
		[skutil[ities] ]ssl serial number of url %string%
		[skutil[ities] ]url %string%'s ssl serial number
	return type: text
#ExprUrlSSLVerifier
expression:
	patterns:
		[skutil[ities] ]ssl verifier of url %string%
		[skutil[ities] ]url %string%'s ssl verifier
	return type: text
#ExprUrlSSLVersion
expression:
	patterns:
		[skutil[ities] ]ssl version of url %string%
		[skutil[ities] ]url %string%'s ssl version
	return type: number
#ExprUrlSize
expression:
	patterns:
		[skutil[ities] ]size of url %string%
		[skutil[ities] ]url %string%'s size
	return type: text
#ExprUrlSizeBytes
expression:
	patterns:
		[skutil[ities] ]size of url %string% in bytes
		[skutil[ities] ]url %string%'s size in bytes
	return type: number
#ExprVersion
expression:
	patterns:
		[skutil[ities] ]%string%'s version
		[skutil[ities] ]version of %string%
	return type: text
#ExprZipList
expression:
	patterns:
		[skutil[ities] ]files in zip[ file] %string%
		[skutil[ities] ]zip[ file] %string%'s files
	return type: text
#SExprEditLine
expression:
	patterns:
		[skutil[ities] ]line %number% in file %string%
		[skutil[ities] ]file %string%'s line %number%
	set:
#		(internal code)
	return type: text
#SExprFileAttribute
expression:
	patterns:
		[skutil[ities] ](readable|writable|hidden) attribute of file %string%
		[skutil[ities] ]file %string%'s (readable|writable|hidden) attribute
	set:
#		(internal code)
	reset:
#		(internal code)
	return type: boolean
#SExprFileContents
expression:
	patterns:
		[skutil[ities] ]file contents of %string%
		[skutil[ities] ]%string%'s file contents
	set:
#		(internal code)
	reset:
#		(internal code)
	return type: text
#SExprFileOwner
expression:
	patterns:
		[skutil[ities] ]owner of file %string%
		[skutil[ities] ]file %string%'s owner
	set:
#		(internal code)
	return type: text
#SExprYaml
expression:
	patterns:
		[skutil[ities] ]y[a]ml (value|nodes|node[s with] keys|list) %string% (from|of) file %string%
	set:
#		(internal code)
	delete:
#		(internal code)
	return type: object