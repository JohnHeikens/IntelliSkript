#AUTOMATICALLY GENERATED SKRIPT FILE
#COPYRIGHT JOHN HEIKENS
#https://github.com/JohnHeikens/IntelliSkript

#LuckPerms - Add Prefix
#Adds prefix to player.
#Examples:
#add "[Owner]" with priority 100 to the prefixes of player
effect:
	patterns:
		add %string% with [a] priority [of] %number% to [the] [LuckPerm[s]] prefixes of %player%

#LuckPerms - Add Suffix
#Adds suffix to player.
#Examples:
#add "[Owner]" with priority 100 to the suffixes of player
effect:
	patterns:
		add %string% with [a] priority [of] %number% to [the] [LuckPerm[s]] suffixes of %player%

#LuckPerms - Remove Prefix
#Removes prefix to player.
#Examples:
#remove "[Owner]" with priority 100 from the prefixes of player
effect:
	patterns:
		remove %string% with [a] priority [of] %number% from [the] [LuckPerm[s]] prefixes of %player%

#LuckPerms - Remove Suffix
#Removes suffix from player.
#Examples:
#remove "[Owner]" with priority 100 from the suffixes of player
effect:
	patterns:
		remove %string% with [a] priority [of] %number% from [the] [LuckPerm[s]] suffixes of %player%

#On LuckPerms - Demote Event
#Called when a player is demoted.
#Examples:
#on luckperms demote:
#	broadcast "%event-offlineplayer% was demoted from %event-string% to %luckperms group of player%!"
event "luckperms_-_demote_event":
	patterns:
		[on] [LuckPerm[s]] [player] demot(e|ion)
	event-values: offlineplayer, string

#On LuckPerms - Group Change
#Called when a player's group changes.
#Examples:
#on luckperms group change:
#	broadcast "group of %event-offlineplayer% changed from %old group% to %new group%!"
event "luckperms_-_group_change":
	patterns:
		[on] [LuckPerm[s]] [player] group change
	event-values: offlineplayer, string

#On LuckPerms - Promote Event
#Called when a player is promoted.
#Examples:
#on luckperms promote:
#	broadcast "%event-offlineplayer% was promoted from %event-string% to %luckperms group of player%!"
event "luckperms_-_promote_event":
	patterns:
		[on] [LuckPerm[s]] [player] promot(e|ion)
	event-values: offlineplayer, string

#LuckPerms - All Groups
#Returns the names of all groups.
#Examples:
#send "%the luckperms groups%"
expression:
	patterns:
		[[the] names of] [(all [[of] the]|the)] [LuckPerm[s]] groups
	return type: text
#LuckPerms - Group of Player
#Returns the group of a player.
#Examples:
#send "%the luckperms group of player%"
expression:
	patterns:
		[the] [LuckPerm[s]] [primary] group of %player%
		%player%'s [primary] [LuckPerm[s]] group
	set:
#		(internal code)
	return type: text
#LuckPerms - New Group
#Returns the new group of a player in the group change event.
expression:
	patterns:
		[the] new [LuckPerm[s]] group [of [the] player]
		[the] player's new [LuckPerm[s]] group
	return type: text
#LuckPerms - Old Group
#Returns the old group of a player in the group change event.
expression:
	patterns:
		[the] old [LuckPerm[s]] group [of [the] player]
		[the] player's old [LuckPerm[s]] group
	return type: text
#LuckPerms - Permissions of Group
#Returns the permissions of a group.
#Examples:
#set {default::perms::*} to the permissions of the luckperms group "default"
expression:
	patterns:
		[(all [[of] the]|the)] perm[ission][s] of [the] [LuckPerm[s]] group [(named|with name)] %string%
		[all of] [the] [LuckPerm[s]] group [(named|with name)] %string%'s perm[ission][s]
	add:
#		(internal code)
	remove:
#		(internal code)
	delete:
#		(internal code)
	reset:
#		(internal code)
	return type: text
#LuckPerms - Permissions of Player
#Returns the permissions of a player.
#Examples:
#send "%the luckperms permissions of player%"
expression:
	patterns:
		[the] [LuckPerm[s]] perm[ission][s] of [player] %player%
		[player] %player%'s [LuckPerm[s]] perm[ission][s]
	add:
#		(internal code)
	remove:
#		(internal code)
	delete:
#		(internal code)
	reset:
#		(internal code)
	return type: text
#LuckPerms - Prefix of Player
#Returns the prefix of a player.
#Examples:
#send "%the luckperms prefix of player%"
expression:
	patterns:
		[the] [active] [LuckPerm[s]] prefix of %player%
		%player%'s [active] [LuckPerm[s]] prefix
		[the] [active] [LuckPerm[s]] suffix of %player%
		%player%'s [active] [LuckPerm[s]] suffix
	return type: text
#LuckPerms - Weight of Group
#Returns the weight of a group.
#Examples:
#set {default::weight} to the weight of the luckperms group "default"
expression:
	patterns:
		[the] (priority|weight) of [the] [LuckPerm[s]] group [(named|with name)] %string%
		[the] [LuckPerm[s]] group [(named|with name)] %string%'s (priority|weight)
	set:
#		(internal code)
	return type: number