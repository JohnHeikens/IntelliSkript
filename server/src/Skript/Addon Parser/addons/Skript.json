{
  "events": [
    {
      "id": "at_time",
      "name": "At Time",
      "description": [
        "An event that occurs at a given minecraft time in every world or only in specific worlds."
      ],
      "examples": [
        "at 18:00",
        "at 7am in \"world\""
      ],
      "since": [
        "1.3.4"
      ],
      "patterns": [
        "at %time% [in %worlds%]"
      ],
      "event values": [
        "event-world"
      ],
      "cancellable": false
    },
    {
      "id": "aoe_cloud_effect",
      "name": "On AoE Cloud Effect",
      "description": [
        "Called when area effect cloud applies its potion effect. This happens every 5 ticks by default."
      ],
      "examples": [
        "on area cloud effect:"
      ],
      "since": [
        "2.2-dev21"
      ],
      "patterns": [
        "[on] (area|AoE) [cloud] effect"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-potioneffecttype",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "arm_swing",
      "name": "On Arm Swing",
      "description": [
        "Called when a player swings his arm."
      ],
      "examples": [
        "on arm swing:",
        "\tsend \"You swung your arm!\""
      ],
      "since": [
        "2.5.1"
      ],
      "patterns": [
        "[on] [player] arm swing"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "armor_change",
      "name": "On Armor Change",
      "description": [
        "Called when armor pieces of a player are changed."
      ],
      "examples": [
        "on armor change:",
        "\tsend \"You equipped %event-item%!\""
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "[on] [player] armor change[d]"
      ],
      "event values": [
        "event-world",
        "event-player",
        "event-itemtype"
      ],
      "cancellable": false,
      "required plugins": [
        "Paper"
      ]
    },
    {
      "id": "bed_enter",
      "name": "On Bed Enter",
      "description": [
        "Called when a player starts sleeping."
      ],
      "examples": [
        "on bed enter:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] bed enter[ing]",
        "[on] [player] enter[ing] [a] bed"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "bed_leave",
      "name": "On Bed Leave",
      "description": [
        "Called when a player leaves a bed."
      ],
      "examples": [
        "on player leaving a bed:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] bed leav(e|ing)",
        "[on] [player] leav(e|ing) [a] bed"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "block_damage",
      "name": "On Block Damage",
      "description": [
        "Called when a player starts to break a block. You can usually just use the leftclick event for this."
      ],
      "examples": [
        "on block damaging:",
        "\tif block is log:",
        "\t\tsend \"You can't break the holy log!\""
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] block damag(ing|e)"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-player",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "block_fertilize",
      "name": "On Block Fertilize",
      "description": [
        "Called when a player fertilizes blocks."
      ],
      "examples": [
        "on block fertilize:",
        "\tsend \"Fertilized %size of fertilized blocks% blocks got fertilized.\""
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "[on] [block] fertilize"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-player",
        "event-location"
      ],
      "cancellable": true,
      "required plugins": [
        "Minecraft 1.13 or newer"
      ]
    },
    {
      "id": "block_growth",
      "name": "On Block Growth",
      "description": [
        "Called when a crop grows. Alternative to new form of generic grow event."
      ],
      "examples": [
        "on crop growth:"
      ],
      "since": [
        "2.2-Fixes-V10"
      ],
      "patterns": [
        "[on] (plant|crop|block) grow[(th|ing)] [[of] %itemtypes%]"
      ],
      "event values": [
        "past event-block",
        "event-block",
        "event-world",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "book_edit",
      "name": "On Book Edit",
      "description": [
        "Called when a player edits a book."
      ],
      "examples": [
        "on book edit:"
      ],
      "since": [
        "2.2-dev31"
      ],
      "patterns": [
        "[on] book (edit|change|write)"
      ],
      "event values": [
        "event-world",
        "event-player",
        "event-itemtype"
      ],
      "cancellable": true
    },
    {
      "id": "book_sign",
      "name": "On Book Sign",
      "description": [
        "Called when a player signs a book."
      ],
      "examples": [
        "on book sign:"
      ],
      "since": [
        "2.2-dev31"
      ],
      "patterns": [
        "[on] book sign[ing]"
      ],
      "event values": [
        "event-world",
        "event-player",
        "event-itemtype"
      ],
      "cancellable": true
    },
    {
      "id": "break_mine",
      "name": "On Break / Mine",
      "description": [
        "Called when a block is broken by a player. If you use 'on mine', only events where the broken block dropped something will call the trigger."
      ],
      "examples": [
        "on mine:",
        "on break of stone:",
        "on mine of any ore:",
        "on break of chest[facing=north]:",
        "on break of potatoes[age=7]:"
      ],
      "since": [
        "1.0 (break), unknown (mine), 2.6 (BlockData support)"
      ],
      "patterns": [
        "[on] [block] (break[ing]|min(e|ing)) [[of] %itemtypes/blockdatas%]"
      ],
      "event values": [
        "past event-block",
        "event-block",
        "event-world",
        "event-player",
        "event-entity",
        "event-entity",
        "event-location",
        "future event-block"
      ],
      "cancellable": true,
      "required plugins": [
        "Minecraft 1.13+ (BlockData)"
      ]
    },
    {
      "id": "bucket_empty",
      "name": "On Bucket Empty",
      "description": [
        "Called when a player empties a bucket. You can also use the place event with a check for water or lava."
      ],
      "examples": [
        "on bucket empty:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] bucket empty[ing]",
        "[on] [player] empty[ing] [a] bucket"
      ],
      "event values": [
        "past event-block",
        "event-block",
        "event-world",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "bucket_fill",
      "name": "On Bucket fill",
      "description": [
        "Called when a player fills a bucket."
      ],
      "examples": [
        "on player filling a bucket:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] bucket fill[ing]",
        "[on] [player] fill[ing] [a] bucket"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-player",
        "future event-block"
      ],
      "cancellable": true
    },
    {
      "id": "burn",
      "name": "On Burn",
      "description": [
        "Called when a block is destroyed by fire."
      ],
      "examples": [
        "on burn:",
        "on burn of wood, fences, or chests:",
        "on burn of oak_log[axis=y]:"
      ],
      "since": [
        "1.0, 2.6 (BlockData support)"
      ],
      "patterns": [
        "[on] [block] burn[ing] [[of] %itemtypes/blockdatas%]"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-location"
      ],
      "cancellable": true,
      "required plugins": [
        "Minecraft 1.13+ (BlockData)"
      ]
    },
    {
      "id": "can_build_check",
      "name": "On Can Build Check",
      "description": [
        "Called when a player rightclicks on a block while holding a block or a placeable item. You can either cancel the event to prevent the block from being built, or uncancel it to allow it.",
        "Please note that the data value of the block to be placed is not available in this event, only its ID."
      ],
      "examples": [
        "on block can build check:",
        "\tcancel event"
      ],
      "since": [
        "1.0 (basic), 2.0 ([un]cancellable)"
      ],
      "patterns": [
        "[on] [block] can build check"
      ],
      "event values": [
        "past event-block",
        "event-block",
        "event-world",
        "event-player",
        "event-location"
      ],
      "cancellable": false
    },
    {
      "id": "chat",
      "name": "On Chat",
      "description": [
        "Called whenever a player chats. Use chat format to change message format, use chat recipients to edit chat recipients."
      ],
      "examples": [
        "on chat:",
        "\tif player has permission \"owner\":",
        "\t\tset chat format to \"&lt;red&gt;[player]&lt;light gray&gt;: &lt;light red&gt;[message]\"",
        "\telse if player has permission \"admin\":",
        "\t\tset chat format to \"&lt;light red&gt;[player]&lt;light gray&gt;: &lt;orange&gt;[message]\"",
        "\telse: #default message format",
        "\t\tset chat format to \"&lt;orange&gt;[player]&lt;light gray&gt;: &lt;white&gt;[message]\""
      ],
      "since": [
        "1.4.1"
      ],
      "patterns": [
        "[on] chat"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "chunk_generate",
      "name": "On Chunk Generate",
      "description": [
        "Called after a new chunk was generated."
      ],
      "examples": [
        "on chunk generate:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] chunk (generat|populat)(e|ing)"
      ],
      "event values": [
        "event-chunk",
        "event-world"
      ],
      "cancellable": false
    },
    {
      "id": "chunk_load",
      "name": "On Chunk Load",
      "description": [
        "Called when a chunk loads. The chunk might or might not contain mobs when it's loaded."
      ],
      "examples": [
        "on chunk load:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] chunk load[ing]"
      ],
      "event values": [
        "event-chunk",
        "event-world"
      ],
      "cancellable": false
    },
    {
      "id": "chunk_unload",
      "name": "On Chunk Unload",
      "description": [
        "Called when a chunk is unloaded due to not being near any player."
      ],
      "examples": [
        "on chunk unload:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] chunk unload[ing]"
      ],
      "event values": [
        "event-chunk",
        "event-world"
      ],
      "cancellable": false
    },
    {
      "id": "click",
      "name": "On Click",
      "description": [
        "Called when a user clicks on a block, an entity or air with or without an item in their hand.",
        "Please note that rightclick events with an empty hand while not looking at a block are not sent to the server, so there's no way to detect them."
      ],
      "examples": [
        "on click:",
        "on rightclick holding a fishing rod:",
        "on leftclick on a stone or obsidian:",
        "on rightclick on a creeper:",
        "on click with a sword:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] [(right|left)(| |-)][mouse(| |-)]click[ing] [on %entitydata/itemtype%] [(with|using|holding) %itemtype%]",
        "[on] [(right|left)(| |-)][mouse(| |-)]click[ing] (with|using|holding) %itemtype% on %entitydata/itemtype%"
      ],
      "event values": [
        "event-direction",
        "event-block",
        "event-world",
        "event-player",
        "event-entity",
        "event-itemtype"
      ],
      "cancellable": true
    },
    {
      "id": "combust",
      "name": "On Combust",
      "description": [
        "Called when an entity is set on fire, e.g. by fire or lava, a fireball, or by standing in direct sunlight (zombies, skeletons)."
      ],
      "examples": [
        "on combust:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] combust[ing]"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "command",
      "name": "On Command",
      "description": [
        "Called when a player enters a command (not necessarily a Skript command) but you can check if command is a skript command, see Is a Skript command condition."
      ],
      "examples": [
        "on command:",
        "on command \"/stop\":",
        "on command \"pm Njol \":"
      ],
      "since": [
        "2.0"
      ],
      "patterns": [
        "[on] command [%string%]"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "connect",
      "name": "On Connect",
      "description": [
        "Called when the player connects to the server. This event is called before the player actually joins the server, so if you want to prevent players from joining you should prefer this event over on join."
      ],
      "examples": [
        "on connect:",
        "\tplayer doesn't have permission \"VIP\"",
        "\tnumber of players is greater than 15",
        "\tkick the player due to \"The last 5 slots are reserved for VIP players.\""
      ],
      "since": [
        "2.0"
      ],
      "patterns": [
        "[on] [player] connect[ing]"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": false
    },
    {
      "id": "consume",
      "name": "On Consume",
      "description": [
        "Called when a player is done eating/drinking something, e.g. an apple, bread, meat, milk or a potion."
      ],
      "examples": [
        "on consume:"
      ],
      "since": [
        "2.0"
      ],
      "patterns": [
        "[on] [player] ((eat|drink)[ing]|consum(e|ing)) [[of] %itemtypes%]"
      ],
      "event values": [
        "event-world",
        "event-player",
        "event-itemtype"
      ],
      "cancellable": true
    },
    {
      "id": "craft",
      "name": "On Craft",
      "description": [
        "Called when a player crafts an item."
      ],
      "examples": [
        "on craft:"
      ],
      "since": [
        "unknown (before 2.1)"
      ],
      "patterns": [
        "[on] [player] craft[ing] [[of] %itemtypes%]"
      ],
      "event values": [
        "event-inventoryaction",
        "event-clicktype",
        "event-string",
        "event-world",
        "event-slot",
        "event-inventory",
        "event-player",
        "event-itemstack",
        "event-itemtype"
      ],
      "cancellable": true
    },
    {
      "id": "creeper_power",
      "name": "On Creeper Power",
      "description": [
        "Called when a creeper is struck by lighting and gets powered. Cancel the event to prevent the creeper from being powered."
      ],
      "examples": [
        "on creeper power:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] creeper power"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "damage",
      "name": "On Damage",
      "description": [
        "Called when an entity receives damage, e.g. by an attack from another entity, lava, fire, drowning, fall, suffocation, etc."
      ],
      "examples": [
        "on damage:",
        "on damage of a player:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] damag(e|ing) [of %entitydata%]"
      ],
      "event values": [
        "event-damagecause",
        "event-projectile"
      ],
      "cancellable": true
    },
    {
      "id": "death",
      "name": "On Death",
      "description": [
        "Called when a living entity (including players) dies."
      ],
      "examples": [
        "on death:",
        "on death of player:",
        "on death of a wither or ender dragon:",
        "\tbroadcast \"A %entity% has been slain in %world%!\""
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] death [of %entitydatas%]"
      ],
      "event values": [
        "event-damagecause",
        "event-projectile"
      ],
      "cancellable": true
    },
    {
      "id": "dispense",
      "name": "On Dispense",
      "description": [
        "Called when a dispenser dispenses an item."
      ],
      "examples": [
        "on dispense of iron block:",
        "\tsend \"that'd be 19.99 please!\""
      ],
      "since": [
        "unknown (before 2.1)"
      ],
      "patterns": [
        "[on] dispens(e|ing) [[of] %itemtypes%]"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-itemtype",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "drop",
      "name": "On Drop",
      "description": [
        "Called when a player drops an item from their inventory."
      ],
      "examples": [
        "on drop:"
      ],
      "since": [
        "unknown (before 2.1)"
      ],
      "patterns": [
        "[on] [player] drop[ing] [[of] %itemtypes%]"
      ],
      "event values": [
        "event-world",
        "event-player",
        "event-itementity",
        "event-itemtype"
      ],
      "cancellable": true
    },
    {
      "id": "enchant",
      "name": "On Enchant",
      "description": [
        "Called when a player successfully enchants an item.",
        " To get the enchanted item, see the enchant item expression"
      ],
      "examples": [
        "on enchant:",
        "\tif the clicked button is 1: # offer 1",
        "\t\tset the applied enchantments to sharpness 10 and unbreaking 10"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "[on] [item] enchant"
      ],
      "event values": [
        "event-block",
        "event-player",
        "event-itemtype",
        "event-itemstack"
      ],
      "cancellable": true
    },
    {
      "id": "enchant_prepare",
      "name": "On Enchant Prepare",
      "description": [
        "Called when a player puts an item into enchantment table. This event may be called multiple times.",
        " To get the enchant item, see the enchant item expression"
      ],
      "examples": [
        "on enchant prepare:",
        "\tset enchant offer 1 to sharpness 1",
        "\tset the cost of enchant offer 1 to 10 levels"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "[on] [item] enchant prepare"
      ],
      "event values": [
        "event-block",
        "event-player",
        "event-itemtype"
      ],
      "cancellable": true
    },
    {
      "id": "endermansheepsilverfishfalling_block",
      "name": "On Enderman/Sheep/Silverfish/Falling Block",
      "description": [
        "Called when an enderman places or picks up a block, a sheep eats grass, ",
        "a silverfish boops into/out of a block or a falling block lands and turns into a block respectively."
      ],
      "examples": [
        "on sheep eat:",
        "\tkill entity",
        "\tbroadcast \"A sheep stole some grass!\"",
        "on falling block land:",
        "\tif event-entity is a falling dirt:",
        "\t\tcancel event"
      ],
      "since": [
        "unknown, 2.5.2 (falling block)"
      ],
      "patterns": [
        "[on] enderman place",
        "[on] enderman pickup",
        "[on] sheep eat",
        "[on] silverfish enter",
        "[on] silverfish exit",
        "[on] falling block land[ing]"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-itemstack",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "entity_dismount",
      "name": "On Entity Dismount",
      "description": [
        "Called when an entity dismounts."
      ],
      "examples": [
        "on dismount:",
        "\tkill event-entity"
      ],
      "since": [
        "2.2-dev13b"
      ],
      "patterns": [
        "[on] dismount[ing]"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "entity_mount",
      "name": "On Entity Mount",
      "description": [
        "Called when entity starts riding another."
      ],
      "examples": [
        "on mount:",
        "\tcancel event"
      ],
      "since": [
        "2.2-dev13b"
      ],
      "patterns": [
        "[on] mount[ing]"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "entity_portal",
      "name": "On Entity Portal",
      "description": [
        "Called when an entity uses a nether or end portal. Cancel the event to prevent the entity from teleporting."
      ],
      "examples": [
        "on entity portal:",
        "\tbroadcast \"A %type of event-entity% has entered a portal!"
      ],
      "since": [
        "2.5.3"
      ],
      "patterns": [
        "[on] entity portal"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "experience_spawn",
      "name": "On Experience Spawn",
      "description": [
        "Called whenever experience is about to spawn. This is a helper event for easily being able to stop xp from spawning, as all you can currently do is cancel the event.",
        "Please note that it's impossible to detect xp orbs spawned by plugins (including Skript) with Bukkit, thus make sure that you have no such plugins if you don't want any xp orbs to spawn. (Many plugins that only change the experience dropped by blocks or entities will be detected without problems though)"
      ],
      "examples": [
        "on xp spawn:",
        "\tworld is \"minigame_world\"",
        "\tcancel event"
      ],
      "since": [
        "2.0"
      ],
      "patterns": [
        "[on] [e]xp[erience] [orb] spawn",
        "[on] spawn of [a[n]] [e]xp[erience] [orb]"
      ],
      "event values": [
        "event-experience",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "explode",
      "name": "On Explode",
      "description": [
        "Called when an entity (a primed TNT or a creeper) explodes."
      ],
      "examples": [
        "on explosion:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] explo(d(e|ing)|sion)"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "explosion_prime",
      "name": "On Explosion Prime",
      "description": [
        "Called when an explosive is primed, i.e. an entity will explode shortly. Creepers can abort the explosion if the player gets too far away, while TNT will explode for sure after a short time."
      ],
      "examples": [
        "on explosion prime:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] explosion prime"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "fade",
      "name": "On Fade",
      "description": [
        "Called when a block 'fades away', e.g. ice or snow melts."
      ],
      "examples": [
        "on fade of snow or ice:",
        "on fade of snow[layers=2]"
      ],
      "since": [
        "1.0, 2.6 (BlockData support)"
      ],
      "patterns": [
        "[on] [block] fad(e|ing) [[of] %itemtypes/blockdatas%]"
      ],
      "event values": [
        "past event-block",
        "event-block",
        "event-world",
        "event-location",
        "future event-block"
      ],
      "cancellable": true,
      "required plugins": [
        "Minecraft 1.13+ (BlockData)"
      ]
    },
    {
      "id": "firework_explode",
      "name": "On Firework Explode",
      "description": [
        "Called when a firework explodes."
      ],
      "examples": [
        "on firework explode",
        "on firework exploding colored red, light green and black",
        "on firework explosion coloured light green:",
        "\tbroadcast \"A firework colored %colors% was exploded at %location%!\""
      ],
      "since": [
        "2.4"
      ],
      "patterns": [
        "[on] [a] firework explo(d(e|ing)|sion) [colo[u]red %colors%]"
      ],
      "event values": [
        "event-fireworkeffect",
        "event-world",
        "event-commandsender",
        "event-projectile",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "first_join",
      "name": "On First Join",
      "description": [
        "Called when a player joins the server for the first time."
      ],
      "examples": [
        "on first join:",
        "\tbroadcast \"Welcome %player% to the server!\""
      ],
      "since": [
        "1.3.7"
      ],
      "patterns": [
        "[on] first (join|login)"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": false
    },
    {
      "id": "fishing",
      "name": "On Fishing",
      "description": [
        "Called when a player fishes something. This is not of much use yet."
      ],
      "examples": [
        "on fish:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] [player] fish[ing]"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "flight_toggle",
      "name": "On Flight Toggle",
      "description": [
        "Called when a players stops/starts flying."
      ],
      "examples": [
        "on flight toggle:",
        "\tif {game::%player%::playing} exists:",
        "\t\tcancel event"
      ],
      "since": [
        "2.2-dev36"
      ],
      "patterns": [
        "[on] [player] flight toggl(e|ing)",
        "[on] [player] toggl(e|ing) flight"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "flow",
      "name": "On Flow",
      "description": [
        "Called when a blocks flows or teleports to another block. This not only applies to water and lava, but teleporting dragon eggs as well."
      ],
      "examples": [
        "on block flow:",
        "\tif event-block is water:",
        "\t\tbroadcast \"Build more dams! It's starting to get wet in here\""
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] [block] flow[ing]",
        "[on] block mov(e|ing)"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-location",
        "future event-block"
      ],
      "cancellable": true
    },
    {
      "id": "form",
      "name": "On Form",
      "description": [
        "Called when a block is created, but not by a player, e.g. snow forms due to snowfall, water freezes in cold biomes. This isn't called when block spreads (mushroom growth, water physics etc.), as it has its own event (see spread event)."
      ],
      "examples": [
        "on form of snow:",
        "on form of a mushroom:"
      ],
      "since": [
        "1.0, 2.6 (BlockData support)"
      ],
      "patterns": [
        "[on] [block] form[ing] [[of] %itemtypes/blockdatas%]"
      ],
      "event values": [
        "past event-block",
        "event-block",
        "event-world",
        "event-location"
      ],
      "cancellable": true,
      "required plugins": [
        "Minecraft 1.13+ (BlockData)"
      ]
    },
    {
      "id": "fuel_burn",
      "name": "On Fuel Burn",
      "description": [
        "Called when a furnace burns an item from its fuel slot."
      ],
      "examples": [
        "on fuel burning:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] fuel burn[ing]"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "gamemode_change",
      "name": "On Gamemode Change",
      "description": [
        "Called when a player's gamemode changes."
      ],
      "examples": [
        "on gamemode change:",
        "on gamemode change to adventure:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] game[ ]mode change [to %gamemode%]"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "gliding_state_change",
      "name": "On Gliding State Change",
      "description": [
        "Called when an entity toggles glider on or off, or when server toggles gliding state of an entity forcibly."
      ],
      "examples": [
        "on toggling gliding:",
        "\tcancel the event # bad idea, but you CAN do it!"
      ],
      "since": [
        "2.2-dev21"
      ],
      "patterns": [
        "[on] (gliding state change|toggl(e|ing) gliding)"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "grow",
      "name": "On Grow",
      "description": [
        "Called when a tree, giant mushroom or plant grows to next stage."
      ],
      "examples": [
        "on grow:",
        "on grow of a tree:",
        "on grow of a huge jungle tree:"
      ],
      "since": [
        "1.0 (2.2-dev20 for plants)"
      ],
      "patterns": [
        "[on] grow [of (%structuretype%|%itemtype%)]"
      ],
      "event values": [
        "past event-block",
        "event-block",
        "event-world",
        "event-location",
        "future event-block"
      ],
      "cancellable": true
    },
    {
      "id": "hand_item_swap",
      "name": "On Hand Item Swap",
      "description": [
        "Called whenever a player swaps the items in their main- and offhand slots.",
        "Works also when one or both of the slots are empty.",
        "The event is called before the items are actually swapped,",
        "so when you use the player's tool or player's offtool expressions,",
        "they will return the values before the swap -",
        "this enables you to cancel the event before anything happens."
      ],
      "examples": [
        "on swap hand items:",
        "\tevent-player's tool is a diamond sword",
        "\tcancel event"
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "[on] swap[ping of] [(hand|held)] item[s]"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "heal",
      "name": "On Heal",
      "description": [
        "Called when an entity is healed, e.g. by eating (players), being fed (pets), or by the effect of a potion of healing (overworld mobs) or harm (nether mobs)."
      ],
      "examples": [
        "on heal:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] heal[ing]"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "horse_jump",
      "name": "On Horse Jump",
      "description": [
        "Called when a horse jumps."
      ],
      "examples": [
        "on horse jump:",
        "\tpush event-entity upwards at speed 2"
      ],
      "since": [
        "2.5.1"
      ],
      "patterns": [
        "[on] horse jump"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "hunger_meter_change",
      "name": "On Hunger Meter Change",
      "description": [
        "Called when the hunger bar of a player changes, i.e. either increases by eating or decreases over time."
      ],
      "examples": [
        "on food bar change:"
      ],
      "since": [
        "1.4.4"
      ],
      "patterns": [
        "[on] (food|hunger) (level|met(er|re)|bar) chang(e|ing)"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "ignition",
      "name": "On Ignition",
      "description": [
        "Called when a block starts burning, i.e. a fire block is placed next to it and this block is flammable.",
        "The burn event will be called when the block is about do be destroyed by the fire."
      ],
      "examples": [
        "on block ignite:",
        "\tif event-block is a ladder:",
        "\t\tcancel event"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] [block] ignit(e|ion)"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-player",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "inventory_click",
      "name": "On Inventory Click",
      "description": [
        "Called when clicking on inventory slot."
      ],
      "examples": [
        "on inventory click:",
        "\tif event-item is stone:",
        "\t\tgive player 1 stone",
        "\t\tremove 20$ from player's balance"
      ],
      "since": [
        "2.2-Fixes-V10"
      ],
      "patterns": [
        "[on] [player] inventory(-| )click[ing] [[at] %itemtypes%]"
      ],
      "event values": [
        "event-inventoryaction",
        "event-clicktype",
        "event-string",
        "event-world",
        "event-slot",
        "event-inventory",
        "event-player",
        "event-itemstack",
        "event-itemtype"
      ],
      "cancellable": true
    },
    {
      "id": "inventory_close",
      "name": "On Inventory Close",
      "description": [
        "Called when player's currently viewed inventory is closed."
      ],
      "examples": [
        "on inventory close:",
        "\tif player's location is {location}:",
        "\t\tsend \"You exited the shop!\""
      ],
      "since": [
        "2.2-dev21"
      ],
      "patterns": [
        "[on] inventory clos(ing|e[d])"
      ],
      "event values": [
        "event-inventory",
        "event-player"
      ],
      "cancellable": false
    },
    {
      "id": "inventory_open",
      "name": "On Inventory Open",
      "description": [
        "Called when an inventory is opened for player."
      ],
      "examples": [
        "on inventory open:",
        "\tclose player's inventory"
      ],
      "since": [
        "2.2-dev21"
      ],
      "patterns": [
        "[on] inventory open[ed]"
      ],
      "event values": [
        "event-inventory",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "inventory_pickup",
      "name": "On Inventory Pickup",
      "description": [
        "Called when an inventory (a hopper, a hopper minecart, etc.) picks up an item"
      ],
      "examples": [
        "on inventory pickup:"
      ],
      "since": [
        "2.5.1"
      ],
      "patterns": [
        "[on] inventory pick[ ]up"
      ],
      "event values": [
        "event-inventory",
        "event-itementity",
        "event-itemtype"
      ],
      "cancellable": true
    },
    {
      "id": "item_break",
      "name": "On Item Break",
      "description": [
        "Called when a player breaks their tool because its damage reached the maximum value.",
        "This event cannot be cancelled."
      ],
      "examples": [
        "on tool break:"
      ],
      "since": [
        "2.1.1"
      ],
      "patterns": [
        "[on] [player] tool break[ing]",
        "[on] [player] break[ing] (a|the|) tool"
      ],
      "event values": [
        "event-world",
        "event-player",
        "event-itemtype"
      ],
      "cancellable": false
    },
    {
      "id": "item_damage",
      "name": "On Item Damage",
      "description": [
        "Called when an item is damaged. Most tools are damaged by using them; armor is damaged when the wearer takes damage."
      ],
      "examples": [
        "on item damage:",
        "\tcancel event"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "[on] item damag(e|ing)"
      ],
      "event values": [
        "event-world",
        "event-player",
        "event-itemtype"
      ],
      "cancellable": true
    },
    {
      "id": "item_despawn",
      "name": "On Item Despawn",
      "description": [
        "Called when an item is about to be despawned from the world, usually 5 minutes after it was dropped."
      ],
      "examples": [
        "on item despawn of diamond:",
        "\tsend \"Not my precious!\"",
        "\tcancel event"
      ],
      "since": [
        "2.2-dev35"
      ],
      "patterns": [
        "[on] (item[ ][stack]|[item] %itemtypes%) despawn[ing]",
        "[on] [item[ ][stack]] despawn[ing] [[of] %itemtypes%]"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-itementity",
        "event-entity",
        "event-itemtype",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "item_mend",
      "name": "On Item Mend",
      "description": [
        "Called when a player has an item repaired via the Mending enchantment."
      ],
      "examples": [
        "on item mend:",
        "\tchance of 50%:",
        "\t\tcancel the event",
        "\t\tsend \"Oops! Mending failed!\" to player"
      ],
      "since": [
        "2.5.1"
      ],
      "patterns": [
        "[on] item mend[ing]"
      ],
      "event values": [
        "event-world",
        "event-player",
        "event-entity",
        "event-itemtype"
      ],
      "cancellable": true,
      "required plugins": [
        "Minecraft 1.13 or newer"
      ]
    },
    {
      "id": "item_merge",
      "name": "On Item Merge",
      "description": [
        "Called when dropped items merge into a single stack. event-entity will be the entity which is trying to merge, and future event-entity will be the entity which is being merged into."
      ],
      "examples": [
        "on item merge of gold blocks:",
        "\tcancel event"
      ],
      "since": [
        "2.2-dev35"
      ],
      "patterns": [
        "[on] (item[ ][stack]|[item] %itemtypes%) merg(e|ing)",
        "[on] item[ ][stack] merg(e|ing) [[of] %itemtypes%]"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-itementity",
        "event-entity",
        "event-itemtype",
        "event-location",
        "future event-itementity"
      ],
      "cancellable": true
    },
    {
      "id": "item_spawn",
      "name": "On Item Spawn",
      "description": [
        "Called whenever an item stack is spawned in a world, e.g. as drop of a block or mob, a player throwing items out of their inventory, or a dispenser dispensing an item (not shooting it)."
      ],
      "examples": [
        "on item spawn of iron sword:",
        "\tbroadcast \"Someone dropped an iron sword!\""
      ],
      "since": [
        "unknown (before 2.1)"
      ],
      "patterns": [
        "[on] item spawn[ing] [[of] %itemtypes%]"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-itemtype",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "join",
      "name": "On Join",
      "description": [
        "Called when the player joins the server. The player is already in a world when this event is called, so if you want to prevent players from joining you should prefer on connect over this event."
      ],
      "examples": [
        "on join:",
        "\tmessage \"Welcome on our awesome server!\"",
        "\tbroadcast \"%player% just joined the server!\""
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] [player] (login|logging in|join[ing])"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": false
    },
    {
      "id": "jump",
      "name": "On Jump",
      "description": [
        "Called whenever a player jumps.",
        "This event requires PaperSpigot."
      ],
      "examples": [
        "on jump:",
        "\tevent-player does not have permission \"jump\"",
        "\tcancel event"
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "[on] [player] jump[ing]"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "kick",
      "name": "On Kick",
      "description": [
        "Called when a player is kicked from the server. You can change the kick message or cancel the event entirely."
      ],
      "examples": [
        "on kick:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] [player] (kick|being kicked)"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "language_change",
      "name": "On Language Change",
      "description": [
        "Called after a player changed their language in the game settings. You can use the language expression to get the current language of the player.",
        "This event requires Minecraft 1.12+."
      ],
      "examples": [
        "on language change:",
        "\tif player's language starts with \"en\":",
        "\t\tsend \"Hello!\""
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "[on] [player] (language|locale) chang(e|ing)",
        "[on] [player] chang(e|ing) (language|locale)"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": false
    },
    {
      "id": "leaves_decay",
      "name": "On Leaves Decay",
      "description": [
        "Called when a leaf block decays due to not being connected to a tree."
      ],
      "examples": [
        "on leaves decay:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] leaves decay[ing]"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "level_change",
      "name": "On Level Change",
      "description": [
        "Called when a player's level changes, e.g. by gathering experience or by enchanting something."
      ],
      "examples": [
        "on level change:"
      ],
      "since": [
        "1.0, 2.4 (level up/down)"
      ],
      "patterns": [
        "[on] [player] level (change|up|down)"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": false
    },
    {
      "id": "lightning_strike",
      "name": "On Lightning Strike",
      "description": [
        "Called when lightning strikes."
      ],
      "examples": [
        "on lightning:",
        "\tspawn a zombie at location of event-entity"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] lightning [strike]"
      ],
      "event values": [
        "event-world",
        "event-entity"
      ],
      "cancellable": true
    },
    {
      "id": "move",
      "name": "On Move",
      "description": [
        "Called when a player or entity moves.",
        "NOTE: Move event will only be called when the entity/player moves position, not orientation (ie: looking around).",
        "NOTE: These events can be performance heavy as they are called quite often.",
        "If you use these events, and later remove them, a server restart is recommended to clear registered events from Skript."
      ],
      "examples": [
        "on player move:",
        "\tif player does not have permission \"player.can.move\":",
        "\t\tcancel event",
        "on skeleton move:",
        "\tif event-entity is not in world \"world\":",
        "\t\tkill event-entity"
      ],
      "since": [
        "2.6"
      ],
      "patterns": [
        "[on] %entitydata% (move|walk|step)"
      ],
      "event values": [
        "past event-location",
        "event-block",
        "event-teleportcause",
        "event-world",
        "event-commandsender",
        "event-player",
        "event-entity",
        "event-location"
      ],
      "cancellable": true,
      "required plugins": [
        "Paper 1.16.5+ (entity move)"
      ]
    },
    {
      "id": "move_on",
      "name": "On Move On",
      "description": [
        "Called when a player moves onto a certain type of block. Please note that using this event can cause lag if there are many players online."
      ],
      "examples": [
        "on walking on dirt or grass:",
        "on stepping on stone:"
      ],
      "since": [
        "2.0"
      ],
      "patterns": [
        "[on] (step|walk)[ing] (on|over) %*itemtypes%"
      ],
      "event values": [
        "past event-location",
        "event-block",
        "event-teleportcause",
        "event-world",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "physics",
      "name": "On Physics",
      "description": [
        "Called when a physics check is done on a block. By cancelling this event you can prevent some things from happening, e.g. sand falling, dirt turning into grass, torches dropping if their supporting block is destroyed, etc.Please note that using this event might cause quite some lag since it gets called extremely often."
      ],
      "examples": [
        "# prevents sand from falling",
        "on block physics:",
        "\tblock is sand",
        "\tcancel event"
      ],
      "since": [
        "1.4.6"
      ],
      "patterns": [
        "[on] [block] physics"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "pick_up",
      "name": "On Pick Up",
      "description": [
        "Called when a player/entity picks up an item. Please note that the item is still on the ground when this event is called."
      ],
      "examples": [
        "on pick up:",
        "on entity pickup of wheat:"
      ],
      "since": [
        "unknown (before 2.1), 2.5 (entity)"
      ],
      "patterns": [
        "[on] [(player|entity)] (pick[ ]up|picking up) [[of] %itemtypes%]"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-player",
        "event-itementity",
        "event-entity",
        "event-itemtype",
        "event-location"
      ],
      "cancellable": true,
      "required plugins": [
        "1.12.2+ for entity"
      ]
    },
    {
      "id": "pig_zap",
      "name": "On Pig Zap",
      "description": [
        "Called when a pig is stroke by lightning and transformed into a zombie pigman. Cancel the event to prevent the transformation."
      ],
      "examples": [
        "on pig zap:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] pig[ ]zap"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "piston_extend",
      "name": "On Piston Extend",
      "description": [
        "Called when a piston is about to extend."
      ],
      "examples": [
        "on piston extend:",
        "\tbroadcast \"A piston is extending!\""
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] piston extend[ing]"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "piston_retract",
      "name": "On Piston Retract",
      "description": [
        "Called when a piston is about to retract."
      ],
      "examples": [
        "on piston retract:",
        "\tbroadcast \"A piston is retracting!\""
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] piston retract[ing]"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "place",
      "name": "On Place",
      "description": [
        "Called when a player places a block."
      ],
      "examples": [
        "on place:",
        "on place of a furnace, workbench or chest:",
        "on break of chest[type=right] or chest[type=left]"
      ],
      "since": [
        "1.0, 2.6 (BlockData support)"
      ],
      "patterns": [
        "[on] [block] (plac(e|ing)|build[ing]) [[of] %itemtypes/blockdatas%]"
      ],
      "event values": [
        "past event-block",
        "event-direction",
        "event-block",
        "event-world",
        "event-player",
        "event-entity",
        "event-location"
      ],
      "cancellable": true,
      "required plugins": [
        "Minecraft 1.13+ (BlockData)"
      ]
    },
    {
      "id": "player_world_change",
      "name": "On Player World Change",
      "description": [
        "Called when a player enters a world. Does not work with other entities!"
      ],
      "examples": [
        "on player world change:",
        "\tworld is \"city\"",
        "\tsend \"Welcome to the City!\""
      ],
      "since": [
        "2.2-dev28"
      ],
      "patterns": [
        "[on] [player] world chang(ing|e[d])"
      ],
      "event values": [
        "past event-world",
        "event-world",
        "event-player"
      ],
      "cancellable": false
    },
    {
      "id": "portal",
      "name": "On Portal",
      "description": [
        "Called when a player uses a nether or end portal. Cancel the event to prevent the player from teleporting."
      ],
      "examples": [
        "on player portal:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] [player] portal"
      ],
      "event values": [
        "past event-location",
        "event-block",
        "event-teleportcause",
        "event-world",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "portal_create",
      "name": "On Portal Create",
      "description": [
        "Called when a portal is created, either by a player or mob lighting an obsidian frame on fire, or by a nether portal creating its teleportation target in the nether/overworld.",
        "In Minecraft 1.14+, you can use the player in this event.",
        "Please note that there may not always be a player (or other entity) in this event."
      ],
      "examples": [
        "on portal create:"
      ],
      "since": [
        "1.0, 2.5.3 (event-entity support)"
      ],
      "patterns": [
        "[on] portal creat(e|ion)"
      ],
      "event values": [
        "event-world",
        "event-entity"
      ],
      "cancellable": true,
      "required plugins": [
        "Minecraft 1.14+ (event-entity support)"
      ]
    },
    {
      "id": "portal_enter",
      "name": "On Portal Enter",
      "description": [
        "Called when an entity enters a nether portal or an end portal. Please note that this event will be fired many times for a nether portal."
      ],
      "examples": [
        "on portal enter:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] portal enter[ing]",
        "[on] entering [a] portal"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": false
    },
    {
      "id": "prepare_craft",
      "name": "On Prepare Craft",
      "description": [
        "Called just before displaying crafting result to player. Note that setting the result item might or might not work due to Bukkit bugs."
      ],
      "examples": [
        "on preparing craft of torch:"
      ],
      "since": [
        "2.2-Fixes-V10"
      ],
      "patterns": [
        "[on] [player] (preparing|beginning) craft[ing] [[of] %itemtypes%]"
      ],
      "event values": [
        "event-string",
        "event-slot",
        "event-inventory",
        "event-player",
        "event-itemstack"
      ],
      "cancellable": false
    },
    {
      "id": "pressure_plate_trip",
      "name": "On Pressure Plate / Trip",
      "description": [
        "Called when a player steps on a pressure plate or tripwire respectively."
      ],
      "examples": [
        "on step on pressure plate:"
      ],
      "since": [
        "1.0 (pressure plate), 1.4.4 (tripwire)"
      ],
      "patterns": [
        "[on] [step[ping] on] [a] [pressure] plate",
        "[on] (trip|[step[ping] on] [a] tripwire)"
      ],
      "event values": [
        "event-direction",
        "event-block",
        "event-world",
        "event-player",
        "event-itemtype"
      ],
      "cancellable": true
    },
    {
      "id": "projectile_collide",
      "name": "On Projectile Collide",
      "description": [
        "Called when a projectile collides with an entity."
      ],
      "examples": [
        "on projectile collide:",
        "\tteleport shooter of event-projectile to event-entity"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "[on] projectile collide"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-projectile",
        "event-location"
      ],
      "cancellable": true,
      "required plugins": [
        "Paper"
      ]
    },
    {
      "id": "projectile_hit",
      "name": "On Projectile Hit",
      "description": [
        "Called when a projectile hits an entity or a block.",
        "Use the damage event with a check for a projectile to be able to use the entity that got hit in the case when the projectile hit a living entity.",
        "A damage event will even be fired if the damage is 0, e.g. when throwing snowballs at non-nether mobs."
      ],
      "examples": [
        "on projectile hit:",
        "\tevent-projectile is arrow",
        "\tdelete event-projectile"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] projectile hit"
      ],
      "event values": [
        "event-block",
        "event-projectile"
      ],
      "cancellable": true
    },
    {
      "id": "quit",
      "name": "On Quit",
      "description": [
        "Called when a player leaves the server."
      ],
      "examples": [
        "on quit:",
        "on disconnect:"
      ],
      "since": [
        "1.0 (simple disconnection)"
      ],
      "patterns": [
        "[on] (quit[ting]|disconnect[ing]|log[ ]out|logging out|leav(e|ing))"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": false
    },
    {
      "id": "redstone",
      "name": "On Redstone",
      "description": [
        "Called when the redstone current of a block changes. This event is of not much use yet."
      ],
      "examples": [
        "on redstone change:",
        "\tsend \"someone is using redstone\" to console"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] redstone [current] [chang(e|ing)]"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-location"
      ],
      "cancellable": false
    },
    {
      "id": "region_enterleave",
      "name": "On Region Enter/Leave",
      "description": [
        "Called when a player enters or leaves a region.",
        "This event requires a supported regions plugin to be installed."
      ],
      "examples": [
        "on region exit:",
        "\tmessage \"Leaving %region%.\""
      ],
      "since": [
        "2.1"
      ],
      "patterns": [
        "[on] (enter[ing]|leav(e|ing)|exit[ing]) [of] ([a] region|[[the] region] %regions%)",
        "[on] region (enter[ing]|leav(e|ing)|exit[ing])"
      ],
      "event values": [
        "event-player",
        "event-region"
      ],
      "cancellable": true
    },
    {
      "id": "resource_pack_request_response",
      "name": "On Resource Pack Request Response",
      "description": [
        "Called when a player takes action on a resource pack request sent via the ",
        "send resource pack effect. ",
        "The resource pack condition can be used ",
        "to check the resource pack state.",
        "",
        "This event will be triggered once when the player accepts or declines the resource pack request, ",
        "and once when the resource pack is successfully installed or failed to download."
      ],
      "examples": [
        "on resource pack request response:",
        "\tif the resource pack was declined or failed to download:",
        "",
        "on resource pack deny:",
        "\tkick the player due to \"You have to install the resource pack to play in this server!\""
      ],
      "since": [
        "2.4"
      ],
      "patterns": [
        "[on] resource pack [request] response",
        "[on] resource pack [request] %resourcepackstates%"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": false
    },
    {
      "id": "respawn",
      "name": "On Respawn",
      "description": [
        "Called when a player respawns. You should prefer this event over the death event as the player is technically alive when this event is called."
      ],
      "examples": [
        "on respawn:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] [player] respawn[ing]"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": false
    },
    {
      "id": "resurrect_attempt",
      "name": "On Resurrect Attempt",
      "description": [
        "Called when an entity dies, always. If they are not holding a totem, this is cancelled - you can, however, uncancel it."
      ],
      "examples": [
        "on resurrect attempt:",
        "\tentity is player",
        "\tentity has permission \"admin.undying\"",
        "\tuncancel the event"
      ],
      "since": [
        "2.2-dev28"
      ],
      "patterns": [
        "[on] [entity] resurrect[ion] [attempt]"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "riptide",
      "name": "On Riptide",
      "description": [
        "Called when the player activates the riptide enchantment, using their trident to propel them through the air.",
        "Note: the riptide action is performed client side, so manipulating the player in this event may have undesired effects."
      ],
      "examples": [
        "on riptide:",
        "\tsend \"You are riptiding!\""
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "[on] [use of] riptide [enchant[ment]]"
      ],
      "event values": [
        "event-world",
        "event-player",
        "event-itemtype"
      ],
      "cancellable": false
    },
    {
      "id": "script_loadunload",
      "name": "On Script Load/Unload",
      "description": [
        "Called directly after the trigger is loaded, or directly before the whole script is unloaded.",
        "The keyword 'async' indicates the trigger can be ran asynchronously, "
      ],
      "examples": [
        "on load:",
        "\tset {running::%script%} to true",
        "on unload:",
        "\tset {running::%script%} to false"
      ],
      "since": [
        "2.0"
      ],
      "patterns": [
        "[on] [(async)] [script] (load|init|enable)",
        "[on] [(async)] [script] (unload|stop|disable)"
      ],
      "event values": [
        "event-commandsender"
      ],
      "cancellable": false
    },
    {
      "id": "server_list_ping",
      "name": "On Server List Ping",
      "description": [
        "Called when a server list ping is coming in, generally when a Minecraft client pings the server to show its information in the server list.",
        "The IP expression can be used to get the IP adress of the pinger.",
        "This event can be cancelled on PaperSpigot 1.12.2+ only and this means the player will see the server as offline (but still can join).",
        "",
        "Also you can use MOTD, Max Players, Online Players Count, Protocol Version, Version String, Hover List and Server Icon expressions, and Player Info Visibility and Hide Player from Server List effects to modify the server list."
      ],
      "examples": [
        "on server list ping:",
        "\tset the motd to \"Welcome %{player-by-IP::%ip%}%! Join now!\" if {player-by-IP::%ip%} is set, else \"Join now!\"",
        "\tset the fake max players count to (online players count + 1)",
        "\tset the shown icon to a random server icon out of {server-icons::*}"
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "[on] server [list] ping"
      ],
      "cancellable": true
    },
    {
      "id": "server_startstop",
      "name": "On Server Start/Stop",
      "description": [
        "Called when the server starts or stops (actually, when Skript starts or stops, so a /reload will trigger these events as well)."
      ],
      "examples": [
        "on skript start:",
        "on server stop:"
      ],
      "since": [
        "2.0"
      ],
      "patterns": [
        "[on] (server|skript) (start|load|enable)",
        "[on] (server|skript) (stop|unload|disable)"
      ],
      "event values": [
        "event-commandsender"
      ],
      "cancellable": false
    },
    {
      "id": "sheep_regrow_wool",
      "name": "On Sheep Regrow Wool",
      "description": [
        "Called when sheep regrows its sheared wool back."
      ],
      "examples": [
        "on sheep grow wool:",
        "\tcancel event"
      ],
      "since": [
        "2.2-dev21"
      ],
      "patterns": [
        "[on] sheep [re]grow[ing] wool"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "shoot",
      "name": "On Shoot",
      "description": [
        "Called whenever a projectile is shot. Use the shooter expression to get who shot the projectile."
      ],
      "examples": [
        "on shoot:",
        "\tif projectile is an arrow:",
        "\t\tsend \"you shot an arrow!\" to shooter"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] [projectile] shoot"
      ],
      "event values": [
        "event-projectile"
      ],
      "cancellable": true
    },
    {
      "id": "sign_change",
      "name": "On Sign Change",
      "description": [
        "As signs are placed empty, this event is called when a player is done editing a sign."
      ],
      "examples": [
        "on sign change:",
        "\tline 2 is empty",
        "\tset line 1 to \"&lt;red&gt;%line 1%\""
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] sign (chang[e]|edit)[ing]",
        "[on] [player] (chang[e]|edit)[ing] [a] sign"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-player",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "slime_split",
      "name": "On Slime Split",
      "description": [
        "Called when a slime splits. Usually this happens when a big slime dies."
      ],
      "examples": [
        "on slime split:"
      ],
      "since": [
        "2.2-dev26"
      ],
      "patterns": [
        "[on] slime split[ting]"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "smelt",
      "name": "On Smelt",
      "description": [
        "Called when a furnace smelts an item in its ore slot."
      ],
      "examples": [
        "on smelt:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] [ore] smelt[ing]",
        "[on] smelt[ing] of ore"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "sneak_toggle",
      "name": "On Sneak Toggle",
      "description": [
        "Called when a player starts or stops sneaking. Use is sneaking to get whether the player was sneaking before the event was called."
      ],
      "examples": [
        "# make players that stop sneaking jump",
        "on sneak toggle:",
        "\tplayer is sneaking",
        "\tpush the player upwards at speed 0.5"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] [player] toggl(e|ing) sneak",
        "[on] [player] sneak toggl(e|ing)"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "spawn",
      "name": "On Spawn",
      "description": [
        "Called when an entity spawns (excluding players)."
      ],
      "examples": [
        "on spawn of a zombie:",
        "on spawn of an ender dragon:",
        "\tbroadcast \"A dragon has been sighted in %world%!\""
      ],
      "since": [
        "1.0, 2.5.1 (non-living entities)"
      ],
      "patterns": [
        "[on] spawn[ing] [of %entitydatas%]"
      ],
      "event values": [
        "event-spawnreason",
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-projectile",
        "event-itemtype",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "spawn_change",
      "name": "On Spawn Change",
      "description": [
        "Called when the spawn point of a world changes."
      ],
      "examples": [
        "on spawn change:",
        "\tbroadcast \"someone changed the spawn!\""
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] [world] spawn change"
      ],
      "event values": [
        "event-world"
      ],
      "cancellable": false
    },
    {
      "id": "sponge_absorb",
      "name": "On Sponge Absorb",
      "description": [
        "Called when a sponge absorbs blocks."
      ],
      "examples": [
        "on sponge absorb:",
        "\tloop absorbed blocks:",
        "\t\tbroadcast \"%loop-block% was absorbed by a sponge\"!"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "[on] sponge absorb"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-location"
      ],
      "cancellable": true,
      "required plugins": [
        "Minecraft 1.13 or newer"
      ]
    },
    {
      "id": "spread",
      "name": "On Spread",
      "description": [
        "Called when a new block forms as a result of a block that can spread, e.g. water or mushrooms."
      ],
      "examples": [
        "on spread:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] spread[ing]"
      ],
      "event values": [
        "past event-block",
        "event-block",
        "event-world",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "sprint_toggle",
      "name": "On Sprint Toggle",
      "description": [
        "Called when a player starts or stops sprinting. Use is sprinting to get whether the player was sprinting before the event was called."
      ],
      "examples": [
        "on sprint toggle:",
        "\tplayer is not sprinting",
        "\tsend \"Run!\""
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] [player] toggl(e|ing) sprint",
        "[on] [player] sprint toggl(e|ing)"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "swim_toggle",
      "name": "On Swim Toggle",
      "description": [
        "Called when an entity swims or stops swimming."
      ],
      "examples": [
        "on swim toggle:",
        "\tevent-entity does not have permission \"swim\"",
        "\tcancel event"
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "[on] [entity] toggl(e|ing) swim",
        "[on] [entity] swim toggl(e|ing)"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true,
      "required plugins": [
        "1.13 or newer"
      ]
    },
    {
      "id": "tame",
      "name": "On Tame",
      "description": [
        "Called when a player tames a wolf or ocelot. Can be cancelled to prevent the entity from being tamed."
      ],
      "examples": [
        "on tame:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] [entity] tam(e|ing)"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "target",
      "name": "On Target",
      "description": [
        "Called when a mob starts/stops following/attacking another entity, usually a player."
      ],
      "examples": [
        "on entity target:",
        "\ttarget is a player"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] [entity] target",
        "[on] [entity] un[-]target"
      ],
      "event values": [
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "teleport",
      "name": "On Teleport",
      "description": [
        "Called whenever a player is teleported, either by a nether/end portal or other means (e.g. by plugins)."
      ],
      "examples": [
        "on teleport:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] [player] teleport[ing]"
      ],
      "event values": [
        "past event-location",
        "event-block",
        "event-teleportcause",
        "event-world",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "throwing_of_an_egg",
      "name": "On Throwing of an Egg",
      "description": [
        "Called when a player throws an egg. You can just use the shoot event in most cases, as this event is intended to support changing the hatched mob and its chance to hatch, but Skript does not yet support that."
      ],
      "examples": [
        "on throw of an egg:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] throw[ing] [of] [an] egg",
        "[on] [player] egg throw"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": false
    },
    {
      "id": "tool_change",
      "name": "On Tool Change",
      "description": [
        "Called whenever a player changes their held item by selecting a different slot (e.g. the keys 1-9 or the mouse wheel), not by dropping or replacing the item in the current slot."
      ],
      "examples": [
        "on player's held item change:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] [player['s]] (tool|item held|held item) chang(e|ing)"
      ],
      "event values": [
        "event-world",
        "event-player"
      ],
      "cancellable": true
    },
    {
      "id": "vehicle_create",
      "name": "On Vehicle Create",
      "description": [
        "Called when a new vehicle is created, e.g. when a player places a boat or minecart."
      ],
      "examples": [
        "on vehicle create:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] vehicle create",
        "[on] creat(e|ing|ion of) [a] vehicle"
      ],
      "event values": [
        "event-entity",
        "event-world",
        "event-entity"
      ],
      "cancellable": true
    },
    {
      "id": "vehicle_damage",
      "name": "On Vehicle Damage",
      "description": [
        "Called when a vehicle gets damage. Too much damage will destroy the vehicle."
      ],
      "examples": [
        "on vehicle damage:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] vehicle damage",
        "[on] damag(e|ing) [a] vehicle"
      ],
      "event values": [
        "event-entity",
        "event-world",
        "event-entity"
      ],
      "cancellable": true
    },
    {
      "id": "vehicle_destroy",
      "name": "On Vehicle Destroy",
      "description": [
        "Called when a vehicle is destroyed. Any passenger will be ejected and the vehicle might drop some item(s)."
      ],
      "examples": [
        "on vehicle destroy:",
        "\tcancel event"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] vehicle destroy",
        "[on] destr(oy[ing]|uction of) [a] vehicle"
      ],
      "event values": [
        "event-entity",
        "event-world",
        "event-entity"
      ],
      "cancellable": true
    },
    {
      "id": "vehicle_enter",
      "name": "On Vehicle Enter",
      "description": [
        "Called when an entity enters a vehicle, either deliberately (players) or by falling into them (mobs)."
      ],
      "examples": [
        "on vehicle enter:",
        "\tentity is a player",
        "\tcancel event"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] vehicle enter",
        "[on] enter[ing] [a] vehicle"
      ],
      "event values": [
        "event-entity",
        "event-world",
        "event-entity"
      ],
      "cancellable": true
    },
    {
      "id": "vehicle_exit",
      "name": "On Vehicle Exit",
      "description": [
        "Called when an entity exits a vehicle."
      ],
      "examples": [
        "on vehicle exit:",
        "\tif event-entity is a spider:",
        "\t\tkill event-entity"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] vehicle exit",
        "[on] exit[ing] [a] vehicle"
      ],
      "event values": [
        "event-entity",
        "event-livingentity",
        "event-world",
        "event-entity"
      ],
      "cancellable": true
    },
    {
      "id": "weather_change",
      "name": "On Weather Change",
      "description": [
        "Called when a world's weather changes."
      ],
      "examples": [
        "on weather change:",
        "on weather change to sunny:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] weather change [to %weathertypes%]"
      ],
      "event values": [
        "event-world"
      ],
      "cancellable": true
    },
    {
      "id": "world_init",
      "name": "On World Init",
      "description": [
        "Called when a world is initialised. As all default worlds are initialised before any scripts are loaded, this event is only called for newly created worlds.",
        "World management plugins might change the behaviour of this event though."
      ],
      "examples": [
        "on world init:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] world init[ialization]"
      ],
      "event values": [
        "event-world"
      ],
      "cancellable": false
    },
    {
      "id": "world_load",
      "name": "On World Load",
      "description": [
        "Called when a world is loaded. As with the world init event, this event will not be called for the server's default world(s)."
      ],
      "examples": [
        "on world load:",
        "\tsend \"World is loading...\" to console"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] world load[ing]"
      ],
      "event values": [
        "event-world"
      ],
      "cancellable": false
    },
    {
      "id": "world_save",
      "name": "On World Save",
      "description": [
        "Called when a world is saved to disk. Usually all worlds are saved simultaneously, but world management plugins could change this."
      ],
      "examples": [
        "on world saving:",
        "\tbroadcast \"World has been saved!\""
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] world sav(e|ing)"
      ],
      "event values": [
        "event-world"
      ],
      "cancellable": false
    },
    {
      "id": "world_unload",
      "name": "On World Unload",
      "description": [
        "Called when a world is unloaded. This event might never be called if you don't have a world management plugin."
      ],
      "examples": [
        "on world unload:",
        "\tcancel event"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] world unload[ing]"
      ],
      "event values": [
        "event-world"
      ],
      "cancellable": true
    },
    {
      "id": "zombie_break_door",
      "name": "On Zombie Break Door",
      "description": [
        "Called when a zombie is done breaking a wooden door. Can be cancelled to prevent the zombie from breaking the door."
      ],
      "examples": [
        "on zombie breaking a wood door:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[on] zombie break[ing] [a] [wood[en]] door"
      ],
      "event values": [
        "event-block",
        "event-world",
        "event-commandsender",
        "event-entity",
        "event-itemstack",
        "event-location"
      ],
      "cancellable": true
    },
    {
      "id": "periodical",
      "name": "Periodical",
      "description": [
        "An event that is called periodically."
      ],
      "examples": [
        "every 2 seconds:",
        "every minecraft hour:",
        "every tick: # can cause lag depending on the code inside the event",
        "every minecraft days:"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "every %timespan%"
      ],
      "cancellable": false
    },
    {
      "id": "eventperiodical",
      "name": "Periodical",
      "description": [
        "An event that is called periodically."
      ],
      "examples": [
        "every 2 seconds in \"world\":",
        "every minecraft hour in \"flatworld\":",
        "every tick in \"world\": # can cause lag depending on the code inside the event",
        "every minecraft days in \"plots\":"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "every %timespan% in [world[s]] %worlds%"
      ],
      "event values": [
        "event-world"
      ],
      "cancellable": false
    }
  ],
  "conditions": [
    {
      "id": "CondAlphanumeric",
      "name": "Alphanumeric",
      "description": [
        "Checks if the given string is alphanumeric."
      ],
      "examples": [
        "if the argument is not alphanumeric:",
        "\tsend \"Invalid name!\""
      ],
      "since": [
        "2.4"
      ],
      "patterns": [
        "%strings% (is|are) alphanumeric",
        "%strings% (isn't|is not|aren't|are not) alphanumeric"
      ]
    },
    {
      "id": "CondCanBuild",
      "name": "Can Build",
      "description": [
        "Tests whether a player is allowed to build at a certain location.",
        "This condition requires a supported regions plugin to be installed."
      ],
      "examples": [
        "command /setblock &lt;material&gt;:",
        "\tdescription: set the block at your crosshair to a different type",
        "\ttrigger:",
        "\t\tplayer cannot build at the targeted block:",
        "\t\t\tmessage \"You do not have permission to change blocks there!\"",
        "\t\t\tstop",
        "\t\tset the targeted block to argument"
      ],
      "since": [
        "2.0"
      ],
      "patterns": [
        "%players% (can|(is|are) allowed to) build %directions% %locations%",
        "%players% (can('t|not)|(is|are)(n't| not) allowed to) build %directions% %locations%"
      ]
    },
    {
      "id": "CondCanFly",
      "name": "Can Fly",
      "description": [
        "Whether a player is allowed to fly."
      ],
      "examples": [
        "player can fly"
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "%players% can fly",
        "%players% (can't|cannot|can not) fly"
      ]
    },
    {
      "id": "CondCanHold",
      "name": "Can Hold",
      "description": [
        "Tests whether a player or a chest can hold the given item."
      ],
      "examples": [
        "block can hold 200 cobblestone",
        "player has enough space for 64 feathers"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "%inventories% (can hold|ha(s|ve) [enough] space (for|to hold)) %itemtypes%",
        "%inventories% (can(no|')t hold|(ha(s|ve) not|ha(s|ve)n't|do[es]n't have) [enough] space (for|to hold)) %itemtypes%"
      ]
    },
    {
      "id": "CondCanSee",
      "name": "Can See",
      "description": [
        "Checks whether the given players can see another players."
      ],
      "examples": [
        "if the player can't see the player-argument:",
        "\tmessage \"&lt;light red&gt;The player %player-argument% is not online!\""
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "%players% (is|are) [(in)]visible for %players%",
        "%players% can see %players%",
        "%players% (is|are)(n't| not) [(in)]visible for %players%",
        "%players% can('t| not) see %players%"
      ]
    },
    {
      "id": "CondChance",
      "name": "Chance",
      "description": [
        "A condition that randomly succeeds or fails.",
        "Valid values are between 0% and 100%, or if the percent sign is omitted between 0 and 1."
      ],
      "examples": [
        "chance of 50%:",
        "\tdrop a diamond",
        "chance of {chance}% # {chance} between 0 and 100",
        "chance of {chance} # {chance} between 0 and 1"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "chance of %number%(\\%|)"
      ]
    },
    {
      "id": "CondCompare",
      "name": "Comparison",
      "description": [
        "A very general condition, it simply compares two values. Usually you can only compare for equality (e.g. block is/isn't of &lt;type&gt;), but some values can also be compared using greater than/less than. In that case you can also test for whether an object is between two others.",
        "Note: This is the only element where not all patterns are shown. It has actually another two sets of similar patters, but with (was|were) or will be instead of (is|are) respectively, which check different time states of the first expression."
      ],
      "examples": [
        "the clicked block is a stone slab or a double stone slab",
        "time in the player's world is greater than 8:00",
        "the creature is not an enderman or an ender dragon"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "(neither|) %objects% ((is|are)(|(n't| not| neither)) ((greater|more|higher|bigger|larger) than|above)|\\>) %objects%",
        "(neither|) %objects% ((is|are)(|(n't| not| neither)) (greater|more|higher|bigger|larger|above) [than] or (equal to|the same as)|\\>=) %objects%",
        "(neither|) %objects% ((is|are)(|(n't| not| neither)) ((less|smaller|lower) than|below)|\\<) %objects%",
        "(neither|) %objects% ((is|are)(|(n't| not| neither)) (less|smaller|lower|below) [than] or (equal to|the same as)|\\<=) %objects%",
        "(neither|) %objects% ((is|are) (not|neither)|isn't|aren't|!=) [equal to] %objects%",
        "(neither|) %objects% (is|are|=) [(equal to|the same as)] %objects%",
        "(neither|) %objects% (is|are) between %objects% and %objects%",
        "(neither|) %objects% (is not|are not|isn't|aren't) between %objects% and %objects%",
        "(neither|) %objects% (was|were)(|(n't| not| neither)) ((greater|more|higher|bigger|larger) than|above) %objects%",
        "(neither|) %objects% (was|were)(|(n't| not| neither)) (greater|more|higher|bigger|larger|above) [than] or (equal to|the same as) %objects%",
        "(neither|) %objects% (was|were)(|(n't| not| neither)) ((less|smaller|lower) than|below) %objects%",
        "(neither|) %objects% (was|were)(|(n't| not| neither)) (less|smaller|lower|below) [than] or (equal to|the same as) %objects%",
        "(neither|) %objects% ((was|were) (not|neither)|wasn't|weren't) [equal to] %objects%",
        "(neither|) %objects% (was|were) [(equal to|the same as)] %objects%",
        "(neither|) %objects% (was|were) between %objects% and %objects%",
        "(neither|) %objects% (was not|were not|wasn't|weren't) between %objects% and %objects%",
        "(neither|) %objects% (will be|(will (not|neither) be|won't be)) ((greater|more|higher|bigger|larger) than|above) %objects%",
        "(neither|) %objects% (will be|(will (not|neither) be|won't be)) (greater|more|higher|bigger|larger|above) [than] or (equal to|the same as) %objects%",
        "(neither|) %objects% (will be|(will (not|neither) be|won't be)) ((less|smaller|lower) than|below) %objects%",
        "(neither|) %objects% (will be|(will (not|neither) be|won't be)) (less|smaller|lower|below) [than] or (equal to|the same as) %objects%",
        "(neither|) %objects% ((will (not|neither) be|won't be)|(isn't|aren't|is not|are not) (turning|changing) [in]to) [equal to] %objects%",
        "(neither|) %objects% (will be [(equal to|the same as)]|(is|are) (turning|changing) [in]to) %objects%",
        "(neither|) %objects% will be between %objects% and %objects%",
        "(neither|) %objects% (will not be|won't be) between %objects% and %objects%"
      ]
    },
    {
      "id": "CondContains",
      "name": "Contains",
      "description": [
        "Checks whether an inventory contains an item, a text contains another piece of text, or a list (e.g. {list variable::*} or 'drops') contains another object."
      ],
      "examples": [
        "block contains 20 cobblestone",
        "player has 4 flint and 2 iron ingots",
        "{list::*} contains 5"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "%inventories% (has|have) %itemtypes% [in [(the[ir]|his|her|its)] inventory]",
        "%inventories% (doesn't|does not|do not|don't) have %itemtypes% [in [(the[ir]|his|her|its)] inventory]",
        "%inventories/strings/objects% contain[(s)] %itemtypes/strings/objects%",
        "%inventories/strings/objects% (doesn't|does not|do not|don't) contain %itemtypes/strings/objects%"
      ]
    },
    {
      "id": "CondDamageCause",
      "name": "Damage Cause",
      "description": [
        "Tests what kind of damage caused a damage event. Refer to the Damage Cause type for a list of all possible causes."
      ],
      "examples": [
        "# make players use their potions of fire resistance whenever they take any kind of fire damage",
        "on damage:",
        "\tdamage was caused by lava, fire or burning",
        "\tvictim is a player",
        "\tvictim has a potion of fire resistance",
        "\tcancel event",
        "\tapply fire resistance to the victim for 30 seconds",
        "\tremove 1 potion of fire resistance from the victim",
        "# prevent mobs from dropping items under certain circumstances",
        "on death:",
        "\tentity is not a player",
        "\tdamage wasn't caused by a block explosion, an attack, a projectile, a potion, fire, burning, thorns or poison",
        "\tclear drops"
      ],
      "since": [
        "2.0"
      ],
      "patterns": [
        "[the] damage (was|is|has)(|n('|o)t) [been] (caused|done|made) by %damagecause%"
      ]
    },
    {
      "id": "CondEntityIsWet",
      "name": "Entity is Wet",
      "description": [
        "Checks whether an entity is wet or not (in water, rain or a bubble column)."
      ],
      "examples": [
        "if player is wet:"
      ],
      "since": [
        "2.6.1"
      ],
      "patterns": [
        "%entities% (is|are) wet",
        "%entities% (isn't|is not|aren't|are not) wet"
      ],
      "required plugins": [
        "Paper 1.16+"
      ]
    },
    {
      "id": "CondEntityIsInLiquid",
      "name": "Entity is in Liquid",
      "description": [
        "Checks whether an entity is in rain, lava, water or a bubble column."
      ],
      "examples": [
        "if player is in rain:",
        "if player is in water:",
        "player is in lava:",
        "player is in bubble column"
      ],
      "since": [
        "2.6.1"
      ],
      "patterns": [
        "%entities% (is|are) in (water|lava|[a] bubble[ ]column|rain)",
        "%entities% (isn't|is not|aren't|are not) in (water|lava|[a] bubble[ ]column|rain)"
      ],
      "required plugins": [
        "Minecraft 1.16+ (in water), Paper 1.16+ (in rain, lava and bubble column)"
      ]
    },
    {
      "id": "CondCancelled",
      "name": "Event Cancelled",
      "description": [
        "Checks whether or not the event is cancelled."
      ],
      "examples": [
        "on click:",
        "\tif event is cancelled:",
        "\t\tbroadcast \"no clicks allowed!\""
      ],
      "since": [
        "2.2-dev36"
      ],
      "patterns": [
        "[the] event is cancel[l]ed",
        "[the] event (is not|isn't) cancel[l]ed"
      ]
    },
    {
      "id": "CondIsSet",
      "name": "Exists/Is Set",
      "description": [
        "Checks whether a given expression or variable is set."
      ],
      "examples": [
        "{teams::%player's uuid%::preferred-team} is not set",
        "on damage:",
        "\tprojectile exists",
        "\tbroadcast \"%attacker% used a %projectile% to attack %victim%!\""
      ],
      "since": [
        "1.2"
      ],
      "patterns": [
        "%objects% (exist[s]|(is|are) set)",
        "%objects% (do[es](n't| not) exist|(is|are)(n't| not) set)"
      ]
    },
    {
      "id": "CondAI",
      "name": "Has AI",
      "description": [
        "Checks whether an entity has AI."
      ],
      "examples": [
        "target entity has ai"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "%livingentities% (has|have) (ai|artificial intelligence)",
        "%livingentities% (doesn't|does not|do not|don't) have (ai|artificial intelligence)"
      ]
    },
    {
      "id": "CondHasClientWeather",
      "name": "Has Client Weather",
      "description": [
        "Checks whether the given players have a custom client weather"
      ],
      "examples": [
        "if the player has custom weather:",
        "\tmessage \"Your custom weather is %player's weather%\""
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "%players% (has|have) [a] (client|custom) weather [set]",
        "%players% (doesn't|does not|do not|don't) have [a] (client|custom) weather [set]"
      ]
    },
    {
      "id": "CondHasCustomModelData",
      "name": "Has Custom Model Data",
      "description": [
        "Check if an item has a custom model data tag"
      ],
      "examples": [
        "player's tool has custom model data"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "%itemtypes% (has|have) [custom] model data",
        "%itemtypes% (doesn't|does not|do not|don't) have [custom] model data"
      ],
      "required plugins": [
        "1.14+"
      ]
    },
    {
      "id": "CondHasMetadata",
      "name": "Has Metadata",
      "description": [
        "Checks whether a metadata holder has a metadata tag."
      ],
      "examples": [
        "if player has metadata value \"healer\":"
      ],
      "since": [
        "2.2-dev36"
      ],
      "patterns": [
        "%metadataholders% (has|have) metadata [(value|tag)[s]] %strings%",
        "%metadataholders% (doesn't|does not|do not|don't) have metadata [(value|tag)[s]] %strings%"
      ]
    },
    {
      "id": "CondPermission",
      "name": "Has Permission",
      "description": [
        "Test whether a player has a certain permission."
      ],
      "examples": [
        "player has permission \"skript.tree\"",
        "victim has the permission \"admin\":",
        "\tsend \"You're attacking an admin!\" to attacker"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "%commandsenders% (has|have) [the] permission[s] %strings%",
        "%commandsenders% (doesn't|does not|do not|don't) have [the] permission[s] %strings%"
      ]
    },
    {
      "id": "CondPlayedBefore",
      "name": "Has Played Before",
      "description": [
        "Checks whether a player has played on this server before. You can also use on first join if you want to make triggers for new players."
      ],
      "examples": [
        "player has played on this server before",
        "player hasn't played before"
      ],
      "since": [
        "1.4"
      ],
      "patterns": [
        "%offlineplayer% [(has|did)] [already] play[ed] [on (this|the) server] (before|already)",
        "%offlineplayer% (has not|hasn't|did not|didn't) [(already|yet)] play[ed] [on (this|the) server] (before|already|yet)"
      ]
    },
    {
      "id": "CondHasPotion",
      "name": "Has Potion",
      "description": [
        "Checks whether the given living entities have specific potion effects."
      ],
      "examples": [
        "if player has potion speed:",
        "\tsend \"You are sonic!\"",
        "",
        "if all players have potion effects speed and haste:",
        "\tbroadcast \"You are ready to MINE!\""
      ],
      "since": [
        "2.6.1"
      ],
      "patterns": [
        "%livingentities% (has|have) potion[s] [effect[s]] %potioneffecttypes%",
        "%livingentities% (doesn't|does not|do not|don't) have potion[s] [effect[s]] %potioneffecttypes%"
      ]
    },
    {
      "id": "CondHasResourcePack",
      "name": "Has Resource Pack",
      "description": [
        "Checks whether the given players have a server resource pack loaded. Please note that this can't detect player's own resource pack, only the resource pack that sent by the server."
      ],
      "examples": [
        "if the player has a resource pack loaded:"
      ],
      "since": [
        "2.4"
      ],
      "patterns": [
        "%players% (has|have) [a] resource pack [(loaded|installed)]",
        "%players% (doesn't|does not|do not|don't) have [a] resource pack [(loaded|installed)]"
      ],
      "required plugins": [
        "Paper 1.9 or newer"
      ]
    },
    {
      "id": "CondHasScoreboardTag",
      "name": "Has Scoreboard Tag",
      "description": [
        "Checks whether the given entities has the given scoreboard tags."
      ],
      "examples": [
        "if the targeted armor stand has the scoreboard tag \"test tag\":"
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "%entities% (has|have) [the] score[ ]board tag[s] %strings%",
        "%entities% (doesn't|does not|do not|don't) have [the] score[ ]board tag[s] %strings%"
      ]
    },
    {
      "id": "CondIgnitionProcess",
      "name": "Ignition Process",
      "description": [
        "Checks if a creeper is going to explode."
      ],
      "examples": [
        "if the last spawned creeper is going to explode:",
        "\tloop all players in radius 3 of the last spawned creeper",
        "\t\tsend \"RUN!!!\" to the loop-player"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "[creeper[s]] %livingentities% ((is|are)|(isn't|is not|aren't|are not)) going to explode",
        "[creeper[s]] %livingentities% ((is|are)|(isn't|is not|aren't|are not)) in the (ignition|explosion) process",
        "creeper[s] %livingentities% ((is|are)|(isn't|is not|aren't|are not)) ignited"
      ],
      "required plugins": [
        "Paper 1.13 or newer"
      ]
    },
    {
      "id": "CondIsAlive",
      "name": "Is Alive",
      "description": [
        "Checks whether an entity is alive. Works for non-living entities too."
      ],
      "examples": [
        "if {villager-buddy::%player's uuid%} is not dead:",
        "",
        "on shoot:",
        "\twhile the projectile is alive:"
      ],
      "since": [
        "2.0, 2.4-alpha4 (non-living entity support)"
      ],
      "patterns": [
        "%entities% (is|are) (alive|dead)",
        "%entities% (isn't|is not|aren't|are not) (alive|dead)"
      ]
    },
    {
      "id": "CondIsBanned",
      "name": "Is Banned",
      "description": [
        "Checks whether a player or IP is banned."
      ],
      "examples": [
        "player is banned",
        "victim is not IP-banned",
        "\"127.0.0.1\" is banned"
      ],
      "since": [
        "1.4"
      ],
      "patterns": [
        "%offlineplayers/strings% (is|are) banned",
        "%players/strings% (is|are) IP(-| |)banned",
        "%offlineplayers/strings% (isn't|is not|aren't|are not) banned",
        "%players/strings% (isn't|is not|aren't|are not) IP(-| |)banned"
      ]
    },
    {
      "id": "CondIsBlock",
      "name": "Is Block",
      "description": [
        "Checks whether an item is a block."
      ],
      "examples": [
        "player's held item is a block",
        "{list::*} are blocks"
      ],
      "since": [
        "2.4"
      ],
      "patterns": [
        "%itemtypes% (is|are) ([a] block|blocks)",
        "%itemtypes% (isn't|is not|aren't|are not) ([a] block|blocks)"
      ]
    },
    {
      "id": "CondIsBlockRedstonePowered",
      "name": "Is Block Redstone Powered",
      "description": [
        "Checks if a block is indirectly or directly powered by redstone"
      ],
      "examples": [
        "if clicked block is redstone powered:",
        "\tsend \"This block is well-powered by redstone!\"",
        "if clicked block is indirectly redstone powered:",
        "\tsend \"This block is indirectly redstone powered.\""
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "%blocks% (is|are) redstone powered",
        "%blocks% (is|are) indirectly redstone powered",
        "%blocks% (is|are)(n't| not) redstone powered",
        "%blocks% (is|are)(n't| not) indirectly redstone powered"
      ]
    },
    {
      "id": "CondIsBlocking",
      "name": "Is Blocking",
      "description": [
        "Checks whether a player is blocking with their shield."
      ],
      "examples": [
        "on damage of player:",
        "\tvictim is blocking",
        "\tdamage attacker by 0.5 hearts"
      ],
      "since": [
        "unknown (before 2.1)"
      ],
      "patterns": [
        "%players% (is|are) (blocking|defending) [with [a] shield]",
        "%players% (isn't|is not|aren't|are not) (blocking|defending) [with [a] shield]"
      ]
    },
    {
      "id": "CondIsBurning",
      "name": "Is Burning",
      "description": [
        "Checks whether an entity is on fire, e.g. a zombie due to being in sunlight, or any entity after falling into lava."
      ],
      "examples": [
        "# increased attack against burning targets",
        "victim is burning:",
        "\tincrease damage by 2"
      ],
      "since": [
        "1.4.4"
      ],
      "patterns": [
        "%entities% (is|are) (burning|ignited|on fire)",
        "%entities% (isn't|is not|aren't|are not) (burning|ignited|on fire)"
      ]
    },
    {
      "id": "CondIsCharged",
      "name": "Is Charged",
      "description": [
        "Checks if a creeper is charged (powered)."
      ],
      "examples": [
        "if the last spawned creeper is charged:",
        "\tbroadcast \"A charged creeper is at %location of last spawned creeper%\""
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "%livingentities% (is|are) (charged|powered)",
        "%livingentities% (isn't|is not|aren't|are not) (charged|powered)"
      ]
    },
    {
      "id": "CondIsEdible",
      "name": "Is Edible",
      "description": [
        "Checks whether an item is edible."
      ],
      "examples": [
        "steak is edible",
        "player's tool is edible"
      ],
      "since": [
        "2.2-dev36"
      ],
      "patterns": [
        "%itemtypes% (is|are) edible",
        "%itemtypes% (isn't|is not|aren't|are not) edible"
      ]
    },
    {
      "id": "CondIsEmpty",
      "name": "Is Empty",
      "description": [
        "Checks whether an inventory, an inventory slot, or a text is empty."
      ],
      "examples": [
        "player's inventory is empty"
      ],
      "since": [
        "unknown (before 2.1)"
      ],
      "patterns": [
        "%inventories/slots/strings% (is|are) empty",
        "%inventories/slots/strings% (isn't|is not|aren't|are not) empty"
      ]
    },
    {
      "id": "CondIsEnchanted",
      "name": "Is Enchanted",
      "description": [
        "Checks whether an item is enchanted."
      ],
      "examples": [
        "tool of the player is enchanted with efficiency 2",
        "helm, chestplate, leggings or boots are enchanted"
      ],
      "since": [
        "1.4.6"
      ],
      "patterns": [
        "%itemtypes% (is|are) enchanted [with %enchantmenttype%]",
        "%itemtypes% (isn't|is not|aren't|are not) enchanted [with %enchantmenttype%]"
      ]
    },
    {
      "id": "CondIsFlammable",
      "name": "Is Flammable",
      "description": [
        "Checks whether an item is flammable."
      ],
      "examples": [
        "wood is flammable",
        "player's tool is flammable"
      ],
      "since": [
        "2.2-dev36"
      ],
      "patterns": [
        "%itemtypes% (is|are) flammable",
        "%itemtypes% (isn't|is not|aren't|are not) flammable"
      ]
    },
    {
      "id": "CondIsFlying",
      "name": "Is Flying",
      "description": [
        "Checks whether a player is flying."
      ],
      "examples": [
        "player is not flying"
      ],
      "since": [
        "1.4.4"
      ],
      "patterns": [
        "%players% (is|are) flying",
        "%players% (isn't|is not|aren't|are not) flying"
      ]
    },
    {
      "id": "CondIsFuel",
      "name": "Is Fuel",
      "description": [
        "Checks whether an item can be used as fuel in a furnace."
      ],
      "examples": [
        "on right click on furnace:",
        "\tif player's tool is not fuel:",
        "\t\tsend \"Please hold a valid fuel item in your hand\"",
        "\t\tcancel event"
      ],
      "since": [
        "2.5.1"
      ],
      "patterns": [
        "%itemtypes% (is|are) [furnace] fuel",
        "%itemtypes% (isn't|is not|aren't|are not) [furnace] fuel"
      ],
      "required plugins": [
        "Minecraft 1.11.2+"
      ]
    },
    {
      "id": "CondItemInHand",
      "name": "Is Holding",
      "description": [
        "Checks whether a player is holding a specific item. Cannot be used with endermen, use 'entity is [not] an enderman holding &lt;item type&gt;' instead."
      ],
      "examples": [
        "player is holding a stick",
        "victim isn't holding a sword of sharpness"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[%livingentities%] ha(s|ve) %itemtypes% in [main] hand",
        "[%livingentities%] (is|are) holding %itemtypes% [in main hand]",
        "[%livingentities%] ha(s|ve) %itemtypes% in off[(-| )]hand",
        "[%livingentities%] (is|are) holding %itemtypes% in off[(-| )]hand",
        "[%livingentities%] (ha(s|ve) not|do[es]n't have) %itemtypes% in [main] hand",
        "[%livingentities%] (is not|isn't) holding %itemtypes% [in main hand]",
        "[%livingentities%] (ha(s|ve) not|do[es]n't have) %itemtypes% in off[(-| )]hand",
        "[%livingentities%] (is not|isn't) holding %itemtypes% in off[(-| )]hand"
      ]
    },
    {
      "id": "CondIncendiary",
      "name": "Is Incendiary",
      "description": [
        "Checks if an entity will create fire when it explodes. This condition is also usable in an explosion prime event."
      ],
      "examples": [
        "on explosion prime:",
        "\tif the explosion is fiery:",
        "\t\tbroadcast \"A fiery explosive has been ignited!\""
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "%entities% ((is|are) incendiary|cause[s] a[n] (incendiary|fiery) explosion)",
        "%entities% ((is not|are not|isn't|aren't) incendiary|(does not|do not|doesn't|don't) cause[s] a[n] (incendiary|fiery) explosion)",
        "the [event(-| )]explosion (is|(is not|isn't)) (incendiary|fiery)"
      ]
    },
    {
      "id": "CondIsInteractable",
      "name": "Is Interactable",
      "description": [
        "Checks wether or not a block is interactable."
      ],
      "examples": [
        "on block break:",
        "\tif event-block is interactable:",
        "\t\tcancel event",
        "\t\tsend \"You cannot break interactable blocks!\""
      ],
      "since": [
        "2.5.2"
      ],
      "patterns": [
        "%itemtypes% (is|are) interactable",
        "%itemtypes% (isn't|is not|aren't|are not) interactable"
      ],
      "required plugins": [
        "Minecraft 1.13+"
      ]
    },
    {
      "id": "CondIsInvulnerable",
      "name": "Is Invulnerable",
      "description": [
        "Checks whether an entity is invulnerable."
      ],
      "examples": [
        "target entity is invulnerable"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "%entities% (is|are) invulnerable",
        "%entities% (isn't|is not|aren't|are not) invulnerable"
      ]
    },
    {
      "id": "CondLeashed",
      "name": "Is Leashed",
      "description": [
        "Checks to see if an entity is currently leashed."
      ],
      "examples": [
        "target entity is leashed"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "%livingentities% (is|are) leashed",
        "%livingentities% (isn't|is not|aren't|are not) leashed"
      ]
    },
    {
      "id": "CondIsLoaded",
      "name": "Is Loaded",
      "description": [
        "Checks whether or not a chunk/world is loaded. 'chunk at 1, 1' uses chunk coords, which are location coords divided by 16."
      ],
      "examples": [
        "if chunk at {home::%player's uuid%} is loaded:",
        "if chunk 1, 10 in world \"world\" is loaded:",
        "if world(\"lobby\") is loaded:"
      ],
      "since": [
        "2.3, 2.5 (revamp with chunk at location/coords)"
      ],
      "patterns": [
        "chunk[s] %directions% [%locations%] (is|are)[((n't| not))] loaded",
        "chunk [at] %number%, %number% (in|of) [world] %world% is[((n't| not))] loaded",
        "[world[s]] %worlds% (is|are)[((n't| not))] loaded"
      ]
    },
    {
      "id": "CondIsMember",
      "name": "Is Member/Owner of Region",
      "description": [
        "Checks whether a player is a member or owner of a particular region.",
        "This condition requires a supported regions plugin to be installed."
      ],
      "examples": [
        "on region enter:",
        "\tplayer is the owner of the region",
        "\tmessage \"Welcome back to %region%!\"",
        "\tsend \"%player% just entered %region%!\" to all members of the region"
      ],
      "since": [
        "2.1"
      ],
      "patterns": [
        "%offlineplayers% (is|are) ([a] member|[(the|an)] owner) of [[the] region] %regions%",
        "%offlineplayers% (is|are)(n't| not) ([a] member|[(the|an)] owner) of [[the] region] %regions%"
      ]
    },
    {
      "id": "CondIsVectorNormalized",
      "name": "Is Normalized",
      "description": [
        "Checks whether a vector is normalized i.e. length of 1"
      ],
      "examples": [
        "vector of player's location is normalized"
      ],
      "since": [
        "2.5.1"
      ],
      "patterns": [
        "%vectors% (is|are) normalized",
        "%vectors% (isn't|is not|aren't|are not) normalized"
      ],
      "required plugins": [
        "Minecraft 1.13.2+"
      ]
    },
    {
      "id": "CondIsOccluding",
      "name": "Is Occluding",
      "description": [
        "Checks whether an item is a block and completely blocks vision."
      ],
      "examples": [
        "player's tool is occluding"
      ],
      "since": [
        "2.5.1"
      ],
      "patterns": [
        "%itemtypes% (is|are) occluding",
        "%itemtypes% (isn't|is not|aren't|are not) occluding"
      ]
    },
    {
      "id": "CondIsOnline",
      "name": "Is Online",
      "description": [
        "Checks whether a player is online."
      ],
      "examples": [
        "player is online",
        "player-argument is offline"
      ],
      "since": [
        "1.4"
      ],
      "patterns": [
        "%offlineplayers% (is|are) (online|offline)",
        "%offlineplayers% (isn't|is not|aren't|are not) (online|offline)"
      ]
    },
    {
      "id": "CondIsPassable",
      "name": "Is Passable",
      "description": [
        "Checks whether a block is passable.",
        "A block is passable if it has no colliding parts that would prevent players from moving through it.",
        "Blocks like tall grass, flowers, signs, etc. are passable, but open doors, fence gates, trap doors, etc. are not because they still have parts that can be collided with."
      ],
      "examples": [
        "if player's targeted block is passable"
      ],
      "since": [
        "2.5.1"
      ],
      "patterns": [
        "%blocks% (is|are) passable",
        "%blocks% (isn't|is not|aren't|are not) passable"
      ],
      "required plugins": [
        "Minecraft 1.13.2+"
      ]
    },
    {
      "id": "CondIsPluginEnabled",
      "name": "Is Plugin Enabled",
      "description": [
        "Check if a plugin is enabled/disabled on the server.",
        "Plugin names can be found in the plugin's 'plugin.yml' file or by using the '/plugins' command, they are NOT the name of the plugin's jar file.",
        "When checking if a plugin is not enabled, this will return true if the plugin is either disabled or not on the server. ",
        "When checking if a plugin is disabled, this will return true if the plugin is on the server and is disabled."
      ],
      "examples": [
        "if plugin \"Vault\" is enabled:",
        "if plugin \"WorldGuard\" is not enabled:",
        "if plugins \"Essentials\" and \"Vault\" are enabled:",
        "if plugin \"MyBrokenPlugin\" is disabled:"
      ],
      "since": [
        "2.6"
      ],
      "patterns": [
        "plugin[s] %strings% (is|are) enabled",
        "plugin[s] %strings% (is|are)(n't| not) enabled",
        "plugin[s] %strings% (is|are) disabled"
      ]
    },
    {
      "id": "CondIsPoisoned",
      "name": "Is Poisoned",
      "description": [
        "Checks whether an entity is poisoned."
      ],
      "examples": [
        "player is poisoned:",
        "\tcure the player from poison",
        "\tmessage \"You have been cured!\""
      ],
      "since": [
        "1.4.4"
      ],
      "patterns": [
        "%livingentities% (is|are) poisoned",
        "%livingentities% (isn't|is not|aren't|are not) poisoned"
      ]
    },
    {
      "id": "CondIsRiding",
      "name": "Is Riding",
      "description": [
        "Tests whether an entity is riding another or is in a vehicle."
      ],
      "examples": [
        "player is riding a saddled pig"
      ],
      "since": [
        "2.0"
      ],
      "patterns": [
        "%entities% (is|are) riding [%entitydatas%]",
        "%entities% (isn't|is not|aren't|are not) riding [%entitydatas%]"
      ]
    },
    {
      "id": "CondIsRiptiding",
      "name": "Is Riptiding",
      "description": [
        "Checks to see if an entity is currently using the Riptide enchantment."
      ],
      "examples": [
        "target entity is riptiding"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "%livingentities% (is|are) riptiding",
        "%livingentities% (isn't|is not|aren't|are not) riptiding"
      ]
    },
    {
      "id": "CondScriptLoaded",
      "name": "Is Script Loaded",
      "description": [
        "Check if the current script, or another script, is currently loaded."
      ],
      "examples": [
        "script is loaded",
        "script \"example.sk\" is loaded"
      ],
      "since": [
        "2.2-dev31"
      ],
      "patterns": [
        "script[s] [%strings%] (is|are) loaded",
        "script[s] [%strings%] (isn't|is not|aren't|are not) loaded"
      ]
    },
    {
      "id": "CondIsSilent",
      "name": "Is Silent",
      "description": [
        "Checks whether an entity is silent i.e. its sounds are disabled."
      ],
      "examples": [
        "target entity is silent"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "%entities% (is|are) silent",
        "%entities% (isn't|is not|aren't|are not) silent"
      ]
    },
    {
      "id": "CondIsSleeping",
      "name": "Is Sleeping",
      "description": [
        "Checks whether a player is sleeping."
      ],
      "examples": [
        "# cut your enemies' throats in their sleep >=)",
        "on attack:",
        "\tattacker is holding a sword",
        "\tvictim is sleeping",
        "\tincrease the damage by 1000"
      ],
      "since": [
        "1.4.4"
      ],
      "patterns": [
        "%players% (is|are) sleeping",
        "%players% (isn't|is not|aren't|are not) sleeping"
      ]
    },
    {
      "id": "CondIsSlimeChunk",
      "name": "Is Slime Chunk",
      "description": [
        "Tests whether a chunk is a so-called slime chunk.",
        "Slimes can generally spawn in the swamp biome and in slime chunks.",
        "For more info, see the Minecraft wiki."
      ],
      "examples": [
        "command /slimey:",
        "\ttrigger:",
        "\t\tif chunk at player is a slime chunk:",
        "\t\t\tsend \"Yeah, it is!\"",
        "\t\telse:",
        "\t\t\tsend \"Nope, it isn't\""
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "%chunk% (is|are) ([a] slime chunk|slime chunks|slimey)",
        "%chunk% (isn't|is not|aren't|are not) ([a] slime chunk|slime chunks|slimey)"
      ]
    },
    {
      "id": "CondIsSneaking",
      "name": "Is Sneaking",
      "description": [
        "Checks whether a player is sneaking."
      ],
      "examples": [
        "# prevent mobs from seeing sneaking players if they are at least 4 meters apart",
        "on target:",
        "\ttarget is sneaking",
        "\tdistance of target and the entity is bigger than 4",
        "\tcancel the event"
      ],
      "since": [
        "1.4.4"
      ],
      "patterns": [
        "%players% (is|are) sneaking",
        "%players% (isn't|is not|aren't|are not) sneaking"
      ]
    },
    {
      "id": "CondIsSolid",
      "name": "Is Solid",
      "description": [
        "Checks whether an item is solid."
      ],
      "examples": [
        "grass block is solid",
        "player's tool isn't solid"
      ],
      "since": [
        "2.2-dev36"
      ],
      "patterns": [
        "%itemtypes% (is|are) solid",
        "%itemtypes% (isn't|is not|aren't|are not) solid"
      ]
    },
    {
      "id": "CondIsSprinting",
      "name": "Is Sprinting",
      "description": [
        "Checks whether a player is sprinting."
      ],
      "examples": [
        "player is not sprinting"
      ],
      "since": [
        "1.4.4"
      ],
      "patterns": [
        "%players% (is|are) sprinting",
        "%players% (isn't|is not|aren't|are not) sprinting"
      ]
    },
    {
      "id": "CondIsSwimming",
      "name": "Is Swimming",
      "description": [
        "Checks whether a living entity is swimming."
      ],
      "examples": [
        "player is swimming"
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "%livingentities% (is|are) swimming",
        "%livingentities% (isn't|is not|aren't|are not) swimming"
      ],
      "required plugins": [
        "1.13 or newer"
      ]
    },
    {
      "id": "CondIsTameable",
      "name": "Is Tameable",
      "description": [
        "Check if an entity is tameable."
      ],
      "examples": [
        "on damage:",
        "\tif victim is tameable:",
        "\t\tcancel event"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "%livingentities% (is|are) tameable",
        "%livingentities% (isn't|is not|aren't|are not) tameable"
      ]
    },
    {
      "id": "CondIsTransparent",
      "name": "Is Transparent",
      "description": [
        "Checks whether an item is transparent. Note that this condition may not work for all blocks, due to the transparency list used by Spigot not being completely accurate."
      ],
      "examples": [
        "player's tool is transparent."
      ],
      "since": [
        "2.2-dev36"
      ],
      "patterns": [
        "%itemtypes% (is|are) transparent",
        "%itemtypes% (isn't|is not|aren't|are not) transparent"
      ]
    },
    {
      "id": "CondIsUnbreakable",
      "name": "Is Unbreakable",
      "description": [
        "Checks whether an item is unbreakable."
      ],
      "examples": [
        "if event-item is unbreakable"
      ],
      "since": [
        "2.5.1"
      ],
      "patterns": [
        "%itemtypes% (is|are) unbreakable",
        "%itemtypes% (isn't|is not|aren't|are not) unbreakable"
      ],
      "required plugins": [
        "Minecraft 1.11+"
      ]
    },
    {
      "id": "CondIsWearing",
      "name": "Is Wearing",
      "description": [
        "Checks whether a player is wearing some armour."
      ],
      "examples": [
        "player is wearing an iron chestplate and iron leggings",
        "player is wearing all diamond armour"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "%livingentities% (is|are) wearing %itemtypes%",
        "%livingentities% (isn't|is not|aren't|are not) wearing %itemtypes%"
      ]
    },
    {
      "id": "CondIsWhitelisted",
      "name": "Is Whitelisted",
      "description": [
        "Whether or not the server or a player is whitelisted."
      ],
      "examples": [
        "if server is whitelisted:",
        "if player is whitelisted"
      ],
      "since": [
        "2.5.2"
      ],
      "patterns": [
        "[the] server (is|is(n't| not)) white[ ]listed",
        "%players% (is|are)(|(n't| not)) white[ ]listed"
      ]
    },
    {
      "id": "CondIsSkriptCommand",
      "name": "Is a Skript command",
      "description": [
        "Checks whether a command/string is a custom Skript command."
      ],
      "examples": [
        "# Example 1",
        "on command:",
        "\tcommand is a skript command",
        "",
        "# Example 2",
        "\"sometext\" is a skript command"
      ],
      "since": [
        "2.6"
      ],
      "patterns": [
        "%string% (is|are) [a] s(k|c)ript (command|cmd)",
        "%string% (isn't|is not|aren't|are not) [a] s(k|c)ript (command|cmd)"
      ]
    },
    {
      "id": "CondIsInWorld",
      "name": "Is in World",
      "description": [
        "Checks whether an entity is in a specific world."
      ],
      "examples": [
        "player is in \"world\"",
        "argument isn't in world \"world_nether\"",
        "the player is in the world of the victim"
      ],
      "since": [
        "1.4"
      ],
      "patterns": [
        "%entities% (is|are) in [[the] world[s]] %worlds%",
        "%entities% (isn't|is not|aren't|are not) in [[the] world[s]] %worlds%"
      ]
    },
    {
      "id": "CondIsOfType",
      "name": "Is of Type",
      "description": [
        "Checks whether an item of an entity is of the given type. This is mostly useful for variables, as you can use the general 'is' condition otherwise (e.g. 'victim is a creeper')."
      ],
      "examples": [
        "tool is of type {selected type}",
        "victim is of type {villager type}"
      ],
      "since": [
        "1.4"
      ],
      "patterns": [
        "%itemstacks/entities% (is|are) of type[s] %entitytypes/entitydatas%",
        "%itemstacks/entities% (isn't|is not|aren't|are not) of type[s] %entitytypes/entitydatas%"
      ]
    },
    {
      "id": "CondIsOnGround",
      "name": "Is on Ground",
      "description": [
        "Checks whether an entity is on ground."
      ],
      "examples": [
        "player is not on ground"
      ],
      "since": [
        "2.2-dev26"
      ],
      "patterns": [
        "%entities% (is|are) on [the] ground",
        "%entities% (isn't|is not|aren't|are not) on [the] ground"
      ]
    },
    {
      "id": "CondMatches",
      "name": "Matches",
      "description": [
        "Checks whether the defined strings match the input regexes (Regular expressions)."
      ],
      "examples": [
        "on chat:",
        "\tif message partially matches \"\\d\":",
        "\t\tsend \"Message contains a digit!\"",
        "\tif message doesn't match \"[A-Za-z]+\":",
        "\t\tsend \"Message doesn't only contain letters!\""
      ],
      "since": [
        "2.5.2"
      ],
      "patterns": [
        "%strings% (match[es]|do[es](n't| not) match) %strings%",
        "%strings% (partially match[es]|do[es](n't| not) partially match) %strings%"
      ]
    },
    {
      "id": "CondProjectileCanBounce",
      "name": "Projectile Can Bounce",
      "description": [
        "Whether or not a projectile can bounce."
      ],
      "examples": [
        "on shoot:",
        "\tsend \"Boing!\" to all players if projectile can bounce"
      ],
      "since": [
        "2.5.1"
      ],
      "patterns": [
        "%projectiles% can bounce",
        "%projectiles% (can't|cannot|can not) bounce"
      ]
    },
    {
      "id": "CondPvP",
      "name": "PvP",
      "description": [
        "Checks the PvP state of a world."
      ],
      "examples": [
        "PvP is enabled",
        "PvP is disabled in \"world\""
      ],
      "since": [
        "1.3.4"
      ],
      "patterns": [
        "(is PvP|PvP is) enabled [in %worlds%]",
        "(is PvP|PvP is) disabled [in %worlds%]"
      ]
    },
    {
      "id": "CondRegionContains",
      "name": "Region Contains",
      "description": [
        "Checks whether a location is contained in a particular region.",
        "This condition requires a supported regions plugin to be installed."
      ],
      "examples": [
        "player is in the region {regions::3}",
        "on region enter:",
        "\tregion contains {flags.%world%.red}",
        "\tmessage \"The red flag is near!\""
      ],
      "since": [
        "2.1"
      ],
      "patterns": [
        "[[the] region] %regions% contain[s] %directions% %locations%",
        "%locations% (is|are) ([contained] in|part of) [[the] region] %regions%",
        "[[the] region] %regions% (do|does)(n't| not) contain %directions% %locations%",
        "%locations% (is|are)(n't| not) (contained in|part of) [[the] region] %regions%"
      ]
    },
    {
      "id": "CondResourcePack",
      "name": "Resource Pack",
      "description": [
        "Checks state of the resource pack in a resource pack request response event."
      ],
      "examples": [
        "on resource pack response:",
        "\tif the resource pack wasn't accepted:",
        "\t\tkick the player due to \"You have to install the resource pack to play in this server!\""
      ],
      "since": [
        "2.4"
      ],
      "patterns": [
        "[the] resource pack (was|is|has) [been] %resourcepackstate%",
        "[the] resource pack (was|is|has)(n't| not) [been] %resourcepackstate%"
      ]
    },
    {
      "id": "CondStartsEndsWith",
      "name": "Starts/Ends With",
      "description": [
        "Checks if a text starts or ends with another."
      ],
      "examples": [
        "if the argument starts with \"test\" or \"debug\":",
        "\tsend \"Stop!\""
      ],
      "since": [
        "2.2-dev36, 2.5.1 (multiple strings support)"
      ],
      "patterns": [
        "%strings% (start|end)[s] with %strings%",
        "%strings% (doesn't|does not|do not|don't) (start|end) with %strings%"
      ]
    },
    {
      "id": "CondDate",
      "name": "Time",
      "description": [
        "Tests whether a given real time was more or less than some time span ago."
      ],
      "examples": [
        "command /command-with-cooldown:",
        "\ttrigger:",
        "\t\t{command::%player's uuid%::last-usage} was less than a minute ago:",
        "\t\t\tmessage \"Please wait a minute between uses of this command.\"",
        "\t\t\tstop",
        "\t\tset {command::%player's uuid%::last-usage} to now",
        "\t\t# ... actual command trigger here ..."
      ],
      "since": [
        "2.0"
      ],
      "patterns": [
        "%date% (was|were)( more|(n't| not) less) than %timespan% [ago]",
        "%date% (was|were)((n't| not) more| less) than %timespan% [ago]"
      ]
    },
    {
      "id": "CondWeather",
      "name": "Weather",
      "description": [
        "Checks whether the weather in a world is of a specific type.",
        "I welcome any ideas how to write this condition differently."
      ],
      "examples": [
        "is thundering",
        "is raining in \"world\" or \"world2\""
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "is %weathertypes% [in %worlds%]"
      ]
    }
  ],
  "effects": [
    {
      "id": "EffActionBar",
      "name": "Action Bar",
      "description": [
        "Sends an action bar message to the given player(s)."
      ],
      "examples": [
        "send action bar \"Hello player!\" to player"
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "send [the] action bar [with text] %string% to %players%"
      ]
    },
    {
      "id": "EffBan",
      "name": "Ban",
      "description": [
        "Bans or unbans a player or an IP address.",
        "If a reason is given, it will be shown to the player when they try to join the server while banned.",
        "A length of ban may also be given to apply a temporary ban. If it is absent for any reason, a permanent ban will be used instead.",
        "We recommend that you test your scripts so that no accidental permanent bans are applied.",
        "",
        "Note that banning people does not kick them from the server.",
        "Consider using the kick effect after applying a ban."
      ],
      "examples": [
        "unban player",
        "ban \"127.0.0.1\"",
        "IP-ban the player because \"he is an idiot\"",
        "ban player due to \"inappropriate language\" for 2 days"
      ],
      "since": [
        "1.4, 2.1.1 (ban reason), 2.5 (timespan)"
      ],
      "patterns": [
        "ban %strings/offlineplayers% [(by reason of|because [of]|on account of|due to) %string%] [for %timespan%]",
        "unban %strings/offlineplayers%",
        "ban %players% by IP [(by reason of|because [of]|on account of|due to) %string%] [for %timespan%]",
        "unban %players% by IP",
        "IP(-| )ban %players% [(by reason of|because [of]|on account of|due to) %string%] [for %timespan%]",
        "(IP(-| )unban|un[-]IP[-]ban) %players%"
      ]
    },
    {
      "id": "EffBreakNaturally",
      "name": "Break Block",
      "description": [
        "Breaks the block and spawns items as if a player had mined it",
        "\nYou can add a tool, which will spawn items based on how that tool would break the block ",
        "(ie: When using a hand to break stone, it drops nothing, whereas with a pickaxe it drops cobblestone)"
      ],
      "examples": [
        "on right click:",
        "\tbreak clicked block naturally",
        "loop blocks in radius 10 around player:",
        "\tbreak loop-block using player's tool",
        "loop blocks in radius 10 around player:",
        "\tbreak loop-block naturally using diamond pickaxe"
      ],
      "since": [
        "2.4"
      ],
      "patterns": [
        "break %blocks% [naturally] [using %itemtype%]"
      ]
    },
    {
      "id": "EffBroadcast",
      "name": "Broadcast",
      "description": [
        "Broadcasts a message to the server."
      ],
      "examples": [
        "broadcast \"Welcome %player% to the server!\"",
        "broadcast \"Woah! It's a message!\""
      ],
      "since": [
        "1.0, 2.6 (broadcasting objects), 2.6.1 (using advanced formatting)"
      ],
      "patterns": [
        "broadcast %objects% [(to|in) %worlds%]"
      ]
    },
    {
      "id": "EffCancelCooldown",
      "name": "Cancel Command Cooldown",
      "description": [
        "Only usable in commands. Makes it so the current command usage isn't counted towards the cooldown."
      ],
      "examples": [
        "command /nick &lt;text&gt;:",
        "\texecutable by: players",
        "\tcooldown: 10 seconds",
        "\ttrigger:",
        "\t\tif length of arg-1 is more than 16:",
        "\t\t\t# Makes it so that invalid arguments don't make you wait for the cooldown again",
        "\t\t\tcancel the cooldown",
        "\t\t\tsend \"Your nickname may be at most 16 characters.\"",
        "\t\t\tstop",
        "\t\tset the player's display name to arg-1"
      ],
      "since": [
        "2.2-dev34"
      ],
      "patterns": [
        "(cancel|ignore) [the] [current] [command] cooldown",
        "un(cancel|ignore) [the] [current] [command] cooldown"
      ]
    },
    {
      "id": "EffCancelDrops",
      "name": "Cancel Drops",
      "description": [
        "Cancels drops of items or experiences in a death or block break event. Please note that this doesn't keep items or experiences of a dead player. If you want to do that, use the Keep Inventory / Experience effect."
      ],
      "examples": [
        "on death of a zombie:",
        "\tif name of the entity is \"&cSpecial\":",
        "\t\tcancel drops of items",
        "",
        "on break of a coal ore:",
        "\tcancel the experience drops"
      ],
      "since": [
        "2.4"
      ],
      "patterns": [
        "(cancel|clear|delete) [the] drops [of (items|[e]xp[erience][s])]",
        "(cancel|clear|delete) [the] (item|[e]xp[erience]) drops"
      ],
      "required plugins": [
        "1.12.2 or newer (cancelling item drops of blocks)"
      ]
    },
    {
      "id": "EffCancelEvent",
      "name": "Cancel Event",
      "description": [
        "Cancels the event (e.g. prevent blocks from being placed, or damage being taken)."
      ],
      "examples": [
        "on damage:",
        "\tvictim is a player",
        "\tvictim has the permission \"skript.god\"",
        "\tcancel the event"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "cancel [the] event",
        "uncancel [the] event"
      ]
    },
    {
      "id": "EffChange",
      "name": "Change: Set/Add/Remove/Delete/Reset",
      "description": [
        "A very general effect that can change many expressions. Many expressions can only be set and/or deleted, while some can have things added to or removed from them."
      ],
      "examples": [
        "# set:",
        "Set the player's display name to \"&lt;red&gt;%name of player%\"",
        "set the block above the victim to lava",
        "# add:",
        "add 2 to the player's health # preferably use '<a href='#heal'>heal</a>' for this",
        "add argument to {blacklist::*}",
        "give a diamond pickaxe of efficiency 5 to the player",
        "increase the data value of the clicked block by 1",
        "# remove:",
        "remove 2 pickaxes from the victim",
        "subtract 2.5 from {points::%uuid of player%}",
        "# remove all:",
        "remove every iron tool from the player",
        "remove all minecarts from {entitylist::*}",
        "# delete:",
        "delete the block below the player",
        "clear drops",
        "delete {variable}",
        "# reset:",
        "reset walk speed of player",
        "reset chunk at the targeted block"
      ],
      "since": [
        "1.0 (set, add, remove, delete), 2.0 (remove all)"
      ],
      "patterns": [
        "(add|give) %objects% to %objects%",
        "increase %objects% by %objects%",
        "give %objects% %objects%",
        "set %objects% to %objects%",
        "remove (all|every) %objects% from %objects%",
        "(remove|subtract) %objects% from %objects%",
        "reduce %objects% by %objects%",
        "(delete|clear) %objects%",
        "reset %objects%"
      ]
    },
    {
      "id": "EffChargeCreeper",
      "name": "Charge Creeper",
      "description": [
        "Charges or uncharges a creeper. A creeper is charged when it has been struck by lightning."
      ],
      "examples": [
        "on spawn of creeper:",
        "\tcharge the event-entity"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "make %livingentities% [a[n]] (charged|powered|((un|non[-])charged|(un|non[-])powered)) [creeper[s]]",
        "(charge|power|(uncharge|unpower)) %livingentities%"
      ]
    },
    {
      "id": "EffColorItems",
      "name": "Colour Items",
      "description": [
        "Colours items in a given colour. You can also use RGB codes if you feel limited with the 16 default colours. RGB codes are three numbers from 0 to 255 in the order (red, green, blue), where (0,0,0) is black and (255,255,255) is white. Armor is colourable for all Minecraft versions. With Minecraft 1.11 or newer you can also colour potions and maps. Note that the colours might not look exactly how you'd expect."
      ],
      "examples": [
        "dye player's helmet blue",
        "colour the player's tool red"
      ],
      "since": [
        "2.0, 2.2-dev26 (maps and potions)"
      ],
      "patterns": [
        "(dye|colo[u]r|paint) %itemtypes% %color%",
        "(dye|colo[u]r|paint) %itemtypes% (%number%, %number%, %number%)"
      ]
    },
    {
      "id": "EffCommand",
      "name": "Command",
      "description": [
        "Executes a command. This can be useful to use other plugins in triggers."
      ],
      "examples": [
        "make player execute command \"/suicide\"",
        "execute console command \"/say Hello everyone!\""
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[execute] [the] command %strings% [by %commandsenders%]",
        "[execute] [the] %commandsenders% command %strings%",
        "(let|make) %commandsenders% execute [[the] command] %strings%"
      ]
    },
    {
      "id": "EffConnect",
      "name": "Connect",
      "description": [
        "Connects a player to another bungeecord server"
      ],
      "examples": [
        "connect all players to \"hub\""
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "connect %players% to [server] %string%",
        "send %players% to server %string%"
      ]
    },
    {
      "id": "EffContinue",
      "name": "Continue",
      "description": [
        "Skips the value currently being looped, moving on to the next value if it exists."
      ],
      "examples": [
        "loop all players:",
        "\tif loop-value does not have permission \"moderator\":",
        "\t\tcontinue # filter out non moderators",
        "\tbroadcast \"%loop-player% is a moderator!\" # Only moderators get broadcast"
      ],
      "since": [
        "2.2-dev37"
      ],
      "patterns": [
        "continue [loop]"
      ]
    },
    {
      "id": "EffHealth",
      "name": "Damage/Heal/Repair",
      "description": [
        "Damage/Heal/Repair an entity, or item."
      ],
      "examples": [
        "damage player by 5 hearts",
        "heal the player",
        "repair tool of player"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "damage %livingentities/itemtypes% by %number% [heart[s]] [with fake cause %damagecause%]",
        "heal %livingentities% [by %number% [heart[s]]]",
        "repair %itemtypes% [by %number%]"
      ]
    },
    {
      "id": "Delay",
      "name": "Delay",
      "description": [
        "Delays the script's execution by a given timespan. Please note that delays are not persistent, e.g. trying to create a tempban script with ban player → wait 7 days → unban player will not work if you restart your server anytime within these 7 days. You also have to be careful even when using small delays!"
      ],
      "examples": [
        "wait 2 minutes",
        "halt for 5 minecraft hours",
        "wait a tick"
      ],
      "since": [
        "1.4"
      ],
      "patterns": [
        "(wait|halt) [for] %timespan%"
      ]
    },
    {
      "id": "EffDoIf",
      "name": "Do If",
      "description": [
        "Execute an effect if a condition is true."
      ],
      "examples": [
        "on join:",
        "\tgive a diamond to the player if the player has permission \"rank.vip\""
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "<.+> if <.+>"
      ]
    },
    {
      "id": "EffDrop",
      "name": "Drop",
      "description": [
        "Drops one or more items."
      ],
      "examples": [
        "on death of creeper:",
        "\tdrop 1 TNT"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "drop %itemtypes/experiences% [%directions% %locations%] [(without velocity)]"
      ]
    },
    {
      "id": "EffScriptFile",
      "name": "Enable/Disable/Reload Script File",
      "description": [
        "Enables, disables, or reloads a script file."
      ],
      "examples": [
        "reload script \"test\"",
        "enable script file \"testing\"",
        "unload script file \"script.sk\""
      ],
      "since": [
        "2.4"
      ],
      "patterns": [
        "(enable|load|reload|disable|unload) s(c|k)ript [file] %string%"
      ]
    },
    {
      "id": "EffEnchant",
      "name": "Enchant/Disenchant",
      "description": [
        "Enchant or disenchant an existing item."
      ],
      "examples": [
        "enchant the player's tool with sharpness 5",
        "disenchant the player's tool"
      ],
      "since": [
        "2.0"
      ],
      "patterns": [
        "enchant %itemtypes% with %enchantmenttypes%",
        "disenchant %itemtypes%"
      ]
    },
    {
      "id": "EffEquip",
      "name": "Equip",
      "description": [
        "Equips an entity with some given armor. This will replace any armor that the entity is wearing."
      ],
      "examples": [
        "equip player with diamond helmet",
        "equip player with all diamond armor"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "equip [%livingentity%] with %itemtypes%",
        "make %livingentity% wear %itemtypes%"
      ]
    },
    {
      "id": "EffExit",
      "name": "Exit",
      "description": [
        "Exits a given amount of loops and conditionals, or the entire trigger."
      ],
      "examples": [
        "if player has any ore:",
        "\tstop",
        "message \"%player% has no ores!\"",
        "loop blocks above the player:",
        "\tloop-block is not air:",
        "\t\texit 2 sections",
        "\tset loop-block to water"
      ],
      "since": [
        "unknown (before 2.1)"
      ],
      "patterns": [
        "(exit|stop) [trigger]",
        "(exit|stop) [(1|a|the|this)] (section|loop|conditional)",
        "(exit|stop) <\\d+> (section|loop|conditional)s",
        "(exit|stop) all (section|loop|conditional)s"
      ]
    },
    {
      "id": "EffExplodeCreeper",
      "name": "Explode Creeper",
      "description": [
        "Starts the explosion process of a creeper or instantly explodes it."
      ],
      "examples": [
        "start explosion of the last spawned creeper",
        "stop ignition of the last spawned creeper"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "instantly explode [creeper[s]] %livingentities%",
        "explode [creeper[s]] %livingentities% instantly",
        "ignite creeper[s] %livingentities%",
        "start (ignition|explosion) [process] of [creeper[s]] %livingentities%",
        "stop (ignition|explosion) [process] of [creeper[s]] %livingentities%"
      ],
      "required plugins": [
        "Paper 1.13 or newer/Spigot 1.14 or newer. Ignition can be stopped on Paper 1.13 or newer."
      ]
    },
    {
      "id": "EffExplosion",
      "name": "Explosion",
      "description": [
        "Creates an explosion of a given force. The Minecraft Wiki has an article on explosions which lists the explosion forces of TNT, creepers, etc.",
        "Hint: use a force of 0 to create a fake explosion that does no damage whatsoever, or use the explosion effect introduced in Skript 2.0.",
        "Starting with Bukkit 1.4.5 and Skript 2.0 you can use safe explosions which will damage entities but won't destroy any blocks."
      ],
      "examples": [
        "create an explosion of force 10 at the player",
        "create an explosion of force 0 at the victim"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[(create|make)] [an] explosion (of|with) (force|strength|power) %number% [%directions% %locations%] [(with fire)]",
        "[(create|make)] [a] safe explosion (of|with) (force|strength|power) %number% [%directions% %locations%]",
        "[(create|make)] [a] fake explosion [%directions% %locations%]",
        "[(create|make)] [an] explosion[ ]effect [%directions% %locations%]"
      ]
    },
    {
      "id": "EffFeed",
      "name": "Feed",
      "description": [
        "Feeds the specified players."
      ],
      "examples": [
        "feed all players",
        "feed the player by 5 beefs"
      ],
      "since": [
        "2.2-dev34"
      ],
      "patterns": [
        "feed [the] %players% [by %number% [beef[s]]]"
      ]
    },
    {
      "id": "EffForceAttack",
      "name": "Force Attack",
      "description": [
        "Makes a living entity attack an entity with a melee attack."
      ],
      "examples": [
        "spawn a wolf at player's location",
        "make last spawned wolf attack player"
      ],
      "since": [
        "2.5.1"
      ],
      "patterns": [
        "make %livingentities% attack %entity%",
        "force %livingentities% to attack %entity%"
      ],
      "required plugins": [
        "Minecraft 1.15.2+"
      ]
    },
    {
      "id": "EffRespawn",
      "name": "Force Respawn",
      "description": [
        "Forces player(s) to respawn if they are dead. If this is called without delay from death event, one tick is waited before respawn attempt."
      ],
      "examples": [
        "on death of player:",
        "\tforce event-player to respawn"
      ],
      "since": [
        "2.2-dev21"
      ],
      "patterns": [
        "force %players% to respawn"
      ]
    },
    {
      "id": "EffHidePlayerFromServerList",
      "name": "Hide Player from Server List",
      "description": [
        "Hides a player from the hover list and decreases the online players count (only if the player count wasn't changed before)."
      ],
      "examples": [
        "on server list ping:",
        "\thide {vanished::*} from the server list"
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "hide %players% (in|on|from) [the] server list",
        "hide %players%'[s] info[rmation] (in|on|from) [the] server list"
      ]
    },
    {
      "id": "EffIgnite",
      "name": "Ignite/Extinguish",
      "description": [
        "Lights entities on fire or extinguishes them."
      ],
      "examples": [
        "ignite the player",
        "extinguish the player"
      ],
      "since": [
        "1.4"
      ],
      "patterns": [
        "(ignite|set fire to) %entities% [for %timespan%]",
        "(set|light) %entities% on fire [for %timespan%]",
        "extinguish %entities%"
      ]
    },
    {
      "id": "EffKeepInventory",
      "name": "Keep Inventory / Experience",
      "description": [
        "Keeps the inventory or/and experiences of the dead player in a death event."
      ],
      "examples": [
        "on death of a player:",
        "\tif the victim is an op:",
        "\t\tkeep the inventory and experiences"
      ],
      "since": [
        "2.4"
      ],
      "patterns": [
        "keep [the] (inventory|items) [(and [e]xp[erience][s] [point[s]])]",
        "keep [the] [e]xp[erience][s] [point[s]] [(and (inventory|items))]"
      ]
    },
    {
      "id": "EffKick",
      "name": "Kick",
      "description": [
        "Kicks a player from the server."
      ],
      "examples": [
        "on place of TNT, lava, or obsidian:",
        "\tkick the player due to \"You may not place %block%!\"",
        "\tcancel the event"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "kick %players% [(by reason of|because [of]|on account of|due to) %string%]"
      ]
    },
    {
      "id": "EffKill",
      "name": "Kill",
      "description": [
        "Kills an entity.",
        "Note: This effect does not set the entity's health to 0 (which causes issues), but damages the entity by 100 times its maximum health."
      ],
      "examples": [
        "kill the player",
        "kill all creepers in the player's world",
        "kill all endermen, witches and bats"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "kill %entities%"
      ]
    },
    {
      "id": "EffFireworkLaunch",
      "name": "Launch firework",
      "description": [
        "Launch firework effects at the given location(s)."
      ],
      "examples": [
        "launch ball large coloured red, purple and white fading to light green and black at player's location with duration 1"
      ],
      "since": [
        "2.4"
      ],
      "patterns": [
        "(launch|deploy) [[a] firework [with effect[s]]] %fireworkeffects% at %locations% [([with] (duration|power)|timed) %number%]"
      ]
    },
    {
      "id": "EffLeash",
      "name": "Leash entities",
      "description": [
        "Leash living entities to other entities."
      ],
      "examples": [
        "leash the player to the target entity"
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "(leash|lead) %livingentities% to %entity%",
        "make %entity% (leash|lead) %livingentities%",
        "un(leash|lead) [holder of] %livingentities%"
      ]
    },
    {
      "id": "EffLightning",
      "name": "Lightning",
      "description": [
        "Strike lightning at a given location. Can use 'lightning effect' to create a lightning that does not harm entities or start fires."
      ],
      "examples": [
        "strike lightning at the player",
        "strike lightning effect at the victim"
      ],
      "since": [
        "1.4"
      ],
      "patterns": [
        "(create|strike) lightning([ ]effect|) %directions% %locations%"
      ]
    },
    {
      "id": "EffLoadServerIcon",
      "name": "Load Server Icon",
      "description": [
        "Loads server icons from the given files. You can get the loaded icon using the",
        "last loaded server icon expression.",
        "Please note that the image must be 64x64 and the file path starts from the server folder."
      ],
      "examples": [
        "on load:",
        "\tclear {server-icons::*}",
        "\tloop 5 times:",
        "\t\tload server icon from file \"icons/%loop-number%.png\"",
        "\t\tadd the last loaded server icon to {server-icons::*}",
        "",
        "on server list ping:",
        "\tset the icon to a random server icon out of {server-icons::*}"
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "load [the] server icon (from|of) [the] [image] [file] %string%"
      ],
      "required plugins": [
        "Paper 1.12.2 or newer"
      ]
    },
    {
      "id": "EffSuppressWarnings",
      "name": "Locally Suppress Warning",
      "description": [
        "Suppresses target warnings from the current script."
      ],
      "examples": [
        "locally suppress conflict warnings",
        "suppress the variable save warnings"
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "[local[ly]] suppress [the] (conflict|variable save|[missing] conjunction[s]|starting [with] expression[s]) warning[s]"
      ]
    },
    {
      "id": "EffLog",
      "name": "Log",
      "description": [
        "Writes text into a .log file. Skript will write these files to /plugins/Skript/logs.",
        "NB: Using 'server.log' as the log file will write to the default server log. Omitting the log file altogether will log the message as '[Skript] [&lt;script&gt;.sk] &lt;message&gt;' in the server log."
      ],
      "examples": [
        "on place of TNT:",
        "\tlog \"%player% placed TNT in %world% at %location of block%\" to \"tnt/placement.log\""
      ],
      "since": [
        "2.0"
      ],
      "patterns": [
        "log %strings% [(to|in) [file[s]] %strings%]"
      ]
    },
    {
      "id": "EffMakeFly",
      "name": "Make Fly",
      "description": [
        "Forces a player to start/stop flying."
      ],
      "examples": [
        "make player fly",
        "force all players to stop flying"
      ],
      "since": [
        "2.2-dev34"
      ],
      "patterns": [
        "force %players% to [(start|stop)] fly[ing]",
        "make %players% (start|stop) flying",
        "make %players% fly"
      ]
    },
    {
      "id": "EffIncendiary",
      "name": "Make Incendiary",
      "description": [
        "Sets if an entity's explosion will leave behind fire. This effect is also usable in an explosion prime event."
      ],
      "examples": [
        "on explosion prime:",
        "\tmake the explosion fiery"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "make %entities% [(not)] incendiary",
        "make %entities%'[s] explosion [(not)] (incendiary|fiery)",
        "make [the] [event(-| )]explosion [(not)] (incendiary|fiery)"
      ]
    },
    {
      "id": "EffInvulnerability",
      "name": "Make Invulnerable",
      "description": [
        "Makes an entity invulnerable/not invulnerable."
      ],
      "examples": [
        "make target entity invulnerable"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "make %entities% invulnerable",
        "make %entities% (not invulnerable|vulnerable)"
      ]
    },
    {
      "id": "EffMakeSay",
      "name": "Make Say",
      "description": [
        "Forces a player to send a message to the chat. If the message starts with a slash it will force the player to use command."
      ],
      "examples": [
        "make the player say \"Hello.\"",
        "force all players to send the message \"I love this server\""
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "make %players% (say|send [the] message[s]) %strings%",
        "force %players% to (say|send [the] message[s]) %strings%"
      ]
    },
    {
      "id": "EffMessage",
      "name": "Message",
      "description": [
        "Sends a message to the given player. Only styles written",
        "in given string or in formatted expressions will be parsed.",
        "Adding an optional sender allows the messages to be sent as if a specific player sent them.",
        "This is useful with Minecraft 1.16.4's new chat ignore system, in which players can choose to ignore other players,",
        "but for this to work, the message needs to be sent from a player."
      ],
      "examples": [
        "message \"A wild %player% appeared!\"",
        "message \"This message is a distraction. Mwahaha!\"",
        "send \"Your kill streak is %{kill streak::%uuid of player%}%.\" to player",
        "if the targeted entity exists:",
        "\tmessage \"You're currently looking at a %type of the targeted entity%!\"",
        "on chat:",
        "\tcancel event",
        "\tsend \"[%player%] >> %message%\" to all players from player"
      ],
      "since": [
        "1.0, 2.2-dev26 (advanced features), 2.5.2 (optional sender), 2.6 (sending objects)"
      ],
      "patterns": [
        "(message|send [message[s]]) %objects% [to %commandsenders%] [from %player%]"
      ],
      "required plugins": [
        "Minecraft 1.16.4+ for optional sender"
      ]
    },
    {
      "id": "EffOpenBook",
      "name": "Open Book",
      "description": [
        "Opens a written book to a player."
      ],
      "examples": [
        "open book player's tool to player"
      ],
      "since": [
        "2.5.1"
      ],
      "patterns": [
        "(open|show) book %itemtype% (to|for) %players%"
      ],
      "required plugins": [
        "Minecraft 1.14.2+"
      ]
    },
    {
      "id": "EffOpenInventory",
      "name": "Open/Close Inventory",
      "description": [
        "Opens an inventory to a player. The player can then access and modify the inventory as if it was a chest that he just opened.",
        "Please note that currently 'show' and 'open' have the same effect, but 'show' will eventually show an unmodifiable view of the inventory in the future."
      ],
      "examples": [
        "show the victim's inventory to the player",
        "open the player's inventory for the player"
      ],
      "since": [
        "2.0, 2.1.1 (closing), 2.2-Fixes-V10 (anvil), 2.4 (hopper, dropper, dispenser"
      ],
      "patterns": [
        "(open|show) (((crafting [table]|workbench)|chest|anvil|hopper|dropper|dispenser) (view|window|inventory|)|%inventory/inventorytype%) (to|for) %players%",
        "close [the] inventory [view] (to|of|for) %players%",
        "close %players%'[s] inventory [view]"
      ]
    },
    {
      "id": "EffVisualEffect",
      "name": "Play Effect",
      "description": [
        "Plays a visual effect at a given location or on a given entity.",
        "Please note that some effects can only be played on entities, e.g. wolf hearts or the hurt effect, and that these are always visible to all players."
      ],
      "examples": [
        "play wolf hearts on the clicked wolf",
        "show mob spawner flames at the targeted block to the player"
      ],
      "since": [
        "2.1"
      ],
      "patterns": [
        "(play|show) %visualeffects% (on|%directions%) %entities/locations% [(to %players%|in (radius|range) of %number%)]",
        "(play|show) %number% %visualeffects% (on|%directions%) %locations% [(to %players%|in (radius|range) of %number%)]"
      ]
    },
    {
      "id": "EffPlaySound",
      "name": "Play Sound",
      "description": [
        "Plays a sound at given location for everyone or just for given players, or plays a sound to specified players. Both Minecraft sound names and Spigot sound names are supported. Playing resource pack sounds are supported too. The sound category is 'master' by default. ",
        "",
        "Please note that sound names can get changed in any Minecraft or Spigot version, or even removed from Minecraft itself."
      ],
      "examples": [
        "play sound \"block.note_block.pling\" # It is block.note.pling in 1.12.2",
        "play sound \"entity.experience_orb.pickup\" with volume 0.5 to the player",
        "play sound \"custom.music.1\" in jukebox category at {speakerBlock}"
      ],
      "since": [
        "2.2-dev28, 2.4 (sound categories)"
      ],
      "patterns": [
        "play sound[s] %strings% [(in|from) %soundcategory%] [(at|with) volume %number%] [(and|at|with) pitch %number%] at %locations% [(to|for) %players%]",
        "play sound[s] %strings% [(in|from) %soundcategory%] [(at|with) volume %number%] [(and|at|with) pitch %number%] [(to|for) %players%] [(at|from) %locations%]"
      ],
      "required plugins": [
        "Minecraft 1.11+ (sound categories)"
      ]
    },
    {
      "id": "EffPlayerInfoVisibility",
      "name": "Player Info Visibility",
      "description": [
        "Sets whether all player related information is hidden in the server list.",
        "The Vanilla Minecraft client will display ??? (dark gray) instead of player counts and will not show the",
        "hover hist when hiding player info.",
        "The version string can override the ???.",
        "Also the Online Players Count and",
        "Max Players expressions will return -1 when hiding player info."
      ],
      "examples": [
        "hide player info",
        "hide player related information in the server list",
        "reveal all player related info"
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "hide [all] player [related] info[rmation] [(in|on|from) [the] server list]",
        "(show|reveal) [all] player [related] info[rmation] [(in|to|on|from) [the] server list]"
      ],
      "required plugins": [
        "Paper 1.12.2 or newer"
      ]
    },
    {
      "id": "EffPlayerVisibility",
      "name": "Player Visibility",
      "description": [
        "Change visibility of a player for the given players.",
        "When reveal is used in combination of the hidden players expression and the viewers are not specified, this will default it to the given player in the hidden players expression.",
        "",
        "Note: if a player was hidden and relogs, this player will be visible again."
      ],
      "examples": [
        "on join:",
        "\tif {vanished::%player's uuid%} is true:",
        "\t\thide the player from all players",
        "",
        "reveal hidden players of {_player}"
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "hide %players% [(from|for) %players%]",
        "reveal %players% [(to|for|from) %players%]"
      ]
    },
    {
      "id": "EffPoison",
      "name": "Poison/Cure",
      "description": [
        "Poison or cure a creature."
      ],
      "examples": [
        "poison the player",
        "poison the victim for 20 seconds",
        "cure the player from poison"
      ],
      "since": [
        "1.3.2"
      ],
      "patterns": [
        "poison %livingentities% [for %timespan%]",
        "(cure|unpoison) %livingentities% [(from|of) poison]"
      ]
    },
    {
      "id": "EffPotion",
      "name": "Potion Effects",
      "description": [
        "Apply or remove potion effects to/from entities."
      ],
      "examples": [
        "apply swiftness 2 to the player",
        "remove haste from the victim",
        "on join:",
        "\tapply potion of strength of tier {strength.%player%} to the player for 999 days",
        "apply potion effects of player's tool to player"
      ],
      "since": [
        "2.0, 2.2-dev27 (ambient and particle-less potion effects), 2.5 (replacing existing effect), 2.5.2 (potion effects)"
      ],
      "patterns": [
        "apply [potion of] %potioneffecttypes% [potion] [[[of] tier] %number%] to %livingentities% [for %timespan%] [(replacing [the] existing effect)]",
        "apply ambient [potion of] %potioneffecttypes% [potion] [[[of] tier] %number%] to %livingentities% [for %timespan%] [(replacing [the] existing effect)]",
        "apply [potion of] %potioneffecttypes% [potion] [[[of] tier] %number%] without [any] particles to %livingentities% [for %timespan%] [(replacing [the] existing effect)]",
        "apply %potioneffects% to %livingentities%"
      ]
    },
    {
      "id": "EffPush",
      "name": "Push",
      "description": [
        "Push entities around."
      ],
      "examples": [
        "push the player upwards",
        "push the victim downwards at speed 0.5"
      ],
      "since": [
        "1.4.6"
      ],
      "patterns": [
        "(push|thrust) %entities% %direction% [(at|with) (speed|velocity|force) %number%]"
      ]
    },
    {
      "id": "EffPvP",
      "name": "PvP",
      "description": [
        "Set the PvP state for a given world."
      ],
      "examples": [
        "enable PvP #(current world only)",
        "disable PvP in all worlds"
      ],
      "since": [
        "1.3.4"
      ],
      "patterns": [
        "enable PvP [in %worlds%]",
        "disable PVP [in %worlds%]"
      ]
    },
    {
      "id": "EffReplace",
      "name": "Replace",
      "description": [
        "Replaces all occurrences of a given text with another text. Please note that you can only change variables and a few expressions, e.g. a message or a line of a sign."
      ],
      "examples": [
        "replace \"<item>\" in {textvar} with \"%item%\"",
        "replace every \"&\" with \"§\" in line 1",
        "# The following acts as a simple chat censor, but it will e.g. censor mass, hassle, assassin, etc. as well:",
        "on chat:",
        "\treplace all \"kys\", \"idiot\" and \"noob\" with \"****\" in the message",
        " ",
        "replace all stone and dirt in player's inventory and player's top inventory with diamond"
      ],
      "since": [
        "2.0, 2.2-dev24 (replace in multiple strings and replace items in inventory), 2.5 (replace first, case sensitivity)"
      ],
      "patterns": [
        "replace (all|every|) %strings% in %strings% with %string% [(with case sensitivity)]",
        "replace (all|every|) %strings% with %string% in %strings% [(with case sensitivity)]",
        "replace first %strings% in %strings% with %string% [(with case sensitivity)]",
        "replace first %strings% with %string% in %string% [(with case sensitivity)]",
        "replace (all|every|) %itemtypes% in %inventories% with %itemtype%",
        "replace (all|every|) %itemtypes% with %itemtype% in %inventories%"
      ]
    },
    {
      "id": "EffReturn",
      "name": "Return",
      "description": [
        "Makes a function return a value"
      ],
      "examples": [
        "function double(i: number) :: number:",
        "\treturn 2 * {_i}"
      ],
      "since": [
        "2.2"
      ],
      "patterns": [
        "return %objects%"
      ]
    },
    {
      "id": "EffSendBlockChange",
      "name": "Send Block Change",
      "description": [
        "Makes a player see a block as something it really isn't. BlockData support is only for MC 1.13+"
      ],
      "examples": [
        "make player see block at player as dirt",
        "make player see target block as campfire[facing=south]"
      ],
      "since": [
        "2.2-dev37c, 2.5.1 (block data support)"
      ],
      "patterns": [
        "make %players% see %blocks% as %itemtype/blockdata%"
      ]
    },
    {
      "id": "EffSendResourcePack",
      "name": "Send Resource Pack",
      "description": [
        "Request that the player's client download and switch resource packs. The client will download ",
        "the resource pack in the background, and will automatically switch to it once the download is complete. ",
        "The URL must be a direct download link.",
        "",
        "The hash is used for caching, the player won't have to re-download the resource pack that way. ",
        "The hash must be SHA-1, you can get SHA-1 hash of your resource pack using ",
        "this online tool.",
        "",
        "The resource pack request action can be used to check ",
        "status of the sent resource pack request."
      ],
      "examples": [
        "on join:",
        "\tsend the resource pack from \"URL\" with hash \"hash\" to the player"
      ],
      "since": [
        "2.4"
      ],
      "patterns": [
        "send [the] resource pack [from [[the] URL]] %string% to %players%",
        "send [the] resource pack [from [[the] URL]] %string% with hash %string% to %players%"
      ]
    },
    {
      "id": "EffShear",
      "name": "Shear",
      "description": [
        "Shears or 'un-shears' a sheep. Please note that no wool is dropped, this only sets the 'sheared' state of the sheep."
      ],
      "examples": [
        "on rightclick on a sheep holding a sword:",
        "\tshear the clicked sheep"
      ],
      "since": [
        "2.0"
      ],
      "patterns": [
        "shear %livingentities%",
        "un[-]shear %livingentities%"
      ]
    },
    {
      "id": "EffShoot",
      "name": "Shoot",
      "description": [
        "Shoots a projectile (or any other entity) from a given entity."
      ],
      "examples": [
        "shoot an arrow",
        "make the player shoot a creeper at speed 10",
        "shoot a pig from the creeper"
      ],
      "since": [
        "1.4"
      ],
      "patterns": [
        "shoot %entitydatas% [from %livingentities/locations%] [(at|with) (speed|velocity) %number%] [%direction%]",
        "(make|let) %livingentities/locations% shoot %entitydatas% [(at|with) (speed|velocity) %number%] [%direction%]"
      ]
    },
    {
      "id": "EffSilence",
      "name": "Silence Entity",
      "description": [
        "Controls whether or not an entity is silent."
      ],
      "examples": [
        "make target entity silent"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "silence %entities%",
        "unsilence %entities%",
        "make %entities% silent",
        "make %entities% not silent"
      ]
    },
    {
      "id": "EffStopServer",
      "name": "Stop Server",
      "description": [
        "Stops or restarts the server. If restart is used when the restart-script spigot.yml option isn't defined, the server will stop instead."
      ],
      "examples": [
        "stop the server",
        "restart server"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "(stop|shut[ ]down) [the] server",
        "restart [the] server"
      ]
    },
    {
      "id": "EffStopSound",
      "name": "Stop Sound",
      "description": [
        "Stops a sound from playing to the specified players. Both Minecraft sound names and Spigot sound names are supported. Resource pack sounds are supported too. The sound category is 'master' by default. A sound can't be stopped from a different category. ",
        "",
        "Please note that sound names can get changed in any Minecraft or Spigot version, or even removed from Minecraft itself."
      ],
      "examples": [
        "stop sound \"block.chest.open\" for the player",
        "stop playing sounds \"ambient.underwater.loop\" and \"ambient.underwater.loop.additions\" to the player"
      ],
      "since": [
        "2.4"
      ],
      "patterns": [
        "stop sound[s] %strings% [(in|from) %soundcategory%] [(from playing to|for) %players%]",
        "stop playing sound[s] %strings% [(in|from) %soundcategory%] [(to|for) %players%]"
      ],
      "required plugins": [
        "Minecraft 1.10.2+, Minecraft 1.11+ (sound categories)"
      ]
    },
    {
      "id": "EffSwingHand",
      "name": "Swing Hand",
      "description": [
        "Makes an entity swing their hand. This does nothing if the entity does not have an animation for swinging their hand."
      ],
      "examples": [
        "make player swing their main hand"
      ],
      "since": [
        "2.5.1"
      ],
      "patterns": [
        "make %livingentities% swing [their] [main] hand",
        "make %livingentities% swing [their] off[ ]hand"
      ],
      "required plugins": [
        "Minecraft 1.15.2+"
      ]
    },
    {
      "id": "EffTeleport",
      "name": "Teleport",
      "description": [
        "Teleport an entity to a specific location. ",
        "This effect is delayed by default on Paper, meaning certain syntax such as the return effect for functions cannot be used after this effect.",
        "The keyword 'force' indicates this effect will not be delayed, ",
        "which may cause lag spikes or server crashes when using this effect to teleport entities to unloaded chunks."
      ],
      "examples": [
        "teleport the player to {homes.%player%}",
        "teleport the attacker to the victim"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[(force)] teleport %entities% (to|%direction%) %location%"
      ]
    },
    {
      "id": "EffResetTitle",
      "name": "Title - Reset",
      "description": [
        "Resets the title of the player to the default values."
      ],
      "examples": [
        "reset the titles of all players",
        "reset the title"
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "reset [the] title[s] [of %players%]",
        "reset [the] %players%'[s] title[s]"
      ]
    },
    {
      "id": "EffSendTitle",
      "name": "Title - Send",
      "description": [
        "Sends a title/subtitle to the given player(s) with optional fadein/stay/fadeout times for Minecraft versions 1.11 and above. ",
        "",
        "If you're sending only the subtitle, it will be shown only if there's a title displayed at the moment, otherwise it will be sent with the next title. To show only the subtitle, use: send title \" \" with subtitle \"yourtexthere\" to player.",
        "",
        "Note: if no input is given for the times, it will keep the ones from the last title sent, use the reset title effect to restore the default values."
      ],
      "examples": [
        "send title \"Competition Started\" with subtitle \"Have fun, Stay safe!\" to player for 5 seconds",
        "send title \"Hi %player%\" to player",
        "send title \"Loot Drop\" with subtitle \"starts in 3 minutes\" to all players",
        "send title \"Hello %player%!\" with subtitle \"Welcome to our server\" to player for 5 seconds with fadein 1 second and fade out 1 second",
        "send subtitle \"Party!\" to all players"
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "send title %string% [with subtitle %string%] [to %players%] [for %timespan%] [with fade[(-| )]in %timespan%] [(and|with) fade[(-| )]out %timespan%]",
        "send subtitle %string% [to %players%] [for %timespan%] [with fade[(-| )]in %timespan%] [(and|with) fade[(-| )]out %timespan%]"
      ]
    },
    {
      "id": "EffToggle",
      "name": "Toggle",
      "description": [
        "Toggle the state of a block."
      ],
      "examples": [
        "# use arrows to toggle switches, doors, etc.",
        "on projectile hit:",
        "\tprojectile is arrow",
        "\ttoggle the block at the arrow"
      ],
      "since": [
        "1.4"
      ],
      "patterns": [
        "(close|turn off|de[-]activate) %blocks%",
        "(toggle|switch) [[the] state of] %blocks%",
        "(open|turn on|activate) %blocks%"
      ]
    },
    {
      "id": "EffToggleFlight",
      "name": "Toggle Flight",
      "description": [
        "Toggle the flight mode of a player."
      ],
      "examples": [
        "allow flight to event-player"
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "(allow|enable) (fly|flight) (for|to) %players%",
        "(disallow|disable) (fly|flight) (for|to) %players%"
      ]
    },
    {
      "id": "EffTree",
      "name": "Tree",
      "description": [
        "Creates a tree.",
        "This may require that there is enough space above the given location and that the block below is dirt/grass, but it is possible that the tree will just grow anyways, possibly replacing every block in its path."
      ],
      "examples": [
        "grow a tall redwood tree above the clicked block"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "(grow|create|generate) tree [of type %structuretype%] %directions% %locations%",
        "(grow|create|generate) %structuretype% %directions% %locations%"
      ]
    },
    {
      "id": "EffVectorRotateAroundAnother",
      "name": "Vectors - Rotate Around Vector",
      "description": [
        "Rotates a vector around another vector"
      ],
      "examples": [
        "rotate {_v} around vector 1, 0, 0 by 90"
      ],
      "since": [
        "2.2-dev28"
      ],
      "patterns": [
        "rotate %vectors% around %vector% by %number% [degrees]"
      ]
    },
    {
      "id": "EffVectorRotateXYZ",
      "name": "Vectors - Rotate around XYZ",
      "description": [
        "Rotates a vector around x, y, or z axis by some degrees"
      ],
      "examples": [
        "rotate {_v} around x-axis by 90",
        "rotate {_v} around y-axis by 90",
        "rotate {_v} around z-axis by 90 degrees"
      ],
      "since": [
        "2.2-dev28"
      ],
      "patterns": [
        "rotate %vectors% around (x|y|z)(-| )axis by %number% [degrees]"
      ]
    },
    {
      "id": "EffVehicle",
      "name": "Vehicle",
      "description": [
        "Makes an entity ride another entity, e.g. a minecart, a saddled pig, an arrow, etc."
      ],
      "examples": [
        "make the player ride a saddled pig",
        "make the attacker ride the victim"
      ],
      "since": [
        "2.0"
      ],
      "patterns": [
        "(make|let|force) %entities% [to] (ride|mount) [(in|on)] %entities/entitydatas%",
        "(make|let|force) %entities% [to] (dismount|(dismount|leave) (from|of|) (any|the[ir]|his|her|) vehicle[s])",
        "(eject|dismount) (any|the|) passenger[s] (of|from) %entities%"
      ]
    },
    {
      "id": "EffOp",
      "name": "op/deop",
      "description": [
        "Grant/revoke a user operator state."
      ],
      "examples": [
        "op the player",
        "deop all players"
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "[de[-]]op %offlineplayers%"
      ]
    }
  ],
  "expressions": [
    {
      "id": "ExprAbsorbedBlocks",
      "name": "Absorbed blocks",
      "description": [
        "The blocks absorbed by a sponge block."
      ],
      "examples": [
        "the absorbed blocks"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Block",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[the] absorbed blocks"
      ]
    },
    {
      "id": "ExprAffectedEntities",
      "name": "Affected Entities",
      "description": [
        "The affected entities in the area cloud effect event."
      ],
      "examples": [
        "on area cloud effect:",
        "\tloop affected entities:",
        "\t\tif loop-value is a player:",
        "\t\t\tsend \"WARNING: you've step on an area effect cloud!\" to loop-value"
      ],
      "since": [
        "2.4"
      ],
      "return type": "Living Entity",
      "changers": [
        "add",
        "remove",
        "remove all"
      ],
      "patterns": [
        "[the] affected entities"
      ]
    },
    {
      "id": "ExprAllGroups",
      "name": "All Groups",
      "description": [
        "All the groups a player can have. This expression requires Vault and a compatible permissions plugin to be installed."
      ],
      "examples": [
        "command /group &lt;text&gt;:",
        "\ttrigger:",
        "\t\tif argument is \"list\":",
        "\t\t\tsend \"%all groups%\""
      ],
      "since": [
        "2.2-dev35"
      ],
      "return type": "Text",
      "patterns": [
        "all groups"
      ],
      "required plugins": [
        "Vault",
        "a permission plugin that supports Vault"
      ]
    },
    {
      "id": "ExprPermissions",
      "name": "All Permissions",
      "description": [
        "Returns all permissions of the defined player(s). Note that the modifications to resulting list do not actually change permissions."
      ],
      "examples": [
        "set {_permissions::*} to all permissions of the player"
      ],
      "since": [
        "2.2-dev33"
      ],
      "return type": "Text",
      "patterns": [
        "[(all [[of] the]|the)] permissions (from|of) %players%",
        "[(all [[of] the]|the)] %players%'[s] permissions"
      ]
    },
    {
      "id": "ExprScripts",
      "name": "All Scripts",
      "description": [
        "Returns all of the scripts, or just the enabled or disabled ones."
      ],
      "examples": [
        "command /scripts:",
        "\ttrigger:",
        "\t\tsend \"All Scripts: %scripts%\" to player",
        "\t\tsend \"Loaded Scripts: %enabled scripts%\" to player",
        "\t\tsend \"Unloaded Scripts: %disabled scripts%\" to player"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Text",
      "patterns": [
        "[all [of the]] scripts [(without ([subdirectory] paths|parents))]",
        "[all [of the]] (enabled|loaded) scripts [(without ([subdirectory] paths|parents))]",
        "[all [of the]] (disabled|unloaded) scripts [(without ([subdirectory] paths|parents))]"
      ]
    },
    {
      "id": "ExprAllCommands",
      "name": "All commands",
      "description": [
        "Returns all registered commands or all script commands."
      ],
      "examples": [
        "send \"Number of all commands: %size of all commands%\"",
        "send \"Number of all script commands: %size of all script commands%\""
      ],
      "since": [
        "2.6"
      ],
      "return type": "Text",
      "patterns": [
        "[(all|the|all [of] the)] [registered] [(script)] commands"
      ]
    },
    {
      "id": "ExprAlphabetList",
      "name": "Alphabetical Sort",
      "description": [
        "Sorts given strings in alphabetical order."
      ],
      "examples": [
        "set {_list::*} to alphabetically sorted {_strings::*}"
      ],
      "since": [
        "2.2-dev18b"
      ],
      "return type": "Text",
      "patterns": [
        "alphabetically sorted %strings%"
      ]
    },
    {
      "id": "ExprAltitude",
      "name": "Altitude",
      "description": [
        "Effectively an alias of 'y-coordinate of …', it represents the height of some object above bedrock."
      ],
      "examples": [
        "on damage:",
        "\taltitude of the attacker is higher than the altitude of the victim",
        "\tset damage to damage * 1.2"
      ],
      "since": [
        "1.4.3"
      ],
      "return type": "Number",
      "patterns": [
        "[the] altitude[s] of %locations%",
        "%locations%'[s] altitude[s]"
      ]
    },
    {
      "id": "ExprAmount",
      "name": "Amount",
      "description": [
        "The amount of something.",
        "Please note that amount of %items% will not return the number of items, but the number of stacks, e.g. 1 for a stack of 64 torches. To get the amount of items in a stack, see the item amount expression.",
        "",
        "Also, you can get the recursive size of a list, which will return the recursive size of the list with sublists included, e.g.",
        "",
        "<pre>",
        "{list::*} Structure<br>",
        "  ├──── {list::1}: 1<br>",
        "  ├──── {list::2}: 2<br>",
        "  │     ├──── {list::2::1}: 3<br>",
        "  │     │    └──── {list::2::1::1}: 4<br>",
        "  │     └──── {list::2::2}: 5<br>",
        "  └──── {list::3}: 6",
        "</pre>",
        "",
        "Where using %size of {list::*}% will only return 3 (the first layer of indices only), while %recursive size of {list::*}% will return 6 (the entire list)",
        "Please note that getting a list's recursive size can cause lag if the list is large, so only use this expression if you need to!"
      ],
      "examples": [
        "message \"There are %number of all players% players online!\""
      ],
      "since": [
        "1.0"
      ],
      "return type": "long",
      "patterns": [
        "[the] (amount|number|size) of %objects%",
        "[the] recursive (amount|number|size) of %objects%"
      ]
    },
    {
      "id": "ExprAmountOfItems",
      "name": "Amount of Items",
      "description": [
        "Counts how many of a particular item type are in a given inventory."
      ],
      "examples": [
        "message \"You have %number of ores in the player's inventory% ores in your inventory.\""
      ],
      "since": [
        "2.0"
      ],
      "return type": "long",
      "patterns": [
        "[the] (amount|number) of %itemtypes% (in|of) %inventories%"
      ]
    },
    {
      "id": "ExprAppliedEnchantments",
      "name": "Applied Enchantments",
      "description": [
        "The applied enchantments in an enchant event.",
        " Deleting or removing the applied enchantments will prevent the item's enchantment."
      ],
      "examples": [
        "on enchant:",
        "\tset the applied enchantments to sharpness 10 and fire aspect 5"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Enchantment Type",
      "changers": [
        "add",
        "set",
        "remove",
        "delete"
      ],
      "patterns": [
        "[the] applied enchant[ment]s"
      ]
    },
    {
      "id": "ExprArgument",
      "name": "Argument",
      "description": [
        "Only usable in command events. Holds the value of an argument given to the command, e.g. if the command \"/tell &lt;player&gt; &lt;text&gt;\" is used like \"/tell Njol Hello Njol!\" argument 1 is the player named \"Njol\" and argument 2 is \"Hello Njol!\".",
        "One can also use the type of the argument instead of its index to address the argument, e.g. in the above example 'player-argument' is the same as 'argument 1'."
      ],
      "examples": [
        "give the item-argument to the player-argument",
        "damage the player-argument by the number-argument",
        "give a diamond pickaxe to the argument",
        "add argument 1 to argument 2",
        "heal the last argument"
      ],
      "since": [
        "1.0"
      ],
      "return type": "Object",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "[the] last arg[ument][s]",
        "[the] arg[ument][s](-| )<(\\d+)>",
        "[the] <(\\d*1)st|(\\d*2)nd|(\\d*3)rd|(\\d*[4-90])th> arg[ument][s]",
        "[the] arg[ument][s]",
        "[the] %*classinfo%( |-)arg[ument][( |-)<\\d+>]",
        "[the] arg[ument]( |-)%*classinfo%[( |-)<\\d+>]"
      ]
    },
    {
      "id": "ExprArithmetic",
      "name": "Arithmetic",
      "description": [
        "Arithmetic expressions, e.g. 1 + 2, (health of player - 2) / 3, etc."
      ],
      "examples": [
        "set the player's health to 10 - the player's health",
        "loop (argument + 2) / 5 times:",
        "\tmessage \"Two useless numbers: %loop-num * 2 - 5%, %2^loop-num - 1%\"",
        "message \"You have %health of player * 2% half hearts of HP!\""
      ],
      "since": [
        "1.4.2"
      ],
      "return type": "Number",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "(%number%)[ ]+[ ](%number%)",
        "(%number%)[ ]+[ ]%number%",
        "%number%[ ]+[ ](%number%)",
        "%number%[ ]+[ ]%number%",
        "(%number%)[ ]-[ ](%number%)",
        "(%number%)[ ]-[ ]%number%",
        "%number%[ ]-[ ](%number%)",
        "%number%[ ]-[ ]%number%",
        "(%number%)[ ]*[ ](%number%)",
        "(%number%)[ ]*[ ]%number%",
        "%number%[ ]*[ ](%number%)",
        "%number%[ ]*[ ]%number%",
        "(%number%)[ ]/[ ](%number%)",
        "(%number%)[ ]/[ ]%number%",
        "%number%[ ]/[ ](%number%)",
        "%number%[ ]/[ ]%number%",
        "(%number%)[ ]^[ ](%number%)",
        "(%number%)[ ]^[ ]%number%",
        "%number%[ ]^[ ](%number%)",
        "%number%[ ]^[ ]%number%"
      ]
    },
    {
      "id": "ExprArmorSlot",
      "name": "Armour Slot",
      "description": [
        "A part of a player's armour, i.e. the boots, leggings, chestplate or helmet."
      ],
      "examples": [
        "set chestplate of the player to a diamond chestplate",
        "helmet of player is neither a helmet nor air # player is wearing a block, e.g. from another plugin"
      ],
      "since": [
        "1.0"
      ],
      "return type": "Inventory Slot",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[the] (boot[s]|shoe[s]|leg[ging][s]|chestplate[s]|helm[et][s]) [(item|slot)] of %livingentities%",
        "%livingentities%'[s] (boot[s]|shoe[s]|leg[ging][s]|chestplate[s]|helm[et][s]) [(item|slot)]"
      ]
    },
    {
      "id": "ExprArrowKnockbackStrength",
      "name": "Arrow Knockback Strength",
      "description": [
        "An arrow's knockback strength."
      ],
      "examples": [
        "on shoot:",
        "\tevent-projectile is an arrow",
        "\tset arrow knockback strength of event-projectile to 10"
      ],
      "since": [
        "2.5.1"
      ],
      "return type": "long",
      "changers": [
        "add",
        "set",
        "remove",
        "reset"
      ],
      "patterns": [
        "[the] arrow knockback strength of %projectiles%",
        "%projectiles%'[s] arrow knockback strength"
      ]
    },
    {
      "id": "ExprArrowsStuck",
      "name": "Arrows Stuck",
      "description": [
        "The number of arrows stuck in a living entity."
      ],
      "examples": [
        "set arrows stuck in player to 5"
      ],
      "since": [
        "2.5"
      ],
      "return type": "long",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[number of] arrow[s] stuck in %livingentities%"
      ]
    },
    {
      "id": "ExprAttackCooldown",
      "name": "Attack Cooldown",
      "description": [
        "Returns the current cooldown for a player's attack. This is used to calculate damage, with 1.0 representing a fully charged attack and 0.0 representing a non-charged attack.",
        "NOTE: Currently this can not be set to anything."
      ],
      "examples": [
        "on damage:",
        "\tif attack cooldown of attacker < 1:",
        "\t\tset damage to 0",
        "\t\tsend \"Your hit was too weak! wait until your weapon is fully charged next time.\" to attacker"
      ],
      "since": [
        "2.6.1"
      ],
      "return type": "float",
      "patterns": [
        "[the] attack cooldown of %players%",
        "%players%'[s] attack cooldown"
      ],
      "required plugins": [
        "Minecraft 1.15+"
      ]
    },
    {
      "id": "ExprAttacked",
      "name": "Attacked",
      "description": [
        "The victim of a damage event, e.g. when a player attacks a zombie this expression represents the zombie. When using Minecraft 1.11+, this also covers the hit entity in a projectile hit event."
      ],
      "examples": [
        "on damage:",
        "\tvictim is a creeper",
        "\tdamage the attacked by 1 heart"
      ],
      "since": [
        "1.3, 2.6.1 (projectile hit event)"
      ],
      "return type": "Entity",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "[the] (attacked|damaged|victim) [<(.+)>]"
      ]
    },
    {
      "id": "ExprAttacker",
      "name": "Attacker",
      "description": [
        "The attacker of a damage event, e.g. when a player attacks a zombie this expression represents the player.",
        "Please note that the attacker can also be a block, e.g. a cactus or lava, but this expression will not be set in these cases."
      ],
      "examples": [
        "on damage:",
        "\tattacker is a player",
        "\thealth of attacker is less than or equal to 2",
        "\tdamage victim by 1 heart"
      ],
      "since": [
        "1.3"
      ],
      "return type": "Entity",
      "changers": [
        "add",
        "remove",
        "remove all"
      ],
      "patterns": [
        "[the] (attacker|damager)"
      ]
    },
    {
      "id": "ExprBed",
      "name": "Bed",
      "description": [
        "The bed location of a player, i.e. the spawn point of a player if he ever slept in a bed and the bed still exists and is unobstructed."
      ],
      "examples": [
        "bed of player exists:",
        "\tteleport player the the player's bed",
        "else:",
        "\tteleport the player to the world's spawn point"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Location",
      "changers": [
        "set",
        "delete"
      ],
      "patterns": [
        "[the] bed[s] [location[s]] of %players%",
        "%players%'[s] bed[s] [location[s]]"
      ]
    },
    {
      "id": "ExprBiome",
      "name": "Biome",
      "description": [
        "The biome at a certain location. Please note that biomes are only defined for x/z-columns",
        "(i.e. the altitude (y-coordinate) doesn't matter), up until Minecraft 1.15.x.",
        "As of Minecraft 1.16, biomes are now 3D (per block vs column)."
      ],
      "examples": [
        "# damage player in deserts constantly",
        "every real minute:",
        "\tloop all players:",
        "\t\tbiome at loop-player is desert",
        "\t\tdamage the loop-player by 1"
      ],
      "since": [
        "1.4.4, 2.6.1 (3D biomes)"
      ],
      "return type": "Biome",
      "changers": [
        "set"
      ],
      "patterns": [
        "[the] biome [(of|%direction%) %locations%]",
        "%locations%'[s] biome"
      ]
    },
    {
      "id": "ExprBlock",
      "name": "Block",
      "description": [
        "The block involved in the event, e.g. the clicked block or the placed block.",
        "Can optionally include a direction as well, e.g. 'block above' or 'block in front of the player'."
      ],
      "examples": [
        "block is ore",
        "set block below to air",
        "spawn a creeper above the block",
        "loop blocks in radius 4:",
        "\tloop-block is obsidian",
        "\tset loop-block to water",
        "block is a chest:",
        "\tclear the inventory of the block"
      ],
      "since": [
        "1.0"
      ],
      "return type": "Block",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "[the] [event-]block",
        "[the] block %direction% [%location%]"
      ]
    },
    {
      "id": "ExprBlockData",
      "name": "Block Data",
      "description": [
        "Get the block data associated with a block. This data can also be used to set blocks."
      ],
      "examples": [
        "set {data} to block data of target block",
        "set block at player to {data}",
        "set block data of target block to oak_stairs[facing=south;waterlogged=true]"
      ],
      "since": [
        "2.5, 2.5.2 (set)"
      ],
      "return type": "Block Data",
      "changers": [
        "set"
      ],
      "patterns": [
        "[the] block[ ]data of %blocks%",
        "%blocks%'[s] block[ ]data"
      ],
      "required plugins": [
        "Minecraft 1.13+"
      ]
    },
    {
      "id": "ExprBlockHardness",
      "name": "Block Hardness",
      "description": [
        "Obtains the block's hardness level (also known as \"strength\"). This number is used to calculate the time required to break each block."
      ],
      "examples": [
        "set {_hard} to block hardness of target block",
        "if block hardness of target block > 5:"
      ],
      "since": [
        "2.6"
      ],
      "return type": "Number",
      "patterns": [
        "[the] [block] hardness of %itemtypes%",
        "%itemtypes%'[s] [block] hardness"
      ],
      "required plugins": [
        "Minecraft 1.13+"
      ]
    },
    {
      "id": "ExprBlockSphere",
      "name": "Block Sphere",
      "description": [
        "All blocks in a sphere around a center, mostly useful for looping."
      ],
      "examples": [
        "loop blocks in radius 5 around the player:",
        "\tset loop-block to air"
      ],
      "since": [
        "1.0"
      ],
      "return type": "Block",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[(all [[of] the]|the)] blocks in radius %number% [(of|around) %location%]",
        "[(all [[of] the]|the)] blocks around %location% in radius %number%"
      ]
    },
    {
      "id": "ExprBlocks",
      "name": "Blocks",
      "description": [
        "Blocks relative to other blocks or between other blocks. Can be used to get blocks relative to other blocks or for looping.",
        "Blocks from/to and between will return a straight line whereas blocks within will return a cuboid."
      ],
      "examples": [
        "loop blocks above the player:",
        "loop blocks between the block below the player and the targeted block:",
        "set the blocks below the player, the victim and the targeted block to air",
        "set all blocks within {loc1} and {loc2} to stone",
        "set all blocks within chunk at player to air"
      ],
      "since": [
        "1.0, 2.5.1 (within/cuboid/chunk)"
      ],
      "return type": "Block",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[(all [[of] the]|the)] blocks %direction% [%locations%]",
        "[(all [[of] the]|the)] blocks from %location% [on] %direction%",
        "[(all [[of] the]|the)] blocks from %location% to %location%",
        "[(all [[of] the]|the)] blocks between %location% and %location%",
        "[(all [[of] the]|the)] blocks within %location% and %location%",
        "[(all [[of] the]|the)] blocks (in|within) %chunk%"
      ]
    },
    {
      "id": "ExprBlocksInRegion",
      "name": "Blocks in Region",
      "description": [
        "All blocks in a region.",
        "This expression requires a supported regions plugin to be installed."
      ],
      "examples": [
        "loop all blocks in the region {arena.%{faction.%player%}%}:",
        "\tclear the loop-block"
      ],
      "since": [
        "2.1"
      ],
      "return type": "Block",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[(all|the)] blocks (in|of) [[the] region[s]] %regions%"
      ]
    },
    {
      "id": "ExprBookAuthor",
      "name": "Book Author",
      "description": [
        "The author of a book."
      ],
      "examples": [
        "on book sign:",
        "\tmessage \"Book Title: %author of event-item%\""
      ],
      "since": [
        "2.2-dev31"
      ],
      "return type": "Text",
      "changers": [
        "set",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] [book] (author|writer|publisher) of %itemtypes%",
        "%itemtypes%'[s] [book] (author|writer|publisher)"
      ]
    },
    {
      "id": "ExprBookPages",
      "name": "Book Pages",
      "description": [
        "The pages of a book."
      ],
      "examples": [
        "on book sign:",
        "\tmessage \"Book Pages: %pages of event-item%\"",
        "\tmessage \"Book Page 1: %page 1 of event-item%\""
      ],
      "since": [
        "2.2-dev31"
      ],
      "return type": "Text",
      "patterns": [
        "[all] [the] [book] (pages|content) of %itemtypes%",
        "%itemtypes%'s [book] (pages|content)",
        "[book] page %number% of %itemtypes%",
        "%itemtypes%'s [book] page %number%"
      ]
    },
    {
      "id": "ExprBookTitle",
      "name": "Book Title",
      "description": [
        "The title of a book."
      ],
      "examples": [
        "on book sign:",
        "\tmessage \"Book Title: %title of event-item%\""
      ],
      "since": [
        "2.2-dev31"
      ],
      "return type": "Text",
      "changers": [
        "set",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] book (name|title) of %itemtypes%",
        "%itemtypes%'[s] book (name|title)"
      ]
    },
    {
      "id": "ExprBurnCookTime",
      "name": "Burn/Cook Time",
      "description": [
        "The time a furnace takes to burn an item in a fuel burn event.",
        "Can also be used to change the burn/cook time of a placed furnace."
      ],
      "examples": [
        "on fuel burn:",
        "\tif fuel slot is coal:",
        "\t\tset burning time to 1 tick"
      ],
      "since": [
        "2.3"
      ],
      "return type": "Timespan",
      "changers": [
        "add",
        "set",
        "remove"
      ],
      "patterns": [
        "[the] burn[ing] time",
        "[the] (burn|cook)[ing] time of %blocks%",
        "%blocks%'[s] (burn|cook)[ing] time"
      ]
    },
    {
      "id": "ExprStringCase",
      "name": "Case Text",
      "description": [
        "Copy of given text in Lowercase, Uppercase, Proper Case, camelCase, PascalCase, Snake_Case, and Kebab-Case"
      ],
      "examples": [
        "\"Oops!\" in lowercase # oops!",
        "\"oops!\" in uppercase # OOPS!",
        "\"hellO i'm steve!\" in proper case # HellO I'm Steve!",
        "\"hellO i'm steve!\" in strict proper case # Hello I'm Steve!",
        "\"spAwn neW boSs ()\" in camel case # spAwnNeWBoSs()",
        "\"spAwn neW boSs ()\" in strict camel case # spawnNewBoss()",
        "\"geneRate ranDom numBer ()\" in pascal case # GeneRateRanDomNumBer()",
        "\"geneRate ranDom numBer ()\" in strict pascal case # GenerateRandomNumber()",
        "\"Hello Player!\" in snake case # Hello_Player!",
        "\"Hello Player!\" in lower snake case # hello_player!",
        "\"Hello Player!\" in upper snake case # HELLO_PLAYER!",
        "\"What is your name?\" in kebab case # What-is-your-name?",
        "\"What is your name?\" in lower kebab case # what-is-your-name?",
        "\"What is your name?\" in upper kebab case # WHAT-IS-YOUR-NAME?"
      ],
      "since": [
        "2.2-dev16 (lowercase and uppercase), 2.5 (advanced cases)"
      ],
      "return type": "Text",
      "patterns": [
        "%strings% in (upper|lower)[ ]case",
        "(upper|lower)[ ]case %strings%",
        "capitali(s|z)ed %strings%",
        "%strings% in [(lenient|strict) ](proper|title)[ ]case",
        "[(lenient|strict) ](proper|title)[ ]case %strings%",
        "%strings% in [(lenient|strict) ]camel[ ]case",
        "[(lenient|strict) ]camel[ ]case %strings%",
        "%strings% in [(lenient|strict) ]pascal[ ]case",
        "[(lenient|strict) ]pascal[ ]case %strings%",
        "%strings% in [(lower|upper|capital|screaming)[ ]]snake[ ]case",
        "[(lower|upper|capital|screaming)[ ]]snake[ ]case %strings%",
        "%strings% in [(lower|upper|capital)[ ]]kebab[ ]case",
        "[(lower|upper|capital)[ ]]kebab[ ]case %strings%"
      ]
    },
    {
      "id": "ExprChatFormat",
      "name": "Chat Format",
      "description": [
        "Can be used to get/retrieve the chat format. The sender of a message is represented by [player] or [sender], and the message by [message] or [msg]."
      ],
      "examples": [
        "set the chat format to \"&lt;yellow&gt;[player]&lt;light gray&gt;: &lt;green&gt;[message]\""
      ],
      "since": [
        "2.2-dev31"
      ],
      "return type": "Text",
      "changers": [
        "set",
        "reset"
      ],
      "patterns": [
        "[the] (message|chat) format[ting]"
      ]
    },
    {
      "id": "ExprChatRecipients",
      "name": "Chat Recipients",
      "description": [
        "Recipients of chat events where this is called."
      ],
      "examples": [
        "chat recipients"
      ],
      "since": [
        "2.2-Fixes-v7, 2.2-dev35 (clearing recipients)"
      ],
      "return type": "Player",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete",
        "reset"
      ],
      "patterns": [
        "[chat][( |-)]recipients"
      ]
    },
    {
      "id": "ExprChunk",
      "name": "Chunk",
      "description": [
        "The chunk a block, location or entity is in."
      ],
      "examples": [
        "add the chunk at the player to {protected chunks::*}"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Chunk",
      "patterns": [
        "[the] chunk[s] (of|%directions%) %locations%",
        "%locations%'[s] chunk[s]"
      ]
    },
    {
      "id": "ExprClicked",
      "name": "Clicked Block/Entity/Inventory/Slot",
      "description": [
        "The clicked block, entity, inventory, inventory slot, inventory click type or inventory action."
      ],
      "examples": [
        "message \"You clicked on a %type of clicked entity%!\"",
        "if the clicked block is a chest:",
        "\tshow the inventory of the clicked block to the player"
      ],
      "since": [
        "1.0, 2.2-dev35 (more clickable things)"
      ],
      "return type": "Object",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[the] (clicked [enchant[ment]] (button|option)|clicked (block|%*itemtype/entitydata%)|clicked slot|clicked inventory|click (type|action)|inventory action)"
      ]
    },
    {
      "id": "ExprColorOf",
      "name": "Colour of",
      "description": [
        "The colour of an item, can also be used to colour chat messages with \"&lt;%colour of ...%&gt;this text is coloured!\"."
      ],
      "examples": [
        "on click on wool:",
        "\tmessage \"This wool block is <%colour of block%>%colour of block%<reset>!\"",
        "\tset the colour of the block to black"
      ],
      "since": [
        "1.2"
      ],
      "return type": "Colour",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "[the] colo[u]r[s] of %blocks/itemtypes/entities/fireworkeffects%",
        "%blocks/itemtypes/entities/fireworkeffects%'[s] colo[u]r[s]"
      ]
    },
    {
      "id": "ExprColoured",
      "name": "Coloured / Uncoloured",
      "description": [
        "Parses &lt;colour&gt;s and, optionally, chat styles in a message or removes",
        "any colours and chat styles from the message. Parsing all",
        "chat styles requires this expression to be used in same line with",
        "the send effect."
      ],
      "examples": [
        "on chat:",
        "\tset message to coloured message # Safe; only colors get parsed",
        "command /fade &lt;player&gt;:",
        "\ttrigger:",
        "\t\tset display name of the player-argument to uncoloured display name of the player-argument",
        "command /format &lt;text&gt;:",
        "\ttrigger:",
        "\t\tmessage formatted text-argument # Safe, because we're sending to whoever used this command"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Text",
      "patterns": [
        "(colo[u]r-|colo[u]red )%strings%",
        "(format-|formatted )%strings%",
        "(un|non)[-](colo[u]r-|colo[u]red |format-|formatted )%strings%"
      ]
    },
    {
      "id": "ExprCommand",
      "name": "Command",
      "description": [
        "The command that caused an 'on command' event (excluding the leading slash and all arguments)"
      ],
      "examples": [
        "# prevent any commands except for the /exit command during some game",
        "on command:",
        "\tif {game::%player%::playing} is true:",
        "\t\tif the command is not \"exit\":",
        "\t\t\tmessage \"You're not allowed to use commands during the game\"",
        "\t\t\tcancel the event"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Text",
      "patterns": [
        "[the] (full|complete|whole) command",
        "[the] command [label]",
        "[the] arguments"
      ]
    },
    {
      "id": "ExprCommandInfo",
      "name": "Command Info",
      "description": [
        "Get information about a command."
      ],
      "examples": [
        "main name of command \"skript\"",
        "description of command \"help\"",
        "label of command \"pl\"",
        "usage of command \"help\"",
        "aliases of command \"bukkit:help\"",
        "permission of command \"/op\"",
        "command \"op\"'s permission message",
        "command \"sk\"'s plugin owner"
      ],
      "since": [
        "2.6"
      ],
      "return type": "Text",
      "patterns": [
        "[the] main command [label] of command %strings%",
        "command %strings%'[s] main command [name]",
        "[the] description of command %strings%",
        "command %strings%'[s] description",
        "[the] label of command %strings%",
        "command %strings%'[s] label",
        "[the] usage of command %strings%",
        "command %strings%'[s] usage",
        "[(all|the|all [of] the)] aliases of command %strings%",
        "command %strings%'[s] aliases",
        "[the] permission of command %strings%",
        "command %strings%'[s] permission",
        "[the] permission message of command %strings%",
        "command %strings%'[s] permission message",
        "[the] plugin [owner] of command %strings%",
        "command %strings%'[s] plugin [owner]"
      ]
    },
    {
      "id": "ExprCommandSender",
      "name": "Command Sender",
      "description": [
        "The player or the console who sent a command. Mostly useful in commands and command events.",
        "If the command sender is a command block, its location can be retrieved by using %block's location%"
      ],
      "examples": [
        "make the command sender execute \"/say hi!\"",
        "on command:",
        "\tlog \"%executor% used command /%command% %arguments%\" to \"commands.log\""
      ],
      "since": [
        "2.0"
      ],
      "return type": "Command Sender",
      "patterns": [
        "[the] [command['s]] (sender|executor)"
      ]
    },
    {
      "id": "ExprCompassTarget",
      "name": "Compass Target",
      "description": [
        "The location a player's compass is pointing at."
      ],
      "examples": [
        "# make all player's compasses target a player stored in {compass::target::%player%}",
        "every 5 seconds:",
        "\tloop all players:",
        "\t\tset the loop-player's compass target to location of {compass::target::%%loop-player%}"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Location",
      "changers": [
        "set",
        "reset"
      ],
      "patterns": [
        "[the] compass target of %players%",
        "%players%'[s] compass target"
      ]
    },
    {
      "id": "LitConsole",
      "name": "Console",
      "description": [
        "Represents the server's console which can receive messages and execute commands"
      ],
      "examples": [
        "execute console command \"/stop\"",
        "send \"message to console\" to the console"
      ],
      "since": [
        "1.3.1"
      ],
      "return type": "Command Sender",
      "patterns": [
        "[the] (console|server)"
      ]
    },
    {
      "id": "ExprCmdCooldownInfo",
      "name": "Cooldown Time/Remaining Time/Elapsed Time/Last Usage/Bypass Permission",
      "description": [
        "Only usable in command events. Represents the cooldown time, the remaining time, the elapsed time,",
        "the last usage date, or the cooldown bypass permission."
      ],
      "examples": [
        "command /home:",
        "\tcooldown: 10 seconds",
        "\tcooldown message: You last teleported home %elapsed time% ago, you may teleport home again in %remaining time%.",
        "\ttrigger:",
        "\t\tteleport player to {home::%player%}"
      ],
      "since": [
        "2.2-dev33"
      ],
      "return type": "Object",
      "changers": [
        "add",
        "set",
        "remove",
        "reset"
      ],
      "patterns": [
        "[the] remaining [time] [of [the] (cooldown|wait) [(of|for) [the] [current] command]]",
        "[the] elapsed [time] [of [the] (cooldown|wait) [(of|for) [the] [current] command]]",
        "[the] ((cooldown|wait) time|[wait] time of [the] (cooldown|wait) [(of|for) [the] [current] command])",
        "[the] last usage [date] [of [the] (cooldown|wait) [(of|for) [the] [current] command]]",
        "[the] [cooldown] bypass perm[ission] [of [the] (cooldown|wait) [(of|for) [the] [current] command]]"
      ]
    },
    {
      "id": "ExprCoordinate",
      "name": "Coordinate",
      "description": [
        "Represents a given coordinate of a location. "
      ],
      "examples": [
        "player's y-coordinate is smaller than 40:",
        "\tmessage \"Watch out for lava!\""
      ],
      "since": [
        "1.4.3"
      ],
      "return type": "Number",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "[the] (x|y|z)(-| )(coord[inate]|pos[ition]|loc[ation])[s] of %locations%",
        "%locations%'[s] (x|y|z)(-| )(coord[inate]|pos[ition]|loc[ation])[s]"
      ]
    },
    {
      "id": "ExprEntity",
      "name": "Creature/Entity/Player/Projectile/Villager/Powered Creeper/etc.",
      "description": [
        "The entity involved in an event (an entity is a player, a creature or an inanimate object like ignited TNT, a dropped item or an arrow).",
        "You can use the specific type of the entity that's involved in the event, e.g. in a 'death of a creeper' event you can use 'the creeper' instead of 'the entity'."
      ],
      "examples": [
        "give a diamond sword of sharpness 3 to the player",
        "kill the creeper",
        "kill all powered creepers in the wolf's world",
        "projectile is an arrow"
      ],
      "since": [
        "1.0"
      ],
      "return type": "Entity",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "[the] [event-]<.+>"
      ]
    },
    {
      "id": "ExprCursorSlot",
      "name": "Cursor Slot",
      "description": [
        "The item which the player has on their cursor. This slot is always empty if player has no inventories open."
      ],
      "examples": [
        "cursor slot of player is dirt",
        "set cursor slot of player to 64 diamonds"
      ],
      "since": [
        "2.2-dev17"
      ],
      "return type": "Inventory Slot",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[the] cursor slot of %players%",
        "%players%'[s] cursor slot"
      ]
    },
    {
      "id": "ExprChestInventory",
      "name": "Custom Chest Inventory",
      "description": [
        "Returns a chest inventory with the given amount of rows and the name. Use the open inventory effect to open it."
      ],
      "examples": [
        "open chest inventory with 1 row named \"test\" to player",
        "set {_inventory} to chest inventory with 1 row"
      ],
      "since": [
        "2.2-dev34"
      ],
      "return type": "Inventory",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[a [new]] chest inventory (named|with name) %string% [with %number% row[s]]",
        "[a [new]] chest inventory with %number% row[s] [(named|with name) %string%]"
      ]
    },
    {
      "id": "ExprCustomModelData",
      "name": "Custom Model Data",
      "description": [
        "Get/set the CustomModelData tag for an item. (Value is an integer between 0 and 99999999)"
      ],
      "examples": [
        "set custom model data of player's tool to 3",
        "set {_model} to custom model data of player's tool"
      ],
      "since": [
        "2.5"
      ],
      "return type": "long",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] [custom] model data of %itemtypes%",
        "%itemtypes%'[s] [custom] model data"
      ],
      "required plugins": [
        "1.14+"
      ]
    },
    {
      "id": "ExprDamage",
      "name": "Damage",
      "description": [
        "How much damage is done in a damage event, possibly ignoring armour, criticals and/or enchantments. Can be changed (remember that in Skript '1' is one full heart, not half a heart)."
      ],
      "examples": [
        "increase the damage by 2"
      ],
      "since": [
        "1.3.5"
      ],
      "return type": "Number",
      "patterns": [
        "[the] damage"
      ]
    },
    {
      "id": "ExprDamageCause",
      "name": "Damage Cause",
      "description": [
        "The damage cause of a damage event. Please click on the link for more information."
      ],
      "examples": [
        "damage cause is lava, fire or burning"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Damage Cause",
      "patterns": [
        "[the] damage (cause|type)"
      ]
    },
    {
      "id": "ExprDamagedItem",
      "name": "Damaged Item",
      "description": [
        "Directly damages an item. In MC versions 1.12.2 and lower, this can be used to apply data values to items/blocks"
      ],
      "examples": [
        "give player diamond sword with damage value 100",
        "set player's tool to diamond hoe damaged by 250",
        "give player diamond sword with damage 700 named \"BROKEN SWORD\"",
        "set {_item} to diamond hoe with damage value 50 named \"SAD HOE\"",
        "set target block of player to wool with data value 1",
        "set target block of player to potato plant with data value 7"
      ],
      "since": [
        "2.4"
      ],
      "return type": "Item Type",
      "patterns": [
        "%itemtype% with (damage|data) [value] %number%",
        "%itemtype% damaged by %number%"
      ]
    },
    {
      "id": "ExprDurability",
      "name": "Data/Damage Value",
      "description": [
        "The data/damage value of an item/block. Data values of blocks are only supported on 1.12.2 and below.",
        "You usually don't need this expression as you can check and set items with aliases easily, ",
        "but this expression can e.g. be used to \"add 1 to data of &lt;item&gt;\", e.g. for cycling through all wool colours."
      ],
      "examples": [
        "set damage value of player's tool to 10",
        "set data value of target block of player to 3",
        "add 1 to the data value of the clicked block",
        "reset data value of block at player"
      ],
      "since": [
        "1.2"
      ],
      "return type": "long",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] ((data|damage)[s] [value[s]]|durabilit(y|ies)) of %itemtypes/blocks/slots%",
        "%itemtypes/blocks/slots%'[s] ((data|damage)[s] [value[s]]|durabilit(y|ies))"
      ]
    },
    {
      "id": "ExprDateAgoLater",
      "name": "Date Ago/Later",
      "description": [
        "A date the specified timespan before/after another date."
      ],
      "examples": [
        "set {_yesterday} to 1 day ago",
        "set {_hourAfter} to 1 hour after {someOtherDate}",
        "set {_hoursBefore} to 5 hours before {someOtherDate}"
      ],
      "since": [
        "2.2-dev33"
      ],
      "return type": "Date",
      "patterns": [
        "%timespan% (ago|in the past|before [the] [date] %date%)",
        "%timespan% (later|(from|after) [the] [date] %date%)"
      ]
    },
    {
      "id": "ExprDefaultValue",
      "name": "Default Value",
      "description": [
        "A shorthand expression for giving things a default value. If the first thing isn't set, the second thing will be returned."
      ],
      "examples": [
        "broadcast {score::%player's uuid%} otherwise \"%player% has no score!\""
      ],
      "since": [
        "2.2-dev36"
      ],
      "return type": "Object",
      "patterns": [
        "%objects% (otherwise|?) %objects%"
      ]
    },
    {
      "id": "ExprDifference",
      "name": "Difference",
      "description": [
        "The difference between two values, e.g. numbers, dates or times."
      ],
      "examples": [
        "if difference between {command::%player%::lastuse} and now is smaller than a minute:",
        "\tmessage \"You have to wait a minute before using this command again!\""
      ],
      "since": [
        "1.4"
      ],
      "return type": "Object",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "difference (between|of) %object% and %object%"
      ]
    },
    {
      "id": "ExprDifficulty",
      "name": "Difficulty",
      "description": [
        "The difficulty of a world."
      ],
      "examples": [
        "set the difficulty of \"world\" to hard"
      ],
      "since": [
        "2.3"
      ],
      "return type": "Difficulty",
      "changers": [
        "set"
      ],
      "patterns": [
        "[the] difficult(y|ies) of %worlds%",
        "%worlds%'[s] difficult(y|ies)"
      ]
    },
    {
      "id": "ExprDirection",
      "name": "Direction",
      "description": [
        "A helper expression for the direction type."
      ],
      "examples": [
        "thrust the player upwards",
        "set the block behind the player to water",
        "loop blocks above the player:",
        "\tset {_rand} to a random integer between 1 and 10",
        "\tset the block {_rand} meters south east of the loop-block to stone",
        "block in horizontal facing of the clicked entity from the player is air",
        "spawn a creeper 1.5 meters horizontally behind the player",
        "spawn a TNT 5 meters above and 2 meters horizontally behind the player",
        "thrust the last spawned TNT in the horizontal direction of the player with speed 0.2",
        "push the player upwards and horizontally forward at speed 0.5",
        "push the clicked entity in in the direction of the player at speed -0.5",
        "open the inventory of the block 2 blocks below the player to the player",
        "teleport the clicked entity behind the player",
        "grow a regular tree 2 meters horizontally behind the player"
      ],
      "since": [
        "1.0 (basic), 2.0 (extended)"
      ],
      "return type": "Direction",
      "patterns": [
        "[%number% [(block|met(er|re))[s]] [to the]] (north[(-| |)(east|west)][(ward(s|ly|)|er(n|ly|))] [of]|south[(-| |)(east|west)][(ward(s|ly|)|er(n|ly|))] [of]|(east|west)[(ward(s|ly|)|er(n|ly|))] [of]|above|over|(up|down)[ward(s|ly|)]|below|under[neath]|beneath) [%direction%]",
        "[%number% [(block|met(er|re))[s]]] in [the] (direction|horizontal direction|facing|horizontal facing) of %entity/block% (of|from|)",
        "[%number% [(block|met(er|re))[s]]] in %entity/block%'[s] (direction|horizontal direction|facing|horizontal facing) (of|from|)",
        "[%number% [(block|met(er|re))[s]]] (in[ ]front [of]|forward[s]|behind|backwards|[to the] (right|left) [of])",
        "[%number% [(block|met(er|re))[s]]] horizontal[ly] (in[ ]front [of]|forward[s]|behind|backwards|to the (right|left) [of])"
      ]
    },
    {
      "id": "ExprDistance",
      "name": "Distance",
      "description": [
        "The distance between two points."
      ],
      "examples": [
        "if the distance between the player and {home::%uuid of player%} is smaller than 20:",
        "\tmessage \"You're very close to your home!\""
      ],
      "since": [
        "1.0"
      ],
      "return type": "Number",
      "patterns": [
        "[the] distance between %location% and %location%"
      ]
    },
    {
      "id": "ExprDrops",
      "name": "Drops",
      "description": [
        "Only works in death events. Holds the drops of the dying creature. Drops can be prevented by removing them with \"remove ... from drops\", e.g. \"remove all pickaxes from the drops\", or \"clear drops\" if you don't want any drops at all."
      ],
      "examples": [
        "clear drops",
        "remove 4 planks from the drops"
      ],
      "since": [
        "1.0"
      ],
      "return type": "Item Type",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all"
      ],
      "patterns": [
        "[the] drops"
      ]
    },
    {
      "id": "ExprDropsOfBlock",
      "name": "Drops Of Block",
      "description": [
        "A list of the items that will drop when a block is broken."
      ],
      "examples": [
        "on break of block:",
        "\tgive drops of block using player's tool to player"
      ],
      "since": [
        "2.5.1"
      ],
      "return type": "Item Type",
      "patterns": [
        "[(all|the|all [of] the)] drops of %blocks% [(using|with) %itemtype% [(as %entity%)]]",
        "%blocks%'s drops [(using|with) %itemtype% [(as %entity%)]]"
      ],
      "required plugins": [
        "Minecraft 1.15+ ('as %entity%')"
      ]
    },
    {
      "id": "ExprElement",
      "name": "Element of",
      "description": [
        "The first, last or a random element of a set, e.g. a list variable.",
        "See also: random"
      ],
      "examples": [
        "give a random element out of {free items::*} to the player"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Object",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "([the] first|[the] last|[a] random|%number%(st|nd|rd|th)) element [out] of %objects%"
      ]
    },
    {
      "id": "ExprEnchantItem",
      "name": "Enchant Item",
      "description": [
        "The enchant item in an enchant prepare event or enchant event.",
        "It can be modified, but enchantments will still be applied in the enchant event."
      ],
      "examples": [
        "on enchant:",
        "\tset the enchanted item to a diamond chestplate",
        "on enchant prepare:",
        "\tset the enchant item to a wooden sword"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Item Type",
      "changers": [
        "set"
      ],
      "patterns": [
        "[the] enchant[ed] item"
      ]
    },
    {
      "id": "ExprEnchantingExpCost",
      "name": "Enchanting Experience Cost",
      "description": [
        "The cost of enchanting in an enchant event.",
        "This is number that was displayed in the enchantment table, not the actual number of levels removed."
      ],
      "examples": [
        "on enchant:",
        "\tsend \"Cost: %the displayed enchanting cost%\" to player"
      ],
      "since": [
        "2.5"
      ],
      "return type": "long",
      "changers": [
        "add",
        "set",
        "remove"
      ],
      "patterns": [
        "[the] [displayed] ([e]xp[erience]|enchanting) cost"
      ]
    },
    {
      "id": "ExprEnchantmentBonus",
      "name": "Enchantment Bonus",
      "description": [
        "The enchantment bonus in an enchant prepare event. This represents the number of bookshelves affecting/surrounding the enchantment table."
      ],
      "examples": [
        "on enchant:",
        "\tsend \"There are %enchantment bonus% bookshelves surrounding this enchantment table!\" to player"
      ],
      "since": [
        "2.5"
      ],
      "return type": "long",
      "patterns": [
        "[the] enchantment bonus"
      ]
    },
    {
      "id": "ExprEnchantmentLevel",
      "name": "Enchantment Level",
      "description": [
        "The level of a particular enchantment on an item."
      ],
      "examples": [
        "player's tool is a sword of sharpness:",
        "\tmessage \"You have a sword of sharpness %level of sharpness of the player's tool% equipped\""
      ],
      "since": [
        "2.0"
      ],
      "return type": "long",
      "changers": [
        "add",
        "set",
        "remove"
      ],
      "patterns": [
        "[the] [enchant[ment]] level[s] of %enchantments% (on|of) %itemtypes%",
        "[the] %enchantments% [enchant[ment]] level[s] (on|of) %itemtypes%",
        "%itemtypes%'[s] %enchantments% [enchant[ment]] level[s]",
        "%itemtypes%'[s] [enchant[ment]] level[s] of %enchantments%"
      ]
    },
    {
      "id": "ExprEnchantmentOffer",
      "name": "Enchantment Offer",
      "description": [
        "The enchantment offer in enchant prepare events."
      ],
      "examples": [
        "on enchant prepare:",
        "\tsend \"Your enchantment offers are: %the enchantment offers%\" to player"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Enchantment Offer",
      "changers": [
        "set",
        "delete"
      ],
      "patterns": [
        "[all [of]] [the] enchant[ment] offers",
        "enchant[ment] offer[s] %numbers%",
        "[the] %number%(st|nd|rd|th) enchant[ment] offer"
      ],
      "required plugins": [
        "1.11 or newer"
      ]
    },
    {
      "id": "ExprEnchantmentOfferCost",
      "name": "Enchantment Offer Enchantment Cost",
      "description": [
        "The cost of an enchantment offer. This is displayed to the right of an enchantment offer.",
        " If the cost is changed, it will always be at least 1.",
        " This changes how many levels are required to enchant, but does not change the number of levels removed.",
        " To change the number of levels removed, use the enchant event."
      ],
      "examples": [
        "set cost of enchantment offer 1 to 50"
      ],
      "since": [
        "2.5"
      ],
      "return type": "long",
      "changers": [
        "add",
        "set",
        "delete"
      ],
      "patterns": [
        "[the] [enchant[ment]] cost of %enchantmentoffers%",
        "%enchantmentoffers%'[s] [enchant[ment]] cost"
      ],
      "required plugins": [
        "1.11 or newer"
      ]
    },
    {
      "id": "ExprEnderChest",
      "name": "Ender Chest",
      "description": [
        "The ender chest of a player."
      ],
      "examples": [
        "open the player's ender chest to the player"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Inventory",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[the] ender[ ]chest[s] of %players%",
        "%players%'[s] ender[ ]chest[s]"
      ]
    },
    {
      "id": "ExprEntities",
      "name": "Entities",
      "description": [
        "All entities in all worlds, in a specific world, in a chunk or in a radius around a certain location, e.g. all players, all creepers in the player's world, or players in radius 100 of the player."
      ],
      "examples": [
        "kill all creepers in the player's world",
        "send \"Psst!\" to all players within 100 meters of the player",
        "give a diamond to all ops",
        "heal all tamed wolves in radius 2000 around {town center}",
        "delete all monsters in chunk at player"
      ],
      "since": [
        "1.2.1, 2.5 (chunks)"
      ],
      "return type": "Entity",
      "changers": [
        "add",
        "remove",
        "remove all"
      ],
      "patterns": [
        "[(all [[of] the]|the)] %*entitydatas% [(in|of) ([world[s]] %worlds%|%chunks%)]",
        "[(all [[of] the]|the)] entities of type[s] %entitydatas% [(in|of) ([world[s]] %worlds%|%chunks%)]",
        "[(all [[of] the]|the)] %*entitydatas% (within|[with]in radius) %number% [(block[s]|met(er|re)[s])] (of|around) %location%",
        "[(all [[of] the]|the)] entities of type[s] %entitydatas% in radius %number% (of|around) %location%"
      ]
    },
    {
      "id": "ExprAI",
      "name": "Entity AI",
      "description": [
        "Returns whether an entity has AI."
      ],
      "examples": [
        "set artificial intelligence of target entity to false"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Boolean",
      "changers": [
        "set"
      ],
      "patterns": [
        "[the] (ai|artificial intelligence) of %livingentities%",
        "%livingentities%'[s] (ai|artificial intelligence)"
      ]
    },
    {
      "id": "ExprEntityAttribute",
      "name": "Entity Attribute",
      "description": [
        "The numerical value of an entity's particular attribute.",
        "Note that the movement speed attribute cannot be reliably used for players. For that purpose, use the speed expression instead.",
        "Resetting an entity's attribute is only available in Minecraft 1.11 and above."
      ],
      "examples": [
        "on damage of player:",
        "\tsend \"You are wounded!\"",
        "\tset victim's attack speed attribute to 2"
      ],
      "since": [
        "2.5, 2.6.1 (final attribute value)"
      ],
      "return type": "Number",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] %attributetype% [((total|final|modified))] attribute [value] of %entities%",
        "%entities%'[s] %attributetype% [((total|final|modified))] attribute [value]"
      ]
    },
    {
      "id": "ExprEntityTamer",
      "name": "Entity Owner",
      "description": [
        "The owner of a tameable entity, such as a horse or wolf."
      ],
      "examples": [
        "set owner of target entity to player",
        "delete owner of target entity",
        "set {_t} to uuid of tamer of target entity"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Offline Player",
      "changers": [
        "set",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] (owner|tamer) of %livingentities%",
        "%livingentities%'[s] (owner|tamer)"
      ]
    },
    {
      "id": "ExprExhaustion",
      "name": "Exhaustion",
      "description": [
        "The exhaustion of a player. This is mainly used to determine the rate of hunger depletion."
      ],
      "examples": [
        "set exhaustion of all players to 1"
      ],
      "since": [
        "2.2-dev35"
      ],
      "return type": "Number",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] exhaustion of %players%",
        "%players%'[s] exhaustion"
      ]
    },
    {
      "id": "ExprExperience",
      "name": "Experience",
      "description": [
        "How much experience was spawned in an experience spawn or block break event. Can be changed."
      ],
      "examples": [
        "on experience spawn:",
        "\tadd 5 to the spawned experience",
        "on break of coal ore:",
        "\tclear dropped experience",
        "on break of diamond ore:",
        "\tif tool of player = diamond pickaxe:",
        "\t\tadd 100 to dropped experience"
      ],
      "since": [
        "2.1, 2.5.3 (block break event)"
      ],
      "return type": "Experience",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[the] (spawned|dropped|) [e]xp[erience] [orb[s]]"
      ]
    },
    {
      "id": "ExprExplodedBlocks",
      "name": "Exploded Blocks",
      "description": [
        "Get all the blocks that were destroyed in an explode event"
      ],
      "examples": [
        "on explode:",
        "\tloop exploded blocks:",
        "\t\tadd loop-block to {exploded::blocks::*}"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Block",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[the] exploded blocks"
      ]
    },
    {
      "id": "ExprExplosionBlockYield",
      "name": "Explosion Block Yield",
      "description": [
        "The percentage of exploded blocks dropped in an explosion event.",
        "When changing the yield, a value greater than 1 will function the same as using 1.",
        "Attempting to change the yield to a value less than 0 will have no effect."
      ],
      "examples": [
        "on explode:",
        "set the explosion's block yield to 10%"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Number",
      "changers": [
        "add",
        "set",
        "remove",
        "delete"
      ],
      "patterns": [
        "[the] [explosion['s]] block (yield|amount)",
        "[the] percentage of blocks dropped"
      ]
    },
    {
      "id": "ExprExplosionYield",
      "name": "Explosion Yield",
      "description": [
        "The yield of the explosion in an explosion prime event. This is how big the explosion is.",
        " When changing the yield, values less than 0 will be ignored.",
        " Read this wiki page for more information"
      ],
      "examples": [
        "on explosion prime:",
        "\tset the yield of the explosion to 10"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Number",
      "changers": [
        "add",
        "set",
        "remove",
        "delete"
      ],
      "patterns": [
        "[the] explosion (yield|radius|size)",
        "[the] (yield|radius|size) of [the] explosion"
      ]
    },
    {
      "id": "ExprExplosiveYield",
      "name": "Explosive Yield",
      "description": [
        "The yield of an explosive (creeper, primed tnt, fireball, etc.). This is how big of an explosion is caused by the entity.",
        "Read this wiki page for more information"
      ],
      "examples": [
        "on spawn of a creeper:",
        "\tset the explosive yield of the event-entity to 10"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Number",
      "changers": [
        "add",
        "set",
        "remove",
        "delete"
      ],
      "patterns": [
        "[the] explosive (yield|radius|size) of %entities%",
        "%entities%'[s] explosive (yield|radius|size)"
      ],
      "required plugins": [
        "Minecraft 1.12 or newer for creepers"
      ]
    },
    {
      "id": "ExprFacing",
      "name": "Facing",
      "description": [
        "The facing of an entity or block, i.e. exactly north, south, east, west, up or down (unlike direction which is the exact direction, e.g. '0.5 south and 0.7 east')"
      ],
      "examples": [
        "# makes a bridge",
        "loop blocks from the block below the player in the horizontal facing of the player:",
        "\tset loop-block to cobblestone"
      ],
      "since": [
        "1.4"
      ],
      "return type": "Direction",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "[the] (horizontal|) facing of %livingentities/blocks%",
        "%livingentities/blocks%'[s] (horizontal|) facing"
      ]
    },
    {
      "id": "ExprFallDistance",
      "name": "Fall Distance",
      "description": [
        "The distance an entity has fallen for."
      ],
      "examples": [
        "set all entities' fall distance to 10",
        "on damage:",
        "\tsend \"%victim's fall distance%\" to victim"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Number",
      "changers": [
        "add",
        "set",
        "remove"
      ],
      "patterns": [
        "[the] fall[en] (distance|height) of %entities%",
        "%entities%'[s] fall[en] (distance|height)"
      ]
    },
    {
      "id": "ExprFertilizedBlocks",
      "name": "Fertilized Blocks",
      "description": [
        "The blocks fertilized in block fertilize events."
      ],
      "examples": [
        "the fertilized blocks"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Block",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[all] [the] fertilized blocks"
      ],
      "required plugins": [
        "Minecraft 1.13 or newer"
      ]
    },
    {
      "id": "ExprFilter",
      "name": "Filter",
      "description": [
        "Filters a list based on a condition. For example, if you ran 'broadcast \"something\" and \"something else\" where [string input is \"something\"]', only \"something\" would be broadcast as it is the only string that matched the condition."
      ],
      "examples": [
        "send \"congrats on being staff!\" to all players where [player input has permission \"staff\"]"
      ],
      "since": [
        "2.2-dev36"
      ],
      "return type": "Object",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "%objects% (where|that match) \\[<.+>\\]"
      ]
    },
    {
      "id": "ExprInput",
      "name": "Filter Input",
      "description": [
        "Represents the input in a filter expression. For example, if you ran 'broadcast \"something\" and \"something else\" where [input is \"something\"]the condition would be checked twice, using \"something\" and \"something else\" as the inputs."
      ],
      "examples": [
        "send \"congrats on being staff!\" to all players where [input has permission \"staff\"]"
      ],
      "since": [
        "2.2-dev36"
      ],
      "return type": "Object",
      "patterns": [
        "input",
        "%*classinfo% input"
      ]
    },
    {
      "id": "ExprFinalDamage",
      "name": "Final Damage",
      "description": [
        "How much damage is done in a damage event, considering all types of damage reduction. Can NOT be changed."
      ],
      "examples": [
        "send \"%final damage%\" to victim"
      ],
      "since": [
        "2.2-dev19"
      ],
      "return type": "Number",
      "patterns": [
        "[the] final damage"
      ]
    },
    {
      "id": "ExprFireworkEffect",
      "name": "Firework Effect",
      "description": [
        "Represents a 'firework effect' which can be used in the launch firework effect."
      ],
      "examples": [
        "launch flickering trailing burst firework colored blue and green at player",
        "launch trailing flickering star coloured purple, yellow, blue, green and red fading to pink at target entity",
        "launch ball large coloured red, purple and white fading to light green and black at player's location with duration 1"
      ],
      "since": [
        "2.4"
      ],
      "return type": "Firework Effect",
      "patterns": [
        "(|flickering|trailing|flickering trailing|trailing flickering) %fireworktype% [firework [effect]] colo[u]red %colors%",
        "(|flickering|trailing|flickering trailing|trailing flickering) %fireworktype% [firework [effect]] colo[u]red %colors% fad(e|ing) [to] %colors%"
      ]
    },
    {
      "id": "ExprFlightMode",
      "name": "Flight Mode",
      "description": [
        "Whether the player(s) are allowed to fly. Use Make Fly effect to force player(s) to fly."
      ],
      "examples": [
        "set flight mode of player to true",
        "send \"%flying state of all players%\""
      ],
      "since": [
        "2.2-dev34"
      ],
      "return type": "Boolean",
      "changers": [
        "set",
        "reset"
      ],
      "patterns": [
        "[the] fl(y[ing]|ight) (mode|state) of %players%",
        "%players%'[s] fl(y[ing]|ight) (mode|state)"
      ]
    },
    {
      "id": "ExprFoodLevel",
      "name": "Food Level",
      "description": [
        "The food level of a player from 0 to 10. Has several aliases: food/hunger level/meter/bar. "
      ],
      "examples": [
        "set the player's food level to 10"
      ],
      "since": [
        "1.0"
      ],
      "return type": "Number",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] (food|hunger)[[ ](level|met(er|re)|bar)] [of %player%]",
        "%player%'[s] (food|hunger)[[ ](level|met(er|re)|bar)]"
      ]
    },
    {
      "id": "ExprFormatTime",
      "name": "Formatted Time",
      "description": [
        "Converts date to human-readable text format. By default, 'yyyy-MM-dd HH:mm:ss z' (e.g. '2018-03-30 16:03:12 +01') will be used. For reference, see this Wikipedia article."
      ],
      "examples": [
        "now formatted human-readable"
      ],
      "since": [
        "2.2-dev31"
      ],
      "return type": "Text",
      "patterns": [
        "%dates% formatted [human-readable] [(with|as) %string%]"
      ]
    },
    {
      "id": "ExprTimeState",
      "name": "Former/Future State",
      "description": [
        "Represents the value of an expression before an event happened or the value it will have directly after the event, e.g. the old or new level respectively in a level change event.",
        "Note: The past, future and present states of an expression are sometimes called 'time states' of an expression.",
        "Note 2: If you don't specify whether to use the past or future state of an expression that has different values, its default value will be used which is usually the value after the event."
      ],
      "examples": [
        "on teleport:",
        "\tformer world was \"world_nether\" # or 'world was'",
        "\tworld will be \"world\" # or 'world after the event is'",
        "on tool change:",
        "\tpast tool is an axe",
        "\tthe tool after the event will be air",
        "on weather change:",
        "\tset {weather::%world%::old} to past weather",
        "\tset {weather::%world%::current} to the new weather"
      ],
      "since": [
        "1.1"
      ],
      "return type": "Object",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "[the] (former|past|old) [state] [of] %object%",
        "%object% before [the event]",
        "[the] (future|to-be|new) [state] [of] %object%",
        "%object%(-to-be| after[(wards| the event)])"
      ]
    },
    {
      "id": "ExprFurnaceSlot",
      "name": "Furnace Slot",
      "description": [
        "A slot of a furnace, i.e. either the ore, fuel or result slot.",
        "Remember to use 'block' and not 'furnace', as 'furnace' is not an existing expression."
      ],
      "examples": [
        "set the fuel slot of the clicked block to a lava bucket",
        "set the block's ore slot to 64 iron ore",
        "give the result of the block to the player",
        "clear the result slot of the block"
      ],
      "since": [
        "1.0"
      ],
      "return type": "Inventory Slot",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "(fuel|result) [slot]",
        "(ore|fuel|result)[s] [slot[s]] of %blocks%",
        "%blocks%'[s] (ore|fuel|result)[s] [slot[s]]"
      ]
    },
    {
      "id": "ExprGameMode",
      "name": "Game Mode",
      "description": [
        "The gamemode of a player. (Gamemodes)"
      ],
      "examples": [
        "player's gamemode is survival",
        "set the player's gamemode to creative"
      ],
      "since": [
        "1.0"
      ],
      "return type": "Game Mode",
      "changers": [
        "set",
        "reset"
      ],
      "patterns": [
        "[the] game[ ]mode of %players%",
        "%players%'[s] game[ ]mode"
      ]
    },
    {
      "id": "ExprGameRule",
      "name": "Gamerule Value",
      "description": [
        "The gamerule value of a world."
      ],
      "examples": [
        "set the gamerule commandBlockOutput of world \"world\" to false"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Gamerule Value",
      "changers": [
        "set"
      ],
      "patterns": [
        "[the] gamerule %gamerule% of %worlds%"
      ],
      "required plugins": [
        "Minecraft 1.13+"
      ]
    },
    {
      "id": "ExprGlidingState",
      "name": "Gliding State",
      "description": [
        "Sets of gets gliding state of player. It allows you to set gliding state of entity even if they do not have an Elytra equipped."
      ],
      "examples": [
        "set gliding of player to off"
      ],
      "since": [
        "2.2-dev21"
      ],
      "return type": "Boolean",
      "changers": [
        "set",
        "reset"
      ],
      "patterns": [
        "[the] (gliding|glider) [state] of %livingentities%",
        "%livingentities%'[s] (gliding|glider) [state]"
      ]
    },
    {
      "id": "ExprGlowing",
      "name": "Glowing",
      "description": [
        "Indicates if targeted entity is glowing (new 1.9 effect) or not. Glowing entities can be seen through walls."
      ],
      "examples": [
        "set glowing of player to true"
      ],
      "since": [
        "2.2-dev18"
      ],
      "return type": "Boolean",
      "changers": [
        "set",
        "reset"
      ],
      "patterns": [
        "[the] glowing of %entities%",
        "%entities%'[s] glowing"
      ]
    },
    {
      "id": "ExprGravity",
      "name": "Gravity",
      "description": [
        "If entity is affected by gravity or not, i.e. if it has Minecraft 1.10+ NoGravity flag."
      ],
      "examples": [
        "set gravity of player off"
      ],
      "since": [
        "2.2-dev21"
      ],
      "return type": "Boolean",
      "changers": [
        "set",
        "reset"
      ],
      "patterns": [
        "[the] gravity of %entities%",
        "%entities%'[s] gravity"
      ]
    },
    {
      "id": "ExprGroup",
      "name": "Group",
      "description": [
        "The primary group or all groups of a player. This expression requires Vault and a compatible permissions plugin to be installed."
      ],
      "examples": [
        "on join:",
        "\tbroadcast \"%group of player%\" # this is the player's primary group",
        "\tbroadcast \"%groups of player%\" # this is all of the player's groups"
      ],
      "since": [
        "2.2-dev35"
      ],
      "return type": "Text",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] group[(s)] of %offlineplayers%",
        "%offlineplayers%'[s] group[(s)]"
      ],
      "required plugins": [
        "Vault",
        "a permission plugin that supports Vault"
      ]
    },
    {
      "id": "ExprHanging",
      "name": "Hanging Entity/Remover",
      "description": [
        "Returns the hanging entity or remover in hanging break and place events."
      ],
      "examples": [
        "on break of item frame:",
        "\tif item of hanging entity is diamond pickaxe:",
        "\t\tcancel event",
        "\t\tif hanging remover is a player:",
        "\t\t\tsend \"You can't break that item frame!\" to hanging remover"
      ],
      "since": [
        "2.6.2"
      ],
      "return type": "Entity",
      "changers": [
        "add",
        "remove",
        "remove all"
      ],
      "patterns": [
        "[the] hanging (entity|:remover)"
      ]
    },
    {
      "id": "ExprHash",
      "name": "Hash",
      "description": [
        "Hashes the given text using the MD5 or SHA-256 algorithms. Each algorithm is suitable for different use cases.<p>",
        "MD5 is provided mostly for backwards compatibility, as it is outdated and not secure. ",
        "SHA-256 is more secure, and can used to hash somewhat confidental data like IP addresses and even passwords. ",
        "It is not that secure out of the box, so please consider using salt when dealing with passwords! ",
        "When hashing data, you must specify algorithms that will be used for security reasons! ",
        "<p>Please note that a hash cannot be reversed under normal circumstanses. You will not be able to get original value from a hash with Skript."
      ],
      "examples": [
        "command /setpass &lt;text&gt;:",
        "\ttrigger:",
        "\t\tset {password::%uuid of player%} to text-argument hashed with SHA-256",
        "command /login &lt;text&gt;:",
        "\ttrigger:",
        "\t\tif text-argument hashed with SHA-256 is {password::%uuid of player%}:",
        "\t\t\tmessage \"Login successful.\"",
        "\t\telse:",
        "\t\t\tmessage \"Wrong password!\""
      ],
      "since": [
        "2.0, 2.2-dev32 (SHA-256 algorithm)"
      ],
      "return type": "Text",
      "patterns": [
        "%strings% hash[ed] with (MD5|SHA-256)"
      ]
    },
    {
      "id": "ExprEyeLocation",
      "name": "Head location",
      "description": [
        "The location of an entity's head, mostly useful for players and e.g. looping blocks in the player's line of sight.",
        "Please note that this location is only accurate for entities whose head is exactly above their center, i.e. players, endermen, zombies, skeletons, etc., but not sheep, pigs or cows."
      ],
      "examples": [
        "set the block at the player's head to air",
        "set the block in front of the player's eyes to glass",
        "loop blocks in front of the player's head:"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Location",
      "patterns": [
        "[the] (head|eye[s]) [location[s]] of %livingentities%",
        "%livingentities%'[s] (head|eye[s]) [location[s]]"
      ]
    },
    {
      "id": "ExprHealAmount",
      "name": "Heal Amount",
      "description": [
        "The amount of health healed in a healing event."
      ],
      "examples": [
        "increase heal amount by 2",
        "remove 0.5 from heal amount"
      ],
      "since": [
        "2.5.1"
      ],
      "return type": "Number",
      "patterns": [
        "[the] heal amount"
      ]
    },
    {
      "id": "ExprHealReason",
      "name": "Heal Reason",
      "description": [
        "The heal reason of a heal event. Please click on the link for more information."
      ],
      "examples": [
        "on heal:",
        "\tif heal reason = satiated:",
        "\t\tsend \"You ate enough food and gained health back!\" to player"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Heal Reason",
      "patterns": [
        "(regen|health regain|heal) (reason|cause)"
      ]
    },
    {
      "id": "ExprHealth",
      "name": "Health",
      "description": [
        "The health of a creature, e.g. a player, mob, villager, etc. The minimum value is 0, and the maximum is the creature's max health (e.g. 10 for players)."
      ],
      "examples": [
        "message \"You have %health% HP left.\""
      ],
      "since": [
        "1.0"
      ],
      "return type": "Number",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] health of %livingentities%",
        "%livingentities%'[s] health"
      ]
    },
    {
      "id": "ExprHiddenPlayers",
      "name": "Hidden Players",
      "description": [
        "The players hidden from a player that were hidden using the player visibility effect."
      ],
      "examples": [
        "message \"&lt;light red&gt;You are currently hiding: &lt;light gray&gt;%hidden players of the player%\""
      ],
      "since": [
        "2.3"
      ],
      "return type": "Player",
      "changers": [
        "add",
        "remove",
        "remove all"
      ],
      "patterns": [
        "[(all [[of] the]|the)] hidden players (of|for) %players%",
        "[(all [[of] the]|the)] players hidden (from|for|by) %players%"
      ]
    },
    {
      "id": "ExprHighestSolidBlock",
      "name": "Highest Solid Block",
      "description": [
        "Returns the highest solid block at the x and z coordinates of the world of a given location."
      ],
      "examples": [
        "highest block at location of arg-player"
      ],
      "since": [
        "2.2-dev34"
      ],
      "return type": "Block",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "highest [(solid|non-air)] block at %locations%"
      ]
    },
    {
      "id": "ExprHostname",
      "name": "Hostname",
      "description": [
        "The hostname used by the connecting player to connect to the server in a connect event."
      ],
      "examples": [
        "on connect:",
        "\thostname is \"testers.example.com\"",
        "\tsend \"Welcome back tester!\""
      ],
      "since": [
        "2.6.1"
      ],
      "return type": "Text",
      "patterns": [
        "[the] (host|domain)[ ][name]"
      ]
    },
    {
      "id": "ExprHotbarButton",
      "name": "Hotbar Button",
      "description": [
        "The hotbar button clicked in an inventory click event."
      ],
      "examples": [
        "on inventory click:",
        "\tsend \"You clicked the hotbar button %hotbar button%!\""
      ],
      "since": [
        "2.5"
      ],
      "return type": "long",
      "patterns": [
        "[the] hotbar button"
      ]
    },
    {
      "id": "ExprHotbarSlot",
      "name": "Hotbar Slot",
      "description": [
        "The slot number of the currently selected hotbar slot."
      ],
      "examples": [
        "message \"%player's current hotbar slot%\"",
        "set player's selected hotbar slot to slot 4 of player"
      ],
      "since": [
        "2.2-dev36"
      ],
      "return type": "Inventory Slot",
      "changers": [
        "set"
      ],
      "patterns": [
        "[the] [([currently] selected|current)] hotbar slot of %players%",
        "%players%'[s] [([currently] selected|current)] hotbar slot"
      ]
    },
    {
      "id": "ExprHoverList",
      "name": "Hover List",
      "description": [
        "The list when you hover on the player counts of the server in the server list.",
        "This can be changed using texts or players in a server list ping event only. Adding players to the list means adding the name of the players.",
        "And note that, for example if there are 5 online players (includes fake online count) in the server and the hover list is set to 3 values, Minecraft will show \"... and 2 more ...\" at end of the list."
      ],
      "examples": [
        "on server list ping:",
        "\tclear the hover list",
        "\tadd \"&aWelcome to the &6Minecraft &aserver!\" to the hover list",
        "\tadd \"\" to the hover list # A blank line",
        "\tadd \"&cThere are &6%online players count% &conline players!\" to the hover list"
      ],
      "since": [
        "2.3"
      ],
      "return type": "Text",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] [custom] [(player|server)] (hover|sample) ([message] list|message)",
        "[the] [custom] player [(hover|sample)] list"
      ],
      "required plugins": [
        "Paper 1.12.2 or newer"
      ]
    },
    {
      "id": "ExprHumidity",
      "name": "Humidity",
      "description": [
        "Humidity of given blocks."
      ],
      "examples": [
        "set {_humidity} to event-block's humidity"
      ],
      "since": [
        "2.2-dev35"
      ],
      "return type": "Number",
      "patterns": [
        "[the] humidit(y|ies) of %blocks%",
        "%blocks%'[s] humidit(y|ies)"
      ]
    },
    {
      "id": "ExprIP",
      "name": "IP",
      "description": [
        "The IP address of a player, or the connected player in a connect event, or the pinger in a server list ping event."
      ],
      "examples": [
        "ban the IP address of the player",
        "broadcast \"Banned the IP %IP of player%\"",
        "",
        "on connect:",
        "\tlog \"[%now%] %player% (%ip%) is connected to the server.\"",
        "",
        "on server list ping:",
        "\tsend \"%IP-address%\" to the console"
      ],
      "since": [
        "1.4, 2.2-dev26 (when used in connect event), 2.3 (when used in server list ping event)"
      ],
      "return type": "Text",
      "patterns": [
        "IP[s][( |-)address[es]] of %players%",
        "%players%'[s] IP[s][( |-)address[es]]",
        "IP[( |-)address]"
      ]
    },
    {
      "id": "ExprIdOf",
      "name": "Id",
      "description": [
        "The id of a specific item. You usually don't need this expression as you can likely do everything with aliases."
      ],
      "examples": [
        "message \"the ID of %type of the clicked block% is %id of the clicked block%.\""
      ],
      "since": [
        "1.0"
      ],
      "return type": "long",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "[the] id(s|) of %itemtype%",
        "%itemtype%'[s] id(s|)"
      ]
    },
    {
      "id": "ExprIndexOf",
      "name": "Index Of",
      "description": [
        "The first or last index of a character (or text) in a text, or -1 if it doesn't occur in the text. Indices range from 1 to the length of the text."
      ],
      "examples": [
        "set {_first} to the first index of \"@\" in the text argument",
        "if {_s} contains \"abc\":",
        "\tset {_s} to the first (index of \"abc\" in {_s} + 3) characters of {_s} # removes everything after the first \"abc\" from {_s}"
      ],
      "since": [
        "2.1"
      ],
      "return type": "long",
      "patterns": [
        "[the] (|first|last) index of %string% in %string%"
      ]
    },
    {
      "id": "ExprIndices",
      "name": "Indices of List",
      "description": [
        "Returns all the indices of a list variable, optionally sorted by their values.",
        "To sort the indices, all objects in the list must be comparable;",
        "Otherwise, this expression will just return the unsorted indices."
      ],
      "examples": [
        "set {l::*} to \"some\", \"cool\" and \"values\"",
        "broadcast \"%indices of {l::*}%\" # result is 1, 2 and 3",
        "",
        "set {_leader-board::first} to 17",
        "set {_leader-board::third} to 30",
        "set {_leader-board::second} to 25",
        "set {_leader-board::fourth} to 42",
        "set {_ascending-indices::*} to sorted indices of {_leader-board::*} in ascending order",
        "broadcast \"%{_ascending-indices::*}%\" #result is first, second, third, fourth",
        "set {_descending-indices::*} to sorted indices of {_leader-board::*} in descending order",
        "broadcast \"%{_descending-indices::*}%\" #result is fourth, third, second, first"
      ],
      "since": [
        "2.4 (indices), 2.6.1 (sorting)"
      ],
      "return type": "Text",
      "patterns": [
        "[(the|all [[of] the])] (indexes|indices) of %objects%",
        "%objects%'[s] (indexes|indices)",
        "[sorted] (indices|indexes) of %objects% in (ascending|descending) order",
        "[sorted] %objects%'[s] (indices|indexes) in (ascending|descending) order"
      ]
    },
    {
      "id": "ExprInventory",
      "name": "Inventory",
      "description": [
        "The inventory of a block or player. You can usually omit this expression and can directly add or remove items to/from blocks or players."
      ],
      "examples": [
        "add a plank to the player's inventory",
        "clear the player's inventory",
        "remove 5 wool from the inventory of the clicked block"
      ],
      "since": [
        "1.0"
      ],
      "return type": "Object",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[the] inventor(y|ies) of %inventoryholders%",
        "%inventoryholders%'[s] inventor(y|ies)"
      ]
    },
    {
      "id": "ExprInventoryAction",
      "name": "Inventory Action",
      "description": [
        "The inventory action of an inventory event. Please click on the link for more information."
      ],
      "examples": [
        "inventory action is pickup all"
      ],
      "since": [
        "2.2-dev16"
      ],
      "return type": "Inventory Action",
      "patterns": [
        "[the] inventory action"
      ]
    },
    {
      "id": "ExprInventoryInfo",
      "name": "Inventory Holder/Viewers/Rows/Slots",
      "description": [
        "Gets the amount of rows/slots, viewers and holder of an inventory.NOTE: 'Viewers' expression returns a list of players viewing the inventory. Note that a player is considered to be viewing their own inventory and internal crafting screen even when said inventory is not open."
      ],
      "examples": [
        "event-inventory's amount of rows",
        "holder of player's top inventory",
        "{_inventory}'s viewers"
      ],
      "since": [
        "2.2-dev34, 2.5 (slots)"
      ],
      "return type": "Object",
      "changers": [
        "add",
        "remove",
        "remove all"
      ],
      "patterns": [
        "(holder[s]|viewers|[amount of] rows|[amount of] slots) of %inventories%",
        "%inventories%'[s] (holder[s]|viewers|[amount of] rows|[amount of] slots)"
      ]
    },
    {
      "id": "ExprInventorySlot",
      "name": "Inventory Slot",
      "description": [
        "Represents a slot in an inventory. It can be used to change the item in an inventory too."
      ],
      "examples": [
        "if slot 0 of player is air:",
        "\tset slot 0 of player to 2 stones",
        "\tremove 1 stone from slot 0 of player",
        "\tadd 2 stones to slot 0 of player",
        "\tclear slot 1 of player"
      ],
      "since": [
        "2.2-dev24"
      ],
      "return type": "Inventory Slot",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[the] slot[s] %numbers% of %inventory%",
        "%inventory%'[s] slot[s] %numbers%"
      ]
    },
    {
      "id": "ExprItem",
      "name": "Item",
      "description": [
        "The item involved in an event, e.g. in a drop, dispense, pickup or craft event."
      ],
      "examples": [
        "on dispense:",
        "\titem is a clock",
        "\tset the time to 6:00"
      ],
      "since": [
        "unknown (before 2.1)"
      ],
      "return type": "Item / Material",
      "patterns": [
        "[the] item"
      ]
    },
    {
      "id": "ExprItemAmount",
      "name": "Item Amount",
      "description": [
        "The amount of an item stack."
      ],
      "examples": [
        "send \"You have got %item amount of player's tool% %player's tool% in your hand!\" to player"
      ],
      "since": [
        "2.2-dev24"
      ],
      "return type": "long",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] item[[ ]stack] (amount|size|number) of %slots/itemtypes%",
        "%slots/itemtypes%'[s] item[[ ]stack] (amount|size|number)"
      ]
    },
    {
      "id": "ExprEnchantments",
      "name": "Item Enchantments",
      "description": [
        "All the enchantments an item type has."
      ],
      "examples": [
        "clear enchantments of event-item"
      ],
      "since": [
        "2.2-dev36"
      ],
      "return type": "Enchantment Type",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] enchantments of %itemtypes%",
        "%itemtypes%'[s] enchantments"
      ]
    },
    {
      "id": "ExprItemFrameSlot",
      "name": "Item of an Entity",
      "description": [
        "An item associated with an entity. For dropped item entities, it gets, obviously, the item that was dropped. For item frames, the item inside the frame is returned. For throwable projectiles (snowballs, enderpearls etc.),it gets the displayed item. Other entities do not have items associated with them."
      ],
      "since": [
        "2.2-dev35, 2.2-dev36 (improved), 2.5.2 (throwable projectiles)"
      ],
      "return type": "Inventory Slot",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[the] item of %entities%",
        "%entities%'[s] item"
      ],
      "required plugins": [
        "Minecraft 1.15.2+ (throwable projectiles)"
      ]
    },
    {
      "id": "ExprItemWithCustomModelData",
      "name": "Item with CustomModelData",
      "description": [
        "Get an item with a CustomModelData tag. (Value is an integer between 0 and 99999999)"
      ],
      "examples": [
        "give player a diamond sword with custom model data 2",
        "set slot 1 of inventory of player to wooden hoe with custom model data 357"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Item Type",
      "patterns": [
        "%itemtype% with [custom] model data %number%"
      ],
      "required plugins": [
        "1.14+"
      ]
    },
    {
      "id": "ExprItemWithLore",
      "name": "Item with Lore",
      "description": [
        "Returns the given item type with the specified lore added to it.",
        "If multiple strings are passed, each of them will be a separate line in the lore."
      ],
      "examples": [
        "set {_test} to stone with lore \"line 1\" and \"line 2\"",
        "give {_test} to player"
      ],
      "since": [
        "2.3"
      ],
      "return type": "Item Type",
      "patterns": [
        "%itemtype% with [(a|the)] lore %strings%"
      ]
    },
    {
      "id": "ExprItems",
      "name": "Items",
      "description": [
        "Items or blocks of a specific type, useful for looping."
      ],
      "examples": [
        "loop items of type ore and log:",
        "\tblock contains loop-item",
        "\tmessage \"Theres at least one %loop-item% in this block\"",
        "drop all blocks at the player # drops one of every block at the player"
      ],
      "since": [
        "unknown (before 2.1)"
      ],
      "return type": "Item / Material",
      "patterns": [
        "[(all [[of] the]|the|every)] item(s|[ ]types)",
        "[(all [[of] the]|the)] items of type[s] %itemtypes%",
        "[(all [[of] the]|the|every)] block(s|[ ]types)",
        "[(all [[of] the]|the)] blocks of type[s] %itemtypes%"
      ]
    },
    {
      "id": "ExprItemsIn",
      "name": "Items In",
      "description": [
        "All items in an inventory. Useful for looping or storing in a list variable.",
        "Please note that the positions of the items in the inventory are not saved, only their order is preserved."
      ],
      "examples": [
        "loop all items in the player's inventory:",
        "\tloop-item is enchanted",
        "\tremove loop-item from the player",
        "set {inventory::%uuid of player%::*} to items in the player's inventory"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Inventory Slot",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[(all [[of] the]|the)] items ([with]in|of|contained in|out of) (|inventor(y|ies)) %inventories%"
      ]
    },
    {
      "id": "ExprJoinSplit",
      "name": "Join & Split",
      "description": [
        "Joins several texts with a common delimiter (e.g. \", \"), or splits a text into multiple texts at a given delimiter."
      ],
      "examples": [
        "message \"Online players: %join all players with \"\" | \"\"%\" # %all players% would use the default \"x, y, and z\"",
        "set {_s::*} to the string argument split at \",\""
      ],
      "since": [
        "2.1, 2.5.2 (regex support)"
      ],
      "return type": "Text",
      "patterns": [
        "(concat[enate]|join) %strings% [(with|using|by) [[the] delimiter] %string%]",
        "split %string% (at|using|by) [[the] delimiter] %string%",
        "%string% split (at|using|by) [[the] delimiter] %string%",
        "regex split %string% (at|using|by) [[the] delimiter] %string%",
        "regex %string% split (at|using|by) [[the] delimiter] %string%"
      ]
    },
    {
      "id": "ExprLanguage",
      "name": "Language",
      "description": [
        "Currently selected game language of a player. The value of the language is not defined properly.",
        "The vanilla Minecraft client will use lowercase language / country pairs separated by an underscore, but custom resource packs may use any format they wish."
      ],
      "examples": [
        "message player's current language"
      ],
      "since": [
        "2.3"
      ],
      "return type": "Text",
      "patterns": [
        "[the] [([currently] selected|current)] [game] (language|locale) [setting] of %players%",
        "%players%'[s] [([currently] selected|current)] [game] (language|locale) [setting]"
      ]
    },
    {
      "id": "ExprLastAttacker",
      "name": "Last Attacker",
      "description": [
        "The last block or entity that attacked an entity."
      ],
      "examples": [
        "send \"%last attacker of event-entity%\""
      ],
      "since": [
        "2.5.1"
      ],
      "return type": "Object",
      "patterns": [
        "[the] last attacker of %entity%",
        "%entity%'[s] last attacker"
      ]
    },
    {
      "id": "ExprLastColor",
      "name": "Last Color",
      "description": [
        "The colors used at the end of a string. The colors of the returned string will be formatted with their symbols."
      ],
      "examples": [
        "set {_color} to the last colors of \"<red>hey<blue>yo\""
      ],
      "since": [
        "2.6"
      ],
      "return type": "Text",
      "patterns": [
        "[the] last color[s] of %strings%",
        "%strings%'[s] last color[s]"
      ]
    },
    {
      "id": "ExprLastDamage",
      "name": "Last Damage",
      "description": [
        "The last damage that was done to an entity. Note that changing it doesn't deal more/less damage."
      ],
      "examples": [
        "set last damage of event-entity to 2"
      ],
      "since": [
        "2.5.1"
      ],
      "return type": "Number",
      "changers": [
        "add",
        "set",
        "remove"
      ],
      "patterns": [
        "[the] last damage of %livingentities%",
        "%livingentities%'[s] last damage"
      ]
    },
    {
      "id": "ExprLastDamageCause",
      "name": "Last Damage Cause",
      "description": [
        "Cause of last damage done to an entity"
      ],
      "examples": [
        "set last damage cause of event-entity to fire tick"
      ],
      "since": [
        "2.2-Fixes-V10"
      ],
      "return type": "Damage Cause",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] last damage (cause|reason|type) of %livingentities%",
        "%livingentities%'[s] last damage (cause|reason|type)"
      ]
    },
    {
      "id": "ExprLastLoadedServerIcon",
      "name": "Last Loaded Server Icon",
      "description": [
        "Returns the last loaded server icon with the load server icon effect."
      ],
      "examples": [
        "set {server-icon} to the last loaded server icon"
      ],
      "since": [
        "2.3"
      ],
      "return type": "Server Icon",
      "patterns": [
        "[the] [last[ly]] loaded server icon"
      ],
      "required plugins": [
        "Paper 1.12.2 or newer"
      ]
    },
    {
      "id": "ExprLastResourcePackResponse",
      "name": "Last Resource Pack Response",
      "description": [
        "Returns the last resource pack response received from a player."
      ],
      "examples": [
        "if player's last resource pack response is deny or download fail:"
      ],
      "since": [
        "2.4"
      ],
      "return type": "Resource Pack State",
      "patterns": [
        "[the] [last] resource pack response[s] of %players%",
        "%players%'[s] [last] resource pack response[s]"
      ],
      "required plugins": [
        "Paper 1.9 or newer"
      ]
    },
    {
      "id": "ExprLastSpawnedEntity",
      "name": "Last Spawned Entity",
      "description": [
        "Holds the entity that was spawned most recently with the spawn effect, drop with the drop effect or shot with the shoot effect. Please note that even though you can spawn multiple mobs simultaneously (e.g. with 'spawn 5 creepers'), only the last spawned mob is saved and can be used. If you spawn an entity, shoot a projectile and drop an item you can however access all them together."
      ],
      "examples": [
        "spawn a priest",
        "set {healer::%spawned priest%} to true",
        "shoot an arrow from the last spawned entity",
        "ignite the shot projectile",
        "drop a diamond sword",
        "push last dropped item upwards"
      ],
      "since": [
        "1.3 (spawned entity), 2.0 (shot entity), 2.2-dev26 (dropped item)"
      ],
      "return type": "Entity",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "[the] [last[ly]] (spawned|shot) %*entitydata%",
        "[the] [last[ly]] dropped (item)"
      ]
    },
    {
      "id": "ExprLastLoginTime",
      "name": "Last/First Login Time",
      "description": [
        "When a player last/first logged in the server. 'last login' requires paper to get the last login, otherwise it will get the last time they were seen on the server."
      ],
      "examples": [
        "command /onlinefor:",
        "\ttrigger:",
        "\t\tsend \"You have been online for %difference between player's last login and now%.\"",
        "\t\tsend \"You first joined the server %difference between player's first login and now% ago.\""
      ],
      "since": [
        "2.5"
      ],
      "return type": "Date",
      "patterns": [
        "[the] (last|first) login of %offlineplayers%",
        "%offlineplayers%'[s] (last|first) login"
      ]
    },
    {
      "id": "ExprLeashHolder",
      "name": "Leash Holder",
      "description": [
        "The leash holder of a living entity."
      ],
      "examples": [
        "set {_example} to the leash holder of the target mob"
      ],
      "since": [
        "2.3"
      ],
      "return type": "Entity",
      "changers": [
        "add",
        "remove",
        "remove all"
      ],
      "patterns": [
        "[the] leash holder[s] of %livingentities%",
        "%livingentities%'[s] leash holder[s]"
      ]
    },
    {
      "id": "ExprLength",
      "name": "Length",
      "description": [
        "The length of a text, in number of characters."
      ],
      "examples": [
        "set {_l} to length of the string argument"
      ],
      "since": [
        "2.1"
      ],
      "return type": "long",
      "patterns": [
        "[the] length of %strings%",
        "%strings%'[s] length"
      ]
    },
    {
      "id": "ExprLevel",
      "name": "Level",
      "description": [
        "The level of a player."
      ],
      "examples": [
        "reduce the victim's level by 1",
        "set the player's level to 0"
      ],
      "since": [
        "unknown (before 2.1)"
      ],
      "return type": "long",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] level of %players%",
        "%players%'[s] level"
      ]
    },
    {
      "id": "ExprLevelProgress",
      "name": "Level Progress",
      "description": [
        "The player's progress in reaching the next level, this represents the experience bar in the game. Please note that this value is between 0 and 1 (e.g. 0.5 = half experience bar).",
        "Changing this value can cause the player's level to change if the resulting level progess is negative or larger than 1, e.g. increase the player's level progress by 0.5 will make the player gain a level if their progress was more than 50%."
      ],
      "examples": [
        "# use the exp bar as mana",
        "on rightclick with a blaze rod:",
        "\tplayer's level progress is larger than 0.2",
        "\tshoot a fireball from the player",
        "\treduce the player's level progress by 0.2",
        "every 2 seconds:",
        "\tloop all players:",
        "\t\tlevel progress of loop-player is smaller than 0.9:",
        "\t\t\tincrease level progress of the loop-player by 0.1",
        "\t\telse:",
        "\t\t\tset level progress of the loop-player to 0.99",
        "on xp spawn:",
        "\tcancel event"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Number",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] level progress of %players%",
        "%players%'[s] level progress"
      ]
    },
    {
      "id": "ExprLightLevel",
      "name": "Light Level",
      "description": [
        "Gets the light level at a certain location which ranges from 0 to 15.",
        "It can be separated into sunlight (15 = direct sunlight, 1-14 = indirect) and block light (torches, glowstone, etc.). The total light level of a block is the maximum of the two different light types."
      ],
      "examples": [
        "# set vampire players standing in bright sunlight on fire",
        "every 5 seconds:",
        "\tloop all players:",
        "\t\t{vampire::%uuid of loop-player%} is true",
        "\t\tsunlight level at the loop-player is greater than 10",
        "\t\tignite the loop-player for 5 seconds"
      ],
      "since": [
        "1.3.4"
      ],
      "return type": "byte",
      "patterns": [
        "[(sky|sun|block)[ ]]light[ ]level [(of|%direction%) %location%]"
      ]
    },
    {
      "id": "ExprLocationOf",
      "name": "Location",
      "description": [
        "The location of a block or entity. This not only represents the x, y and z coordinates of the location but also includes the world and the direction an entity is looking (e.g. teleporting to a saved location will make the teleported entity face the same saved direction every time).",
        "Please note that the location of an entity is at it's feet, use head location to get the location of the head."
      ],
      "examples": [
        "set {home::%uuid of player%} to the location of the player",
        "message \"You home was set to %player's location% in %player's world%.\""
      ],
      "since": [
        ""
      ],
      "return type": "Location",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "(location|position) of %location%",
        "%location%'[s] (location|position)"
      ]
    },
    {
      "id": "ExprLocation",
      "name": "Location",
      "description": [
        "The location where an event happened (e.g. at an entity or block), or a location relative to another (e.g. 1 meter above another location)."
      ],
      "examples": [
        "drop 5 apples at the event-location # exactly the same as writing 'drop 5 apples'",
        "set {_loc} to the location 1 meter above the player"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Location",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "[the] [event-](location|position)",
        "[the] (location|position) %directions% [%location%]"
      ]
    },
    {
      "id": "ExprLocationAt",
      "name": "Location At",
      "description": [
        "Allows to create a location from three coordinates and a world."
      ],
      "examples": [
        "set {_loc} to the location at arg-1, arg-2, arg-3 of the world arg-4",
        "distance between the player and the location (0, 0, 0) is less than 200"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Location",
      "patterns": [
        "[the] (location|position) [at] [(][x[ ][=[ ]]]%number%, [y[ ][=[ ]]]%number%, [and] [z[ ][=[ ]]]%number%[)] [[(in|of) [[the] world]] %world%]"
      ]
    },
    {
      "id": "ExprLoopValue",
      "name": "Loop value",
      "description": [
        "The currently looped value."
      ],
      "examples": [
        "# countdown:",
        "loop 10 times:",
        "\tmessage \"%11 - loop-number%\"",
        "\twait a second",
        "# generate a 10x10 floor made of randomly coloured wool below the player:",
        "loop blocks from the block below the player to the block 10 east of the block below the player:",
        "\tloop blocks from the loop-block to the block 10 north of the loop-block:",
        "\t\tset loop-block-2 to any wool"
      ],
      "since": [
        "1.0"
      ],
      "return type": "Object",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "[the] loop-<.+>"
      ]
    },
    {
      "id": "ExprLore",
      "name": "Lore",
      "description": [
        "An item's lore."
      ],
      "examples": [
        "set the 1st line of the item's lore to \"&lt;orange&gt;Excalibur 2.0\""
      ],
      "since": [
        "2.1"
      ],
      "return type": "Text",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "[the] lore of %itemstack/itemtype%",
        "%itemstack/itemtype%'[s] lore",
        "[the] line %number% of [the] lore of %itemstack/itemtype%",
        "[the] line %number% of %itemstack/itemtype%'[s] lore",
        "[the] %number%(st|nd|rd|th) line of [the] lore of %itemstack/itemtype%",
        "[the] %number%(st|nd|rd|th) line of %itemstack/itemtype%'[s] lore"
      ]
    },
    {
      "id": "ExprMOTD",
      "name": "MOTD",
      "description": [
        "The message of the day in the server list. This can be changed in a server list ping event only.",
        "'default MOTD' returns the default MOTD always and can't be changed."
      ],
      "examples": [
        "on server list ping:",
        "\tset the motd to \"Join now!\""
      ],
      "since": [
        "2.3"
      ],
      "return type": "Text",
      "changers": [
        "set",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] [(default)|(shown|displayed)] (MOTD|message of [the] day)"
      ]
    },
    {
      "id": "ExprMaxDurability",
      "name": "Max Durability",
      "description": [
        "The maximum durability of an item."
      ],
      "examples": [
        "maximum durability of diamond sword",
        "if max durability of player's tool is not 0: # Item is damageable"
      ],
      "since": [
        "2.5"
      ],
      "return type": "long",
      "patterns": [
        "[the] max[imum] durabilit(y|ies) of %itemstacks/slots%",
        "%itemstacks/slots%'[s] max[imum] durabilit(y|ies)"
      ]
    },
    {
      "id": "ExprMaxHealth",
      "name": "Max Health",
      "description": [
        "The maximum health of an entity, e.g. 10 for a player."
      ],
      "examples": [
        "on join:",
        "\tset the maximum health of the player to 100",
        "spawn a giant",
        "set the last spawned entity's max health to 1000"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Number",
      "changers": [
        "add",
        "set",
        "remove",
        "reset"
      ],
      "patterns": [
        "[the] max[imum] health of %livingentities%",
        "%livingentities%'[s] max[imum] health"
      ]
    },
    {
      "id": "ExprMaxMinecartSpeed",
      "name": "Max Minecart Speed",
      "description": [
        "The maximum speed of a minecart."
      ],
      "examples": [
        "on right click on minecart:",
        "\tset max minecart speed of event-entity to 1"
      ],
      "since": [
        "2.5.1"
      ],
      "return type": "Number",
      "changers": [
        "add",
        "set",
        "remove",
        "reset"
      ],
      "patterns": [
        "[the] max[imum] minecart (speed|velocity) of %entities%",
        "%entities%'[s] max[imum] minecart (speed|velocity)"
      ]
    },
    {
      "id": "ExprMaxPlayers",
      "name": "Max Players",
      "description": [
        "The count of max players. This can be changed in a server list ping event only.",
        "'real max players' returns the real count of max players of the server always and can't be changed."
      ],
      "examples": [
        "on server list ping:",
        "\tset the max players count to (online players count + 1)"
      ],
      "since": [
        "2.3"
      ],
      "return type": "long",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] [((real|default)|(fake|shown|displayed))] max[imum] player[s] [(count|amount|number|size)]",
        "[the] [((real|default)|(fake|shown|displayed))] max[imum] (count|amount|number|size) of players"
      ]
    },
    {
      "id": "ExprMaxStack",
      "name": "Maximum Stack Size",
      "description": [
        "The maximum stack size of the specified material, e.g. 64 for torches, 16 for buckets, and 1 for swords."
      ],
      "examples": [
        "send \"You can only pick up %max stack size of player's tool% of %type of (player's tool)%\" to player"
      ],
      "since": [
        "2.1"
      ],
      "return type": "long",
      "patterns": [
        "[the] max[imum] stack[[ ]size] of %itemtype%",
        "%itemtype%'[s] max[imum] stack[[ ]size]"
      ]
    },
    {
      "id": "ExprMe",
      "name": "Me",
      "description": [
        "A 'me' expression that can be used in players' effect commands only."
      ],
      "examples": [
        "!heal me",
        "!kick myself",
        "!give a diamond axe to me"
      ],
      "since": [
        "2.1.1"
      ],
      "return type": "Player",
      "changers": [
        "add",
        "remove",
        "remove all"
      ],
      "patterns": [
        "me",
        "my[self]"
      ]
    },
    {
      "id": "ExprMendingRepairAmount",
      "name": "Mending Repair Amount",
      "description": [
        "The number of durability points an item is to be repaired in a mending event.",
        " Modifying the repair amount will affect how much experience is given to the player after mending."
      ],
      "examples": [
        "on item mend:",
        "\tset the mending repair amount to 100"
      ],
      "since": [
        "2.5.1"
      ],
      "return type": "long",
      "changers": [
        "add",
        "set",
        "remove",
        "reset"
      ],
      "patterns": [
        "[the] [mending] repair amount"
      ]
    },
    {
      "id": "ExprMessage",
      "name": "Message",
      "description": [
        "The (chat) message of a chat event, the join message of a join event, the quit message of a quit event, or the death message on a death event. This expression is mostly useful for being changed."
      ],
      "examples": [
        "on chat:",
        "\tplayer has permission \"admin\"",
        "\tset message to \"&c%message%\"",
        "",
        "on first join:",
        "\tset join message to \"Welcome %player% to our awesome server!\"",
        "",
        "on join:",
        "\tplayer has played before",
        "\tset join message to \"Welcome back, %player%!\"",
        "",
        "on quit:",
        "\tset quit message to \"%player% left this awesome server!\"",
        "",
        "on death:",
        "\tset the death message to \"%player% died!\""
      ],
      "since": [
        "1.4.6 (chat message), 1.4.9 (join & quit messages), 2.0 (death message)"
      ],
      "return type": "Text",
      "changers": [
        "set"
      ],
      "patterns": [
        "[the] [chat( |-)]message",
        "[the] (join|log[ ]in)( |-)message",
        "[the] (quit|leave|log[ ]out|kick)( |-)message",
        "[the] death( |-)message"
      ]
    },
    {
      "id": "ExprMetadata",
      "name": "Metadata",
      "description": [
        "Metadata is a way to store temporary data on entities, blocks and more that disappears after a server restart."
      ],
      "examples": [
        "set metadata value \"healer\" of player to true",
        "broadcast \"%metadata value \"\"healer\"\" of player%\"",
        "clear metadata value \"healer\" of player"
      ],
      "since": [
        "2.2-dev36"
      ],
      "return type": "Object",
      "changers": [
        "set",
        "delete"
      ],
      "patterns": [
        "metadata [(value|tag)[s]] %strings% of %metadataholders%",
        "%metadataholders%'[s] metadata [(value|tag)[s]] %string%"
      ]
    },
    {
      "id": "ExprMiddleOfLocation",
      "name": "Middle of Location",
      "description": [
        "Returns the middle/center of a location. In other words, returns the middle of the X, Z coordinates and the floor value of the Y coordinate of a location."
      ],
      "examples": [
        "command /stuck:",
        "\texecutable by: players",
        "\ttrigger:",
        "\t\tteleport player to the center of player's location",
        "\t\tsend \"You're no longer stuck.\""
      ],
      "since": [
        "2.6.1"
      ],
      "return type": "Location",
      "patterns": [
        "[the] (middle|center) [point] of %location%",
        "%location%'[s] (middle|center) [point]"
      ]
    },
    {
      "id": "ExprMinecartDerailedFlyingVelocity",
      "name": "Minecart Derailed / Flying Velocity",
      "description": [
        "The velocity of a minecart as soon as it has been derailed or as soon as it starts flying."
      ],
      "examples": [
        "on right click on minecart:",
        "\tset derailed velocity of event-entity to vector 2, 10, 2"
      ],
      "since": [
        "2.5.1"
      ],
      "return type": "Vector",
      "changers": [
        "add",
        "set",
        "remove"
      ],
      "patterns": [
        "[the] [minecart] (derailed|flying) velocity of %entities%",
        "%entities%'[s] [minecart] (derailed|flying) velocity"
      ]
    },
    {
      "id": "ExprBalance",
      "name": "Money",
      "description": [
        "How much virtual money a player has (can be changed). This expression requires Vault and a compatible economy plugin to be installed."
      ],
      "examples": [
        "message \"You have %player's money%\" # the currency name will be added automatically",
        "remove 20$ from the player's balance # replace '$' by whatever currency you use",
        "add 200 to the player's account # or omit the currency alltogether"
      ],
      "since": [
        "2.0, 2.5 (offline player support)"
      ],
      "return type": "Money",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] (money|balance|[bank] account) of %offlineplayers%",
        "%offlineplayers%'[s] (money|balance|[bank] account)"
      ],
      "required plugins": [
        "Vault",
        "a permission plugin that supports Vault"
      ]
    },
    {
      "id": "ExprPushedBlocks",
      "name": "Moved blocks",
      "description": [
        "Blocks which are moved in a piston event. Cannot be used outside of piston events."
      ],
      "examples": [
        "the moved blocks"
      ],
      "since": [
        "2.2-dev27"
      ],
      "return type": "Block",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[the] moved blocks"
      ]
    },
    {
      "id": "ExprName",
      "name": "Name / Display Name / Tab List Name",
      "description": [
        "Represents the Minecraft account, display or tab list name of a player, or the custom name of an item, entity, block, inventory, or gamerule.",
        "",
        "<ul>",
        "\t<strong>Players",
        "\t\t<ul>",
        "\t\t\t<strong>Name: The Minecraft account name of the player. Can't be changed, but 'display name' can be changed.</li>",
        "\t\t\t<strong>Display Name: The name of the player that is displayed in messages. This name can be changed freely and can include colour codes, and is shared among all plugins (e.g. chat plugins will use the display name).</li>",
        "\t\t</ul>",
        "\t</li>",
        "\t<strong>Entities",
        "\t\t<ul>",
        "\t\t\t<strong>Name: The custom name of the entity. Can be changed. But for living entities, the players will have to target the entity to see its name tag. For non-living entities, the name will not be visible at all. To prevent this, use 'display name'.</li>",
        "\t\t\t<strong>Display Name: The custom name of the entity. Can be changed, which will also enable custom name visibility of the entity so name tag of the entity will be visible always.</li>",
        "\t\t</ul>",
        "\t</li>",
        "\t<strong>Items",
        "\t\t<ul>",
        "\t\t\t<strong>Name and Display Name: The custom name of the item (not the Minecraft locale name). Can be changed.</li>",
        "\t\t</ul>",
        "\t</li>",
        "\t<strong>Inventories",
        "\t\t<ul>",
        "\t\t\t<strong>Name and Display Name: The name/title of the inventory. Changing name of an inventory means opening the same inventory with the same contents but with a different name to its current viewers.</li>",
        "\t\t</ul>",
        "\t</li>",
        "\t<strong>Gamerules (1.13+)",
        "\t\t<ul>",
        "\t\t\t<strong>Name: The name of the gamerule. Cannot be changed.</li>",
        "\t\t</ul>",
        "\t</li>",
        "</ul>"
      ],
      "examples": [
        "on join:",
        "\tplayer has permission \"name.red\"",
        "\tset the player's display name to \"&lt;red&gt;[admin] &lt;gold&gt;%name of player%\"",
        "\tset the player's tab list name to \"&lt;green&gt;%player's name%\"",
        "set the name of the player's tool to \"Legendary Sword of Awesomeness\""
      ],
      "since": [
        "before 2.1, 2.2-dev20 (inventory name), 2.4 (non-living entity support, changeable inventory name)"
      ],
      "return type": "Text",
      "changers": [
        "set",
        "reset"
      ],
      "patterns": [
        "[the] (name[s]|(display|nick|chat|custom)[ ]name[s]) of %offlineplayers/entities/blocks/itemtypes/inventories/slots/gamerules%",
        "%offlineplayers/entities/blocks/itemtypes/inventories/slots/gamerules%'[s] (name[s]|(display|nick|chat|custom)[ ]name[s])",
        "[the] ((player|tab)[ ]list name[s]) of %players%",
        "%players%'[s] ((player|tab)[ ]list name[s])"
      ]
    },
    {
      "id": "ExprNamed",
      "name": "Named Item/Inventory",
      "description": [
        "Directly names an item/inventory, useful for defining a named item/inventory in a script. If you want to (re)name existing items/inventories you can either use this expression or use set <a href='#ExprName'>name of &lt;item/inventory&gt; to &lt;text&gt;</code>."
      ],
      "examples": [
        "give a diamond sword of sharpness 100 named \"&lt;gold&gt;Excalibur\" to the player",
        "set tool of player to the player's tool named \"&lt;gold&gt;Wand\"",
        "set the name of the player's tool to \"&lt;gold&gt;Wand\"",
        "open hopper inventory named \"Magic Hopper\" to player"
      ],
      "since": [
        "2.0, 2.2-dev34 (inventories)"
      ],
      "return type": "Object",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "%itemtype/inventorytype% (named|with name[s]) %string%"
      ]
    },
    {
      "id": "LitNewLine",
      "name": "New Line",
      "description": [
        "Returns a line break separator."
      ],
      "examples": [
        "send \"Hello%nl%Goodbye!\" to player"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Text",
      "patterns": [
        "n[ew]l[ine]",
        "line[ ]break"
      ]
    },
    {
      "id": "ExprNoDamageTicks",
      "name": "No Damage Ticks",
      "description": [
        "The number of ticks that an entity is invulnerable to damage for."
      ],
      "examples": [
        "on damage:",
        "\tset victim's invulnerability ticks to 20 #Victim will not take damage for the next second"
      ],
      "since": [
        "2.5"
      ],
      "return type": "long",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] (invulnerability|no damage) tick[s] of %livingentities%",
        "%livingentities%'[s] (invulnerability|no damage) tick[s]"
      ]
    },
    {
      "id": "ExprNow",
      "name": "Now",
      "description": [
        "The current system time of the server. Use time to get the Minecraft time of a world."
      ],
      "examples": [
        "broadcast \"Current server time: %now%\""
      ],
      "since": [
        "1.4"
      ],
      "return type": "Date",
      "patterns": [
        "now"
      ]
    },
    {
      "id": "ExprNumberOfCharacters",
      "name": "Number of Characters",
      "description": [
        "The number of uppercase, lowercase, or digit characters in a string."
      ],
      "examples": [
        "#Simple Chat Filter",
        "on chat:",
        "\tif number of uppercase chars in message / length of message > 0.5",
        "\t\tcancel event",
        "\t\tsend \"&lt;red&gt;Your message has to many caps!\" to player"
      ],
      "since": [
        "2.5"
      ],
      "return type": "long",
      "patterns": [
        "number of upper[ ]case char(acters|s) in %string%",
        "number of lower[ ]case char(acters|s) in %string%",
        "number of digit char(acters|s) in %string%"
      ]
    },
    {
      "id": "ExprNumbers",
      "name": "Numbers",
      "description": [
        "All numbers between two given numbers, useful for looping.",
        "Use 'numbers' if your start is not an integer and you want to keep the fractional part of the start number constant, or use 'integers' if you only want to loop integers.",
        "You may also use 'decimals' if you want to use the decimal precision of the start number.",
        "You may want to use the 'times' expression instead, for instance 'loop 5 times:'"
      ],
      "examples": [
        "loop numbers from 2.5 to 5.5: # loops 2.5, 3.5, 4.5, 5.5",
        "loop integers from 2.9 to 5.1: # same as '3 to 5', i.e. loops 3, 4, 5",
        "loop decimals from 3.94 to 4: # loops 3.94, 3.95, 3.96, 3.97, 3.98, 3.99, 4"
      ],
      "since": [
        "1.4.6 (integers & numbers), 2.5.1 (decimals)"
      ],
      "return type": "Number",
      "patterns": [
        "[(all [[of] the]|the)] (numbers|integers|decimals) (between|from) %number% (and|to) %number%"
      ]
    },
    {
      "id": "ExprOfflinePlayers",
      "name": "Offline players",
      "description": [
        "All players that have ever joined the server. This includes the players currently online."
      ],
      "examples": [
        "send \"Size of all players who have joined the server: %size of all offline players%\""
      ],
      "since": [
        "2.2-dev35"
      ],
      "return type": "Offline Player",
      "patterns": [
        "[(all [[of] the]|the)] offline[ ]players"
      ]
    },
    {
      "id": "ExprOnlinePlayersCount",
      "name": "Online Player Count",
      "description": [
        "The amount of online players. This can be changed in a",
        "server list ping event only to show fake online player amount.",
        "'real online player count' always returns the real count of online players and can't be changed.",
        "",
        "Fake online player count requires PaperSpigot 1.12.2+."
      ],
      "examples": [
        "on server list ping:",
        "\t# This will make the max players count 5 if there are 4 players online.",
        "\tset the fake max players count to (online players count + 1)"
      ],
      "since": [
        "2.3"
      ],
      "return type": "long",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] [((real|default)|(fake|shown|displayed))] [online] player (count|amount|number)",
        "[the] [((real|default)|(fake|shown|displayed))] (count|amount|number|size) of online players"
      ]
    },
    {
      "id": "ExprOpenedInventory",
      "name": "Opened Inventory",
      "description": [
        "Return the currently opened inventory of a player.",
        "If no inventory is open, it returns the own player's crafting inventory."
      ],
      "examples": [
        "set slot 1 of player's current inventory to diamond sword"
      ],
      "since": [
        "2.2-dev24, 2.2-dev35 (Just 'current inventory' works in player events)"
      ],
      "return type": "Inventory",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[the] (current|open|top) inventory [of %players%]",
        "%players%'[s] (current|open|top) inventory"
      ]
    },
    {
      "id": "ExprParse",
      "name": "Parse",
      "description": [
        "Parses text as a given type, or as a given pattern.",
        "This expression can be used in two different ways: One which parses the entire text as a single instance of a type, e.g. as a number, and one that parses the text according to a pattern.",
        "If the given text could not be parsed, this expression will return nothing and the parse error will be set if some information is available.",
        "Some notes about parsing with a pattern:",
        "- The pattern must be a Skript pattern, e.g. percent signs are used to define where to parse which types, e.g. put a %number% or %items% in the pattern if you expect a number or some items there.",
        "- You have to save the expression's value in a list variable, e.g. set {parsed::*} to message parsed as \"...\".",
        "- The list variable will contain the parsed values from all %types% in the pattern in order. If a type was plural, e.g. %items%, the variable's value at the respective index will be a list variable, e.g. the values will be stored in {parsed::1::*}, not {parsed::1}."
      ],
      "examples": [
        "set {var} to line 1 parsed as number",
        "on chat:",
        "\tset {var::*} to message parsed as \"buying %items% for %money%\"",
        "\tif parse error is set:",
        "\t\tmessage \"%parse error%\"",
        "\telse if {var::*} is set:",
        "\t\tcancel event",
        "\t\tremove {var::2} from the player's balance",
        "\t\tgive {var::1::*} to the player"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Object",
      "patterns": [
        "%string% parsed as (%*classinfo%|\"<.*>\")"
      ]
    },
    {
      "id": "ExprParseError",
      "name": "Parse Error",
      "description": [
        "The error which caused the last parse operation to fail, which might not be set if a pattern was used and the pattern didn't match the provided text at all."
      ],
      "examples": [
        "set {var} to line 1 parsed as integer",
        "if {var} is not set:",
        "\tparse error is set:",
        "\t\tmessage \"&lt;red&gt;Line 1 is invalid: %last parse error%\"",
        "\telse:",
        "\t\tmessage \"&lt;red&gt;Please put an integer on line 1!\""
      ],
      "since": [
        "2.0"
      ],
      "return type": "Text",
      "patterns": [
        "[the] [last] [parse] error"
      ]
    },
    {
      "id": "ExprPassenger",
      "name": "Passenger",
      "description": [
        "The passenger of a vehicle, or the rider of a mob.",
        "For 1.11.2 and above, it returns a list of passengers and you can use all changers in it.",
        "See also: vehicle"
      ],
      "examples": [
        "#for 1.11 and lower",
        "passenger of the minecart is a creeper or a cow",
        "the saddled pig's passenger is a player",
        "#for 1.11.2+",
        "passengers of the minecart contains a creeper or a cow",
        "the boat's passenger contains a pig",
        "add a cow and a zombie to passengers of last spawned boat",
        "set passengers of player's vehicle to a pig and a horse",
        "remove all pigs from player's vehicle",
        "clear passengers of boat"
      ],
      "since": [
        "2.0, 2.2-dev26 (Multiple passengers for 1.11.2+)"
      ],
      "return type": "Entity",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] passenger[s] of %entities%",
        "%entities%'[s] passenger[s]"
      ]
    },
    {
      "id": "ExprPing",
      "name": "Ping",
      "description": [
        "Pings of players, as Minecraft server knows them. Note that they will almost certainly be different from the ones you'd get from using ICMP echo requests. This expression is only supported on some server software (PaperSpigot)."
      ],
      "examples": [
        "command /ping <player=%player%>:",
        "\ttrigger:",
        "\t\tsend \"%arg-1%'s ping is %arg-1's ping%\""
      ],
      "since": [
        "2.2-dev36"
      ],
      "return type": "long",
      "patterns": [
        "[the] ping of %players%",
        "%players%'[s] ping"
      ]
    },
    {
      "id": "ExprPlain",
      "name": "Plain Item",
      "description": [
        "A plain item is an item with no modifications. It can be used to convert items to their default state or to match with other default items."
      ],
      "examples": [
        "if the player's tool is a plain diamond: # check if player's tool has no modifications",
        "\tsend \"You are holding a plain diamond!\""
      ],
      "since": [
        "2.6"
      ],
      "return type": "Item Type",
      "patterns": [
        "[a[n]] (plain|unmodified) %itemtype%"
      ]
    },
    {
      "id": "ExprPlayerlistHeaderFooter",
      "name": "Player List Header and Footer",
      "description": [
        "The message above and below the player list in the tab menu."
      ],
      "examples": [
        "set all players' tab list header to \"Welcome to the Server!\"",
        "send \"%the player's tab list header%\" to player",
        "reset all players' tab list header"
      ],
      "since": [
        "2.4"
      ],
      "return type": "Text",
      "changers": [
        "set",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] (player|tab)[ ]list (header|footer) [(text|message)] of %players%",
        "%players%'[s] (player|tab)[ ]list (header|footer) [(text|message)]"
      ],
      "required plugins": [
        "Minecraft 1.13 or newer"
      ]
    },
    {
      "id": "ExprPlayerProtocolVersion",
      "name": "Player Protocol Version",
      "description": [
        "Player's protocol version. For more information and list of protocol versions visit wiki.vg."
      ],
      "examples": [
        "command /protocolversion &ltplayer&gt:",
        "\ttrigger:",
        "\t\tsend \"Protocol version of %arg-1%: %protocol version of arg-1%\""
      ],
      "since": [
        "2.6.2"
      ],
      "return type": "integer",
      "patterns": [
        "[the] protocol version of %players%",
        "%players%'[s] protocol version"
      ],
      "required plugins": [
        "Paper 1.12.2 or newer"
      ]
    },
    {
      "id": "ExprSkull",
      "name": "Player Skull",
      "description": [
        "Gets a skull item representing a player. Skulls for other entities are provided by the aliases."
      ],
      "examples": [
        "give the victim's skull to the attacker",
        "set the block at the entity to the entity's skull"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Item Type",
      "patterns": [
        "[the] (head|skull) of %offlineplayers%",
        "%offlineplayers%'[s] (head|skull)"
      ]
    },
    {
      "id": "ExprPlayerWeather",
      "name": "Player Weather",
      "description": [
        "The weather for a player."
      ],
      "examples": [
        "set weather of arg-player to rainy",
        "reset player's weather",
        "if arg-player's weather is rainy"
      ],
      "since": [
        "2.2-dev34"
      ],
      "return type": "Weather Type",
      "changers": [
        "set",
        "reset"
      ],
      "patterns": [
        "[the] [(client|custom)] weather of %players%",
        "%players%'[s] [(client|custom)] weather"
      ]
    },
    {
      "id": "ExprPortal",
      "name": "Portal",
      "description": [
        "The blocks associated with a portal in the portal creation event."
      ],
      "examples": [
        "on portal creation:",
        "\tloop portal blocks:",
        "\t\tbroadcast \"%loop-block% is part of a portal!\""
      ],
      "since": [
        "2.4"
      ],
      "return type": "Block",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[the] portal['s] blocks",
        "[the] blocks of [the] portal"
      ]
    },
    {
      "id": "ExprPotionEffect",
      "name": "Potion Effect",
      "description": [
        "Create a new potion effect to apply to an entity or item type. Do note that when applying potion effects ",
        "to tipped arrows/lingering potions, Minecraft reduces the timespan."
      ],
      "examples": [
        "set {_p} to potion effect of speed of tier 1 without particles for 10 minutes",
        "add {_p} to potion effects of player's tool",
        "add {_p} to potion effects of target entity",
        "add potion effect of speed 1 to potion effects of player"
      ],
      "since": [
        "2.5.2"
      ],
      "return type": "Potion Effect",
      "patterns": [
        "[new] potion effect of %potioneffecttype% [potion] [[[of] tier] %number%] [(without particles)] [for %timespan%]",
        "[new] ambient potion effect of %potioneffecttype% [potion] [[[of] tier] %number%] [(without particles)] [for %timespan%]"
      ]
    },
    {
      "id": "ExprPotionEffects",
      "name": "Potion Effects",
      "description": [
        "Represents the active potion effects of entities and itemtypes.",
        "You can clear all potion effects of an entity/itemtype and add/remove a potion effect/type to/from an entity/itemtype.",
        "Do note you will not be able to clear the base potion effects of a potion item. In that case, just set the item to a water bottle.",
        "When adding a potion effect type (rather than a potion effect), it will default to 15 seconds with tier 1."
      ],
      "examples": [
        "set {_p::*} to active potion effects of player",
        "clear all the potion effects of player",
        "clear all the potion effects of player's tool",
        "add potion effects of player to potion effects of player's tool",
        "add speed to potion effects of target entity",
        "remove speed and night vision from potion effects of player"
      ],
      "since": [
        "2.5.2"
      ],
      "return type": "Potion Effect",
      "changers": [
        "add",
        "remove",
        "delete"
      ],
      "patterns": [
        "[the] [(all [[of] the]|the)] [active] potion effects of %livingentities/itemtypes%",
        "%livingentities/itemtypes%'[s] [(all [[of] the]|the)] [active] potion effects"
      ]
    },
    {
      "id": "ExprPrefixSuffix",
      "name": "Prefix/Suffix",
      "description": [
        "The prefix or suffix as defined in the server's chat plugin."
      ],
      "examples": [
        "on chat:",
        "\tcancel event",
        "\tbroadcast \"%player's prefix%%player's display name%%player's suffix%: %message%\" to the player's world",
        "set the player's prefix to \"[&lt;red&gt;Admin<reset>] \""
      ],
      "since": [
        "2.0"
      ],
      "return type": "Text",
      "changers": [
        "set"
      ],
      "patterns": [
        "[the] [chat] (prefix|suffix) of %players%",
        "%players%'[s] [chat] (prefix|suffix)"
      ]
    },
    {
      "id": "ExprProjectileBounceState",
      "name": "Projectile Bounce State",
      "description": [
        "A projectile's bounce state."
      ],
      "examples": [
        "on projectile hit:",
        "\tset projectile bounce mode of event-projectile to true"
      ],
      "since": [
        "2.5.1"
      ],
      "return type": "Boolean",
      "changers": [
        "set"
      ],
      "patterns": [
        "[the] projectile bounce (state|ability|mode) of %projectiles%",
        "%projectiles%'[s] projectile bounce (state|ability|mode)"
      ]
    },
    {
      "id": "ExprProjectileCriticalState",
      "name": "Projectile Critical State",
      "description": [
        "A projectile's critical state. The only currently accepted projectiles are arrows and tridents."
      ],
      "examples": [
        "on shoot:",
        "\tevent-projectile is an arrow",
        "\tset projectile critical mode of event-projectile to true"
      ],
      "since": [
        "2.5.1"
      ],
      "return type": "Boolean",
      "changers": [
        "set"
      ],
      "patterns": [
        "[the] (projectile|arrow) critical (state|ability|mode) of %projectiles%",
        "%projectiles%'[s] (projectile|arrow) critical (state|ability|mode)"
      ]
    },
    {
      "id": "ExprProtocolVersion",
      "name": "Protocol Version",
      "description": [
        "The protocol version that will be sent as the protocol version of the server in a server list ping event. For more information and list of protocol versions visit wiki.vg.",
        "If this protocol version doesn't match with the protocol version of the client, the client will see the version string.",
        "But please note that, this expression has no visual effect over the version string. For example if the server uses PaperSpigot 1.12.2, and you make the protocol version 107 (1.9),",
        "the version string will not be \"Paper 1.9\", it will still be \"Paper 1.12.2\".",
        "But then you can customize the version string as you wish.",
        "Also if the protocol version of the player is higher than protocol version of the server, it will say",
        "\"Server out of date!\", and if vice-versa \"Client out of date!\" when you hover on the ping bars.",
        "",
        "This can be set in a server list ping event only",
        "(increase and decrease effects cannot be used because that wouldn't make sense)."
      ],
      "examples": [
        "on server list ping:",
        "\tset the version string to \"&lt;light green&gt;Version: &lt;orange&gt;%minecraft version%\"",
        "\tset the protocol version to 0 # 13w41a (1.7) - so the player will see the custom version string almost always"
      ],
      "since": [
        "2.3"
      ],
      "return type": "long",
      "changers": [
        "set"
      ],
      "patterns": [
        "[the] [server] [(sent|required|fake)] protocol version [number]"
      ],
      "required plugins": [
        "Paper 1.12.2 or newer"
      ]
    },
    {
      "id": "ExprRandom",
      "name": "Random",
      "description": [
        "Gets a random item out of a set, e.g. a random player out of all players online."
      ],
      "examples": [
        "give a diamond to a random player out of all players",
        "give a random item out of all items to the player"
      ],
      "since": [
        "1.4.9"
      ],
      "return type": "Object",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "[a] random %*classinfo% [out] of %objects%"
      ]
    },
    {
      "id": "ExprRandomNumber",
      "name": "Random Number",
      "description": [
        "A random number or integer between two given numbers. Use 'number' if you want any number with decimal parts, or use use 'integer' if you only want whole numbers.",
        "Please note that the order of the numbers doesn't matter, i.e. random number between 2 and 1 will work as well as random number between 1 and 2."
      ],
      "examples": [
        "set the player's health to a random number between 5 and 10",
        "send \"You rolled a %random integer from 1 to 6%!\" to the player"
      ],
      "since": [
        "1.4"
      ],
      "return type": "Number",
      "patterns": [
        "[a] random (integer|number) (from|between) %number% (to|and) %number%"
      ]
    },
    {
      "id": "ExprRandomUUID",
      "name": "Random UUID",
      "description": [
        "Returns a random UUID."
      ],
      "examples": [
        "set {_uuid} to random uuid"
      ],
      "since": [
        "2.5.1"
      ],
      "return type": "Text",
      "patterns": [
        "[a] random uuid"
      ]
    },
    {
      "id": "ExprRawName",
      "name": "Raw Name",
      "description": [
        "The raw Minecraft material name of the given item. Note that this is not guaranteed to give same results on all servers."
      ],
      "examples": [
        "raw name of tool of player"
      ],
      "since": [
        "unknown (2.2)"
      ],
      "return type": "Text",
      "patterns": [
        "(raw|minecraft|vanilla) name[s] of %itemtypes%"
      ]
    },
    {
      "id": "ExprRedstoneBlockPower",
      "name": "Redstone Block Power",
      "description": [
        "Power of a redstone block"
      ],
      "examples": [
        "if redstone power of targeted block is 15:",
        "\tsend \"This block is very powerful!\""
      ],
      "since": [
        "2.5"
      ],
      "return type": "long",
      "patterns": [
        "[the] redstone power of %blocks%",
        "%blocks%'[s] redstone power"
      ]
    },
    {
      "id": "ExprRegion",
      "name": "Region",
      "description": [
        "The region involved in an event.",
        "This expression requires a supported regions plugin to be installed."
      ],
      "examples": [
        "on region enter:",
        "\tregion is {forbidden region}",
        "\tcancel the event"
      ],
      "since": [
        "2.1"
      ],
      "return type": "Region",
      "patterns": [
        "[the] [event-]region"
      ]
    },
    {
      "id": "ExprMembersOfRegion",
      "name": "Region Members & Owners",
      "description": [
        "A list of members or owners of a region.",
        "This expression requires a supported regions plugin to be installed."
      ],
      "examples": [
        "on entering of a region:",
        "\tmessage \"You're entering %region% whose owners are %owners of region%\"."
      ],
      "since": [
        "2.1"
      ],
      "return type": "Offline Player",
      "patterns": [
        "(all|the|) (members|owner[s]) of [[the] region[s]] %regions%",
        "[[the] region[s]] %regions%'[s] (members|owner[s])"
      ]
    },
    {
      "id": "ExprRegionsAt",
      "name": "Regions At",
      "description": [
        "All regions at a particular location.",
        "This expression requires a supported regions plugin to be installed."
      ],
      "examples": [
        "On click on a sign:",
        "\tline 1 of the clicked block is \"[region info]\"",
        "\tset {_regions::*} to regions at the clicked block",
        "\tif {_regions::*} is empty:",
        "\t\tmessage \"No regions exist at this sign.\"",
        "\telse:",
        "\t\tmessage \"Regions containing this sign: &lt;gold&gt;%{_regions::*}%<r>.\""
      ],
      "since": [
        "2.1"
      ],
      "return type": "Region",
      "patterns": [
        "[the] region(s|) %direction% %locations%"
      ]
    },
    {
      "id": "ExprRemainingAir",
      "name": "Remaining Air",
      "description": [
        "How much time a player has left underwater before starting to drown."
      ],
      "examples": [
        "player's remaining air is less than 3 seconds:",
        "\tsend \"hurry, get to the surface!\" to the player"
      ],
      "since": [
        "unknown (before 2.1)"
      ],
      "return type": "Timespan",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] remaining air of %livingentities%",
        "%livingentities%'[s] remaining air"
      ]
    },
    {
      "id": "ExprRespawnLocation",
      "name": "Respawn location",
      "description": [
        "The location that a player should respawn at. This is used within the respawn event."
      ],
      "examples": [
        "on respawn:",
        "\tset respawn location to {example::spawn}"
      ],
      "since": [
        "2.2-dev35"
      ],
      "return type": "Location",
      "changers": [
        "set"
      ],
      "patterns": [
        "[the] respawn location"
      ]
    },
    {
      "id": "ExprReversedList",
      "name": "Reversed List",
      "description": [
        "Reverses given list."
      ],
      "examples": [
        "set {_list::*} to reversed {_list::*}"
      ],
      "since": [
        "2.4"
      ],
      "return type": "Object",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "reversed %objects%"
      ]
    },
    {
      "id": "ExprRound",
      "name": "Rounding",
      "description": [
        "Rounds numbers normally, up (ceiling) or down (floor) respectively."
      ],
      "examples": [
        "set {var} to rounded health of player",
        "set line 1 of the block to rounded \"%(1.5 * player's level)%\"",
        "add rounded down argument to the player's health"
      ],
      "since": [
        "2.0"
      ],
      "return type": "long",
      "patterns": [
        "(a|the|) round[ed] down %number%",
        "(a|the|) round[ed] %number%",
        "(a|the|) round[ed] up %number%"
      ]
    },
    {
      "id": "ExprSaturation",
      "name": "Saturation",
      "description": [
        "The saturation of a player. If used in a player event, it can be omitted and will default to event-player."
      ],
      "examples": [
        "set saturation of player to 20"
      ],
      "since": [
        "2.2-Fixes-v10, 2.2-dev35 (fully modifiable), 2.6.2 (syntax pattern changed)"
      ],
      "return type": "Number",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] saturation of %players%",
        "%players%'[s] saturation"
      ]
    },
    {
      "id": "ExprScoreboardTags",
      "name": "Scoreboard Tags",
      "description": [
        "Scoreboard tags are simple list of texts stored directly in the data of an entity.",
        "So this is a Minecraft related thing, not Bukkit, so the tags will not get removed when the server stops. You can visit visit Minecraft Wiki for more info.",
        "This is changeable and valid for any type of entity. Also you can use use the Has Scoreboard Tag condition to check whether an entity has the given tags.",
        "",
        "Requires Minecraft 1.11+ (actually added in 1.9 to the game, but added in 1.11 to Spigot)."
      ],
      "examples": [
        "on spawn of a monster:",
        "\tif the spawn reason is mob spawner:",
        "\t\tadd \"spawned by a spawner\" to the scoreboard tags of event-entity",
        "",
        "on death of a monster:",
        "\tif the attacker is a player:",
        "\t\tif the victim doesn't have the scoreboard tag \"spawned by a spawner\":",
        "\t\t\tadd 1$ to attacker's balance"
      ],
      "since": [
        "2.3"
      ],
      "return type": "Text",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[(all [[of] the]|the)] scoreboard tags of %entities%",
        "%entities%'[s] scoreboard tags"
      ]
    },
    {
      "id": "ExprScript",
      "name": "Script Name",
      "description": [
        "Holds the current script's name (the file name without '.sk')."
      ],
      "examples": [
        "on script load:",
        "\tset {running::%script%} to true",
        "on script unload:",
        "\tset {running::%script%} to false"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Text",
      "patterns": [
        "[the] script[['s] name]",
        "name of [the] script"
      ]
    },
    {
      "id": "ExprSeaLevel",
      "name": "Sea Level",
      "description": [
        "Gets the sea level of a world."
      ],
      "examples": [
        "send \"The sea level in your world is %sea level in player's world%\""
      ],
      "since": [
        "2.5.1"
      ],
      "return type": "long",
      "patterns": [
        "[the] sea level of %worlds%",
        "%worlds%'[s] sea level"
      ]
    },
    {
      "id": "ExprServerIcon",
      "name": "Server Icon",
      "description": [
        "Icon of the server in the server list. Can be set to an icon that loaded using the",
        "load server icon effect,",
        "or can be reset to the default icon in a server list ping.",
        "'default server icon' returns the default server icon (server-icon.png) always and cannot be changed."
      ],
      "examples": [
        "on script load:",
        "\tset {server-icons::default} to the default server icon"
      ],
      "since": [
        "2.3"
      ],
      "return type": "Server Icon",
      "patterns": [
        "[the] [((default)|(shown|sent))] [server] icon"
      ],
      "required plugins": [
        "Paper 1.12.2 or newer"
      ]
    },
    {
      "id": "ExprShooter",
      "name": "Shooter",
      "description": [
        "The shooter of a projectile."
      ],
      "examples": [
        "shooter is a skeleton"
      ],
      "since": [
        "1.3.7"
      ],
      "return type": "Living Entity",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all"
      ],
      "patterns": [
        "[the] shooter [of %projectile%]"
      ]
    },
    {
      "id": "ExprShuffledList",
      "name": "Shuffled List",
      "description": [
        "Shuffles given list randomly. This is done by replacing indices by random numbers in resulting list."
      ],
      "examples": [
        "set {_list::*} to shuffled {_list::*}"
      ],
      "since": [
        "2.2-dev32"
      ],
      "return type": "Object",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "shuffled %objects%"
      ]
    },
    {
      "id": "ExprSignText",
      "name": "Sign Text",
      "description": [
        "A line of text on a sign. Can be changed, but remember that there is a 16 character limit per line (including colour codes that use 2 characters each)."
      ],
      "examples": [
        "on rightclick on sign:",
        "\tline 2 of the clicked block is \"[Heal]\":",
        "\t\theal the player",
        "\tset line 3 to \"%player%\""
      ],
      "since": [
        "1.3"
      ],
      "return type": "Text",
      "changers": [
        "set",
        "delete"
      ],
      "patterns": [
        "[the] line %number% [of %block%]",
        "[the] (1st|first|2nd|second|3rd|third|4th|fourth) line [of %block%]"
      ]
    },
    {
      "id": "ExprSlotIndex",
      "name": "Slot Index",
      "description": [
        "Index of an an inventory slot. Other types of slots may or may not have indices. Note that comparing slots with numbers is also possible; if index of slot is same as the number, comparisonsucceeds. This expression is mainly for the cases where you must for some reason save the slot numbers."
      ],
      "examples": [
        "if index of event-slot is 10:",
        "\tsend \"You bought a pie!\""
      ],
      "since": [
        "2.2-dev35"
      ],
      "return type": "long",
      "patterns": [
        "[the] index of %slots%",
        "%slots%'[s] index"
      ]
    },
    {
      "id": "ExprSortedList",
      "name": "Sorted List",
      "description": [
        "Sorts given list in natural order. All objects in list must be comparable;",
        "if they're not, this expression will return nothing."
      ],
      "examples": [
        "set {_sorted::*} to sorted {_players::*}"
      ],
      "since": [
        "2.2-dev19"
      ],
      "return type": "Object",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "sorted %objects%"
      ]
    },
    {
      "id": "ExprSpawn",
      "name": "Spawn",
      "description": [
        "The spawn point of a world."
      ],
      "examples": [
        "teleport all players to spawn",
        "set the spawn point of \"world\" to the player's location"
      ],
      "since": [
        "1.4.2"
      ],
      "return type": "Location",
      "changers": [
        "set"
      ],
      "patterns": [
        "[the] spawn[s] [(point|location)[s]] [of %worlds%]",
        "%worlds%'[s] spawn[s] [(point|location)[s]]"
      ]
    },
    {
      "id": "ExprSpawnReason",
      "name": "Spawn Reason",
      "description": [
        "The spawn reason in a spawn event."
      ],
      "examples": [
        "on spawn:",
        "\tspawn reason is reinforcements or breeding"
      ],
      "since": [
        "2.3"
      ],
      "return type": "Spawn Reason",
      "patterns": [
        "[the] spawn[ing] reason"
      ]
    },
    {
      "id": "ExprSpawnerType",
      "name": "Spawner Type",
      "description": [
        "Retrieves, sets, or resets the spawner's entity type"
      ],
      "examples": [
        "on right click:",
        "\tif event-block is spawner:",
        "\t\tsend \"Spawner's type is %target block's entity type%\""
      ],
      "since": [
        "2.4"
      ],
      "return type": "Entity Type",
      "changers": [
        "set",
        "reset"
      ],
      "patterns": [
        "[the] (spawner|entity|creature) type[s] of %blocks%",
        "%blocks%'[s] (spawner|entity|creature) type[s]"
      ]
    },
    {
      "id": "ExprSpecialNumber",
      "name": "Special Number",
      "description": [
        "Special number values, namely NaN, Infinity and -Infinity"
      ],
      "examples": [
        "if {_number} is NaN value:"
      ],
      "since": [
        "2.2-dev32d"
      ],
      "return type": "Number",
      "patterns": [
        "(NaN|[(-|minus)](infinity|∞)) value",
        "value of (NaN|[(-|minus)](infinity|∞))"
      ]
    },
    {
      "id": "ExprSpeed",
      "name": "Speed",
      "description": [
        "A player's walking or flying speed. Both can be changed, but values must be between -1 and 1 (excessive values will be changed to -1 or 1 respectively). Negative values reverse directions.",
        "Please note that changing a player's speed will change their FOV just like potions do."
      ],
      "examples": [
        "set the player's walk speed to 1",
        "increase the argument's fly speed by 0.1"
      ],
      "since": [
        "unknown (before 2.1)"
      ],
      "return type": "Number",
      "changers": [
        "add",
        "set",
        "remove",
        "reset"
      ],
      "patterns": [
        "[the] (walk[ing]|fl(y[ing]|ight))[( |-)]speed of %players%",
        "%players%'[s] (walk[ing]|fl(y[ing]|ight))[( |-)]speed"
      ]
    },
    {
      "id": "ExprSubstring",
      "name": "Subtext",
      "description": [
        "Extracts part of a text. You can either get the first &lt;x&gt; characters, the last &lt;x&gt; characters, the character at index &lt;x&gt;, or the characters between indices &lt;x&gt; and &lt;y&gt;. The indices &lt;x&gt; and &lt;y&gt; should be between 1 and the length of the text (other values will be fit into this range)."
      ],
      "examples": [
        "set {_s} to the first 5 characters of the text argument",
        "message \"%subtext of {_s} from characters 2 to (the length of {_s} - 1)%\" # removes the first and last character from {_s} and sends it to the player or console",
        "set {_characters::*} to characters at 1, 2 and 7 in player's display name",
        "send the last character of all players' names"
      ],
      "since": [
        "2.1, 2.5.2 (character at, multiple strings support)"
      ],
      "return type": "Text",
      "patterns": [
        "[the] (part|sub[ ](text|string)) of %strings% (between|from) (ind(ex|ices)|character[s]|) %number% (and|to) (index|character|) %number%",
        "[the] (first|last) [%number%] character[s] of %strings%",
        "[the] %number% (first|last) characters of %strings%",
        "[the] character[s] at [(index|position|indexes|indices|positions)] %numbers% (in|of) %strings%"
      ]
    },
    {
      "id": "ExprTPS",
      "name": "TPS (ticks per second)",
      "description": [
        "Returns the 3 most recent TPS readings, like the /tps command. This expression is only supported on some server software (PaperSpigot)."
      ],
      "examples": [
        "broadcast \"%tps%\""
      ],
      "since": [
        "2.2-dev36"
      ],
      "return type": "Number",
      "patterns": [
        "tps from [the] last ([1] minute|1[ ]m[inute])",
        "tps from [the] last 5[ ]m[inutes]",
        "tps from [the] last 15[ ]m[inutes]",
        "[the] tps"
      ]
    },
    {
      "id": "ExprTamer",
      "name": "Tamer",
      "description": [
        "The tamer of an entity. Can only be used in entity tame events. You can use 'event-entity' to refer tamed entity itself."
      ],
      "examples": [
        "on tame:",
        "\tif the tamer is a player:",
        "\t\tsend \"someone tamed something!\" to console"
      ],
      "since": [
        "2.2-dev25"
      ],
      "return type": "Player",
      "changers": [
        "add",
        "remove",
        "remove all"
      ],
      "patterns": [
        "[the] tamer"
      ]
    },
    {
      "id": "ExprTarget",
      "name": "Target",
      "description": [
        "For players this is the entity at the crosshair, while for mobs and experience orbs it represents the entity they are attacking/following (if any)."
      ],
      "examples": [
        "on entity target:",
        "\tentity's target is a player",
        "\tsend \"You're being followed by an %entity%!\" to target of entity"
      ],
      "since": [
        "unknown (before 2.1)"
      ],
      "return type": "Entity",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[the] target[[ed] %*entitydata%] [of %livingentities%]",
        "%livingentities%'[s] target[[ed] %*entitydata%]"
      ]
    },
    {
      "id": "ExprTargetedBlock",
      "name": "Targeted Block",
      "description": [
        "The block at the crosshair. This regards all blocks that are not air as fully solid, e.g. torches will be like a solid stone block for this expression."
      ],
      "examples": [
        "# A command to set the block a player looks at to a specific type:",
        "command /setblock &lt;material&gt;:",
        "\ttrigger:",
        "\t\tset targeted block to argument"
      ],
      "since": [
        "1.0"
      ],
      "return type": "Block",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[the] target[ed] block[s] [of %players%]",
        "%players%'[s] target[ed] block[s]",
        "[the] actual[ly] target[ed] block[s] [of %players%]",
        "%players%'[s] actual[ly] target[ed] block[s]"
      ]
    },
    {
      "id": "ExprTeleportCause",
      "name": "Teleport Cause",
      "description": [
        "The teleport cause within a player teleport event."
      ],
      "examples": [
        "on teleport",
        "\tteleport cause is nether portal, end portal or end gateway"
      ],
      "since": [
        "2.2-dev35"
      ],
      "return type": "Teleport Cause",
      "patterns": [
        "[the] teleport (cause|reason|type)"
      ]
    },
    {
      "id": "ExprTemperature",
      "name": "Temperature",
      "description": [
        "Temperature at given block."
      ],
      "examples": [
        "message \"%temperature of the targeted block%\""
      ],
      "since": [
        "2.2-dev35"
      ],
      "return type": "Number",
      "patterns": [
        "[the] temperature[s] of %blocks%",
        "%blocks%'[s] temperature[s]"
      ]
    },
    {
      "id": "ExprTernary",
      "name": "Ternary",
      "description": [
        "A shorthand expression for returning something based on a condition."
      ],
      "examples": [
        "set {points} to 500 if {admin::%player's uuid%} is set else 100"
      ],
      "since": [
        "2.2-dev36"
      ],
      "return type": "Object",
      "patterns": [
        "%objects% if <.+>[,] (otherwise|else) %objects%"
      ]
    },
    {
      "id": "ExprTime",
      "name": "Time",
      "description": [
        "The time of a world."
      ],
      "examples": [
        "time in world is between 18:00 and 6:00:",
        "\tbroadcast \"It's night-time, watch out for monsters!\""
      ],
      "since": [
        "1.0"
      ],
      "return type": "Time",
      "changers": [
        "add",
        "set",
        "remove"
      ],
      "patterns": [
        "[the] time[s] [([with]in|of) %worlds%]",
        "%worlds%'[s] time[s]"
      ]
    },
    {
      "id": "ExprTimePlayed",
      "name": "Time Played",
      "description": [
        "The amount of time a player has played for on the server. This info is stored in the player's statistics in the main world's data folder. Changing this will also change the player's stats which can be views in the client's statistics menu."
      ],
      "examples": [
        "set {_t} to time played of player",
        "if player's time played is greater than 10 minutes:",
        "\tgive player a diamond sword",
        "set player's time played to 0 seconds"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Timespan",
      "changers": [
        "add",
        "set",
        "remove"
      ],
      "patterns": [
        "[the] time played of %offlineplayers%",
        "%offlineplayers%'[s] time played"
      ]
    },
    {
      "id": "ExprTimeSince",
      "name": "Time Since",
      "description": [
        "The time that has passed since a date. If the given date is in the future, a value will not be returned."
      ],
      "examples": [
        "send \"%time since 5 minecraft days ago% has passed since 5 minecraft days ago!\" to player"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Timespan",
      "patterns": [
        "[the] time since %dates%"
      ]
    },
    {
      "id": "ExprTool",
      "name": "Tool",
      "description": [
        "The item an entity is holding in their main or off hand."
      ],
      "examples": [
        "player's tool is a pickaxe",
        "player's off hand tool is a shield",
        "set tool of all players to a diamond sword",
        "set offhand tool of target entity to a bow"
      ],
      "since": [
        "1.0"
      ],
      "return type": "Inventory Slot",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all",
        "delete"
      ],
      "patterns": [
        "[the] ((tool|held item|weapon)|(off[ ]hand (tool|item))) [of %livingentities%]",
        "%livingentities%'[s] ((tool|held item|weapon)|(off[ ]hand (tool|item)))"
      ]
    },
    {
      "id": "ExprTypeOf",
      "name": "Type of",
      "description": [
        "Type of a block, item, entity, inventory or potion effect.",
        "Types of items and blocks are item types similar to them but have amounts",
        "of one, no display names and, on Minecraft 1.13 and newer versions, are undamaged.",
        "Types of entities and inventories are entity types and inventory types known to Skript.",
        "Types of potion effects are potion effect types."
      ],
      "examples": [
        "on rightclick on an entity:",
        "\tmessage \"This is a %type of clicked entity%!\""
      ],
      "since": [
        "1.4, 2.5.2 (potion effect)"
      ],
      "return type": "Object",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "[the] type of %entitydatas/itemtypes/inventories/potioneffects%",
        "%entitydatas/itemtypes/inventories/potioneffects%'[s] type"
      ]
    },
    {
      "id": "ExprUUID",
      "name": "UUID",
      "description": [
        "The UUID of a player, entity or world.",
        "In the future there will be an option to use a player's UUID instead of the name in variable names (i.e. when %player% is used), but for now this can be used.",
        "Please note that this expression does not work for offline players if you are under 1.8!"
      ],
      "examples": [
        "# prevents people from joining the server if they use the name of a player",
        "# who has played on this server at least once since this script has been added",
        "on login:",
        "\tif {uuid::%name of player%} exists:",
        "\t\t{uuid::%name of player%} is not uuid of player",
        "\t\tkick player due to \"Someone with your name has played on this server before\"",
        "\telse:",
        "\t\tset {uuid::%name of player%} to uuid of player"
      ],
      "since": [
        "2.1.2, 2.2 (offline players' UUIDs), 2.2-dev24 (other entities' UUIDs)"
      ],
      "return type": "Text",
      "patterns": [
        "[the] UUID of %offlineplayers/worlds/entities%",
        "%offlineplayers/worlds/entities%'[s] UUID"
      ]
    },
    {
      "id": "ExprUnbreakable",
      "name": "Unbreakable Items",
      "description": [
        "Creates unbreakable copies of given items."
      ],
      "examples": [
        "unbreakable iron sword #Creates unbreakable iron sword"
      ],
      "since": [
        "2.2-dev13b"
      ],
      "return type": "Item Type",
      "patterns": [
        "unbreakable %itemtypes%"
      ]
    },
    {
      "id": "ExprUnixDate",
      "name": "Unix Date",
      "description": [
        "Converts given Unix timestamp to a date. The Unix timespan represents the number of seconds elapsed since 1 January 1970."
      ],
      "examples": [
        "unix date of 946684800 #1 January 2000 12:00 AM (UTC Time)"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Date",
      "patterns": [
        "[the] unix date of %numbers%",
        "%numbers%'[s] unix date"
      ]
    },
    {
      "id": "ExprUnixTicks",
      "name": "Unix Timestamp",
      "description": [
        "Converts given date to Unix timestamp. This is roughly how many seconds have elapsed since 1 January 1970."
      ],
      "examples": [
        "unix timestamp of now"
      ],
      "since": [
        "2.2-dev31"
      ],
      "return type": "Number",
      "patterns": [
        "[the] unix timestamp of %dates%",
        "%dates%'[s] unix timestamp"
      ]
    },
    {
      "id": "ExprVectorAngleBetween",
      "name": "Vectors - Angle Between",
      "description": [
        "Gets the angle between two vectors."
      ],
      "examples": [
        "send \"%the angle between vector 1, 0, 0 and vector 0, 1, 1%\""
      ],
      "since": [
        "2.2-dev28"
      ],
      "return type": "Number",
      "patterns": [
        "[the] angle between [[the] vectors] %vector% and %vector%"
      ]
    },
    {
      "id": "ExprVectorArithmetic",
      "name": "Vectors - Arithmetic",
      "description": [
        "Arithmetic expressions for vectors."
      ],
      "examples": [
        "set {_v} to vector 1, 2, 3 // 5",
        "set {_v} to {_v} ++ {_v}",
        "set {_v} to {_v} ++ 5",
        "set {_v} to {_v} -- {_v}",
        "set {_v} to {_v} -- 5",
        "set {_v} to {_v} ** {_v}",
        "set {_v} to {_v} ** 5",
        "set {_v} to {_v} // {_v}",
        "set {_v} to {_v} // 5"
      ],
      "since": [
        "2.2-dev28"
      ],
      "return type": "Vector",
      "patterns": [
        "%vector%[ ]++[ ]%vector%",
        "%vector%[ ]--[ ]%vector%",
        "%vector%[ ]**[ ]%vector%",
        "%vector%[ ]//[ ]%vector%"
      ]
    },
    {
      "id": "ExprVectorFromXYZ",
      "name": "Vectors - Create from XYZ",
      "description": [
        "Creates a vector from x, y and z values."
      ],
      "examples": [
        "set {_v} to vector 0, 1, 0"
      ],
      "since": [
        "2.2-dev28"
      ],
      "return type": "Vector",
      "patterns": [
        "[a] [new] vector [(from|at|to)] %number%,[ ]%number%(,[ ]| and )%number%"
      ]
    },
    {
      "id": "ExprVectorCrossProduct",
      "name": "Vectors - Cross Product",
      "description": [
        "Gets the cross product between two vectors."
      ],
      "examples": [
        "send \"%vector 1, 0, 0 cross vector 0, 1, 0%\""
      ],
      "since": [
        "2.2-dev28"
      ],
      "return type": "Vector",
      "patterns": [
        "%vector% cross %vector%"
      ]
    },
    {
      "id": "ExprVectorCylindrical",
      "name": "Vectors - Cylindrical Shape",
      "description": [
        "Forms a 'cylindrical shaped' vector using yaw to manipulate the current point."
      ],
      "examples": [
        "loop 360 times:",
        "\tset {_v} to cylindrical vector radius 1, yaw loop-value, height 2",
        "set {_v} to cylindrical vector radius 1, yaw 90, height 2"
      ],
      "since": [
        "2.2-dev28"
      ],
      "return type": "Vector",
      "patterns": [
        "[a] [new] cylindrical vector [(from|with)] [radius] %number%, [yaw] %number%(,| and) [height] %number%"
      ]
    },
    {
      "id": "ExprVectorDotProduct",
      "name": "Vectors - Dot Product",
      "description": [
        "Gets the dot product between two vectors."
      ],
      "examples": [
        "set {_v} to {_v2} dot {_v3}"
      ],
      "since": [
        "2.2-dev28"
      ],
      "return type": "Number",
      "patterns": [
        "%vector% dot %vector%"
      ]
    },
    {
      "id": "ExprVectorLength",
      "name": "Vectors - Length",
      "description": [
        "Gets or sets the length of a vector."
      ],
      "examples": [
        "send \"%standard length of vector 1, 2, 3%\"",
        "set {_v} to vector 1, 2, 3",
        "set standard length of {_v} to 2",
        "send \"%standard length of {_v}%\""
      ],
      "since": [
        "2.2-dev28"
      ],
      "return type": "Number",
      "changers": [
        "add",
        "set",
        "remove"
      ],
      "patterns": [
        "[the] (vector|standard|normal) length[s] of %vectors%",
        "%vectors%'[s] (vector|standard|normal) length[s]"
      ]
    },
    {
      "id": "ExprLocationVectorOffset",
      "name": "Vectors - Location Vector Offset",
      "description": [
        "Returns the location offset by vectors."
      ],
      "examples": [
        "set {_loc} to {_loc} ~ {_v}"
      ],
      "since": [
        "2.2-dev28"
      ],
      "return type": "Location",
      "patterns": [
        "%location% offset by [[the] vectors] %vectors%",
        "%location%[ ]~[~][ ]%vectors%"
      ]
    },
    {
      "id": "ExprVectorNormalize",
      "name": "Vectors - Normalized",
      "description": [
        "Returns the same vector but with length 1."
      ],
      "examples": [
        "set {_v} to normalized {_v}"
      ],
      "since": [
        "2.2-dev28"
      ],
      "return type": "Vector",
      "patterns": [
        "normalize[d] %vector%",
        "%vector% normalized"
      ]
    },
    {
      "id": "ExprVectorRandom",
      "name": "Vectors - Random Vector",
      "description": [
        "Creates a random vector."
      ],
      "examples": [
        "set {_v} to a random vector"
      ],
      "since": [
        "2.2-dev28"
      ],
      "return type": "Vector",
      "patterns": [
        "[a] random vector"
      ]
    },
    {
      "id": "ExprVectorSpherical",
      "name": "Vectors - Spherical Shape",
      "description": [
        "Forms a 'spherical shaped' vector using yaw and pitch to manipulate the current point."
      ],
      "examples": [
        "loop 360 times:",
        "\tset {_v} to spherical vector radius 1, yaw loop-value, pitch loop-value",
        "set {_v} to spherical vector radius 1, yaw 45, pitch 90"
      ],
      "since": [
        "2.2-dev28"
      ],
      "return type": "Vector",
      "patterns": [
        "[new] spherical vector [(from|with)] [radius] %number%, [yaw] %number%(,| and) [pitch] %number%"
      ]
    },
    {
      "id": "ExprVectorSquaredLength",
      "name": "Vectors - Squared Length",
      "description": [
        "Gets the squared length of a vector."
      ],
      "examples": [
        "send \"%squared length of vector 1, 2, 3%\""
      ],
      "since": [
        "2.2-dev28"
      ],
      "return type": "Number",
      "patterns": [
        "[the] squared length[s] of %vectors%",
        "%vectors%'[s] squared length[s]"
      ]
    },
    {
      "id": "ExprVectorBetweenLocations",
      "name": "Vectors - Vector Between Locations",
      "description": [
        "Creates a vector between two locations."
      ],
      "examples": [
        "set {_v} to vector between {_loc1} and {_loc2}"
      ],
      "since": [
        "2.2-dev28"
      ],
      "return type": "Vector",
      "patterns": [
        "[the] vector (from|between) %location% (to|and) %location%"
      ]
    },
    {
      "id": "ExprVectorOfLocation",
      "name": "Vectors - Vector from Location",
      "description": [
        "Creates a vector from a location."
      ],
      "examples": [
        "set {_v} to vector of {_loc}"
      ],
      "since": [
        "2.2-dev28"
      ],
      "return type": "Vector",
      "patterns": [
        "[the] vector (of|from|to) %location%",
        "%location%'s vector"
      ]
    },
    {
      "id": "ExprVectorFromYawAndPitch",
      "name": "Vectors - Vector from Pitch and Yaw",
      "description": [
        "Creates a vector from a yaw and pitch value."
      ],
      "examples": [
        "set {_v} to vector from yaw 45 and pitch 45"
      ],
      "since": [
        "2.2-dev28"
      ],
      "return type": "Vector",
      "patterns": [
        "[a] [new] vector (from|with) yaw %number% and pitch %number%"
      ]
    },
    {
      "id": "ExprVelocity",
      "name": "Vectors - Velocity",
      "description": [
        "Gets or changes velocity of an entity."
      ],
      "examples": [
        "set player's velocity to {_v}"
      ],
      "since": [
        "2.2-dev31"
      ],
      "return type": "Vector",
      "changers": [
        "add",
        "set",
        "remove",
        "delete",
        "reset"
      ],
      "patterns": [
        "[the] velocit(y|ies) of %entities%",
        "%entities%'[s] velocit(y|ies)"
      ]
    },
    {
      "id": "ExprVectorXYZ",
      "name": "Vectors - XYZ Component",
      "description": [
        "Gets or changes the x, y or z component of a vector."
      ],
      "examples": [
        "set {_v} to vector 1, 2, 3",
        "send \"%x of {_v}%, %y of {_v}%, %z of {_v}%\"",
        "add 1 to x of {_v}",
        "add 2 to y of {_v}",
        "add 3 to z of {_v}",
        "send \"%x of {_v}%, %y of {_v}%, %z of {_v}%\"",
        "set x component of {_v} to 1",
        "set y component of {_v} to 2",
        "set z component of {_v} to 3",
        "send \"%x component of {_v}%, %y component of {_v}%, %z component of {_v}%\""
      ],
      "since": [
        "2.2-dev28"
      ],
      "return type": "Number",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "[the] [vector] (x|y|z) [component[s]] of %vectors%",
        "%vectors%'[s] [vector] (x|y|z) [component[s]]"
      ]
    },
    {
      "id": "ExprVehicle",
      "name": "Vehicle",
      "description": [
        "The vehicle an entity is in, if any. This can actually be any entity, e.g. spider jockeys are skeletons that ride on a spider, so the spider is the 'vehicle' of the skeleton.",
        "See also: passenger"
      ],
      "examples": [
        "vehicle of the player is a minecart"
      ],
      "since": [
        "2.0"
      ],
      "return type": "Entity",
      "changers": [
        "add",
        "set",
        "remove",
        "remove all"
      ],
      "patterns": [
        "[the] vehicle[s] of %entities%",
        "%entities%'[s] vehicle[s]"
      ]
    },
    {
      "id": "ExprVersion",
      "name": "Version",
      "description": [
        "The version of Bukkit, Minecraft or Skript respectively."
      ],
      "examples": [
        "message \"This server is running Minecraft %minecraft version% on Bukkit %bukkit version%\"",
        "message \"This server is powered by Skript %skript version%\""
      ],
      "since": [
        "2.0"
      ],
      "return type": "Text",
      "patterns": [
        "([craft]bukkit|minecraft|skript)( |-)version"
      ]
    },
    {
      "id": "ExprVersionString",
      "name": "Version String",
      "description": [
        "The text to show if the protocol version of the server doesn't match with protocol version of the client. You can check the protocol version expression for more information about this.",
        "This can only be set in a server list ping event."
      ],
      "examples": [
        "on server list ping:",
        "\tset the protocol version to 0 # 13w41a (1.7), so it will show the version string always",
        "\tset the version string to \"&lt;light green&gt;Version: &lt;orange&gt;%minecraft version%\""
      ],
      "since": [
        "2.3"
      ],
      "return type": "Text",
      "changers": [
        "set"
      ],
      "patterns": [
        "[the] [(shown|custom)] version [(string|text)]"
      ],
      "required plugins": [
        "Paper 1.12.2 or newer"
      ]
    },
    {
      "id": "ExprClientViewDistance",
      "name": "View Distance of Client",
      "description": [
        "The view distance of the client. Can not be changed. This differs from the server side view distance of player as this will retrieve the view distance the player has set on their client."
      ],
      "examples": [
        "set {_clientView} to the client view distance of player",
        "set view distance of player to client view distance of player"
      ],
      "since": [
        "2.5"
      ],
      "return type": "long",
      "patterns": [
        "[the] client view distance[s] of %players%",
        "%players%'[s] client view distance[s]"
      ],
      "required plugins": [
        "1.13.2+"
      ]
    },
    {
      "id": "ExprWeather",
      "name": "Weather",
      "description": [
        "The weather in the given or the current world."
      ],
      "examples": [
        "set weather to clear",
        "weather in \"world\" is rainy"
      ],
      "since": [
        "1.0"
      ],
      "return type": "Weather Type",
      "changers": [
        "set",
        "delete"
      ],
      "patterns": [
        "[the] weather [(in|of) %worlds%]",
        "%worlds%'[s] weather"
      ]
    },
    {
      "id": "ExprWhitelist",
      "name": "Whitelist",
      "description": [
        "A server's whitelist.This expression can be used to add/remove players to/from the whitelist, to enable it and disable it (set whitelist to true / set whitelist to false), and to empty it (reset whitelist)"
      ],
      "examples": [
        "set whitelist to false",
        "add all players to whitelist",
        "reset the whitelist"
      ],
      "since": [
        "2.5.2"
      ],
      "return type": "Offline Player",
      "changers": [
        "add",
        "set",
        "remove",
        "reset"
      ],
      "patterns": [
        "[the] white[ ]list"
      ]
    },
    {
      "id": "ExprWorld",
      "name": "World",
      "description": [
        "The world the event occurred in."
      ],
      "examples": [
        "world is \"world_nether\"",
        "teleport the player to the world's spawn",
        "set the weather in the player's world to rain",
        "set {_world} to world of event-chunk"
      ],
      "since": [
        "1.0"
      ],
      "return type": "World",
      "changers": [
        "set"
      ],
      "patterns": [
        "[the] world [of %locations/entities/chunk%]",
        "%locations/entities/chunk%'[s] world"
      ]
    },
    {
      "id": "ExprSeed",
      "name": "World Seed",
      "description": [
        "The seed of given world. Note that it will be returned as Minecraft internally treats seeds, not as you specified it in world configuration."
      ],
      "examples": [
        "broadcast \"Seed: %seed of player's world%\""
      ],
      "since": [
        "2.2-dev35"
      ],
      "return type": "long",
      "patterns": [
        "[the] seed[s] (from|of) %worlds%",
        "%worlds%'[s] seed[s]"
      ]
    },
    {
      "id": "ExprWorldFromName",
      "name": "World from Name",
      "description": [
        "Returns the world from a string."
      ],
      "examples": [
        "world named {game::world-name}",
        "the world \"world\""
      ],
      "since": [
        "2.6.1"
      ],
      "return type": "World",
      "patterns": [
        "[the] world [(named|with name)] %string%"
      ]
    },
    {
      "id": "ExprWorlds",
      "name": "Worlds",
      "description": [
        "All worlds of the server, useful for looping."
      ],
      "examples": [
        "loop all worlds:",
        "\tbroadcast \"You're in %loop-world%\" to loop-world"
      ],
      "since": [
        "1.0"
      ],
      "return type": "World",
      "patterns": [
        "[(all [[of] the]|the)] worlds"
      ]
    },
    {
      "id": "ExprXOf",
      "name": "X of Item",
      "description": [
        "An expression to be able to use a certain amount of items where the amount can be any expression. Please note that this expression is not stable and might be replaced in the future."
      ],
      "examples": [
        "give level of player of pickaxes to the player"
      ],
      "since": [
        "1.2"
      ],
      "return type": "Object",
      "changers": [
        "unknown"
      ],
      "patterns": [
        "%number% of %itemstacks/itemtypes/entitytype%"
      ]
    },
    {
      "id": "ExprYawPitch",
      "name": "Yaw / Pitch",
      "description": [
        "The yaw or pitch of a location or vector."
      ],
      "examples": [
        "log \"%player%: %location of player%, %player's yaw%, %player's pitch%\" to \"playerlocs.log\"",
        "set {_yaw} to yaw of player",
        "set {_p} to pitch of target entity"
      ],
      "since": [
        "2.0, 2.2-dev28 (vector yaw/pitch)"
      ],
      "return type": "Number",
      "changers": [
        "add",
        "set",
        "remove"
      ],
      "patterns": [
        "[the] (yaw|pitch) of %locations/vectors%",
        "%locations/vectors%'[s] (yaw|pitch)"
      ]
    }
  ],
  "types": [
    {
      "id": "Attribute",
      "name": "Attribute Type",
      "description": [
        "Represents the type of an attribute. Note that this type does not contain any numerical values.See attribute types for more info."
      ],
      "usage": "generic max health, generic follow range, generic knockback resistance, generic movement speed, generic flying speed, generic attack damage, generic attack knockback, generic attack speed, generic armor, generic armor toughness, generic luck, horse jump strength, zombie spawn reinforcements",
      "since": [
        "2.5"
      ],
      "patterns": [
        "attribute[ ]type[s]"
      ]
    },
    {
      "id": "Biome",
      "name": "Biome",
      "description": [
        "All possible biomes Minecraft uses to generate a world."
      ],
      "examples": [
        "biome at the player is desert"
      ],
      "usage": "Biome names; you can use F3 ingame",
      "since": [
        "1.4.4"
      ],
      "patterns": [
        "biome[s]"
      ]
    },
    {
      "id": "Block",
      "name": "Block",
      "description": [
        "A block in a world. It has a location and a type, and can also have a direction (mostly a facing), an inventory, or other special properties."
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "block[s]"
      ]
    },
    {
      "id": "BlockData",
      "name": "Block Data",
      "description": [
        "Block data is the detailed information about a block, referred to in Minecraft as BlockStates, allowing for the manipulation of different aspects of the block, including shape, waterlogging, direction the block is facing, and so much more. Information regarding each block's optional data can be found on Minecraft's Wiki. Find the block you're looking for and scroll down to 'Block States'. Different states must be separated by a semicolon (see examples). The 'minecraft:' namespace is optional, as well as are underscores."
      ],
      "examples": [
        "set block at player to campfire[lit=false]",
        "set target block of player to oak stairs[facing=north;waterlogged=true]",
        "set block at player to grass_block[snowy=true]",
        "set loop-block to minecraft:chest[facing=north]",
        "set block above player to oak_log[axis=y]",
        "set target block of player to minecraft:oak_leaves[distance=2;persistent=false]"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "block[ ]data[s]"
      ]
    },
    {
      "id": "BlockStateBee",
      "name": "BlockState",
      "description": [
        "Represents the blockstate of a block saved in a structure. Requires MC 1.17.1+"
      ],
      "since": [
        "1.12.3"
      ],
      "patterns": [
        "blockstate[s]"
      ]
    },
    {
      "id": "Boolean",
      "name": "Boolean",
      "description": [
        "A boolean is a value that is either true or false. Other accepted names are 'on' and 'yes' for true, and 'off' and 'no' for false."
      ],
      "examples": [
        "set {config.%player%.use mod} to false"
      ],
      "usage": "true/yes/on or false/no/off",
      "since": [
        "1.0"
      ],
      "patterns": [
        "boolean[s]"
      ]
    },
    {
      "id": "TypeCatType",
      "name": "Cat Type",
      "description": [
        "Represents the race/type of a cat entity."
      ],
      "usage": "tabby, black, red, siamese, british shorthair, calico, persian, ragdoll, white, jellie, all black",
      "since": [
        "2.4"
      ],
      "patterns": [
        "cat[ ](type|race)[s]"
      ]
    },
    {
      "id": "Chunk",
      "name": "Chunk",
      "description": [
        "A chunk is a cuboid of 16×16×128 (x×z×y) blocks. Chunks are spread on a fixed rectangular grid in their world."
      ],
      "since": [
        "2.0"
      ],
      "patterns": [
        "chunk[s]"
      ]
    },
    {
      "id": "ClickType",
      "name": "Click Type",
      "description": [
        "Click type, mostly for inventory events. Tells exactly which keys/buttons player pressed, assuming that default keybindings are used in client side."
      ],
      "usage": "left mouse button, left mouse button with shift, right mouse button, right mouse button with shift, window border using right mouse button, window border using left mouse button, middle mouse button, number key, double click using mouse, drop key, drop key with control, creative action, swap offhand, unknown",
      "since": [
        "2.2-dev16b, 2.2-dev35 (renamed to click type)"
      ],
      "patterns": [
        "click[ ]type[s]"
      ]
    },
    {
      "id": "Color",
      "name": "Colour",
      "description": [
        "Wool, dye and chat colours."
      ],
      "examples": [
        "color of the sheep is red or black",
        "set the colour of the block to green",
        "message \"You're holding a <%color of tool%>%color of tool%<reset> wool block\""
      ],
      "usage": "black, dark grey/dark gray, grey/light grey/gray/light gray/silver, white, blue/dark blue, cyan/aqua/dark cyan/dark aqua, light blue/light cyan/light aqua, green/dark green, light green/lime/lime green, yellow/light yellow, orange/gold/dark yellow, red/dark red, pink/light red, purple/dark purple, magenta/light purple, brown/indigo",
      "since": [
        ""
      ],
      "patterns": [
        "colo[u]r[s]"
      ]
    },
    {
      "id": "CommandSender",
      "name": "Command Sender",
      "description": [
        "A player or the console."
      ],
      "examples": [
        "command /push [&lt;player&gt;]:",
        "\ttrigger:",
        "\t\tif arg-1 is not set:",
        "\t\t\tif command sender is console:",
        "\t\t\t\tsend \"You can't push yourself as a console :\\\" to sender",
        "\t\t\t\tstop",
        "\t\t\tpush sender upwards with force 2",
        "\t\t\tsend \"Yay!\"",
        "\t\telse:",
        "\t\t\tpush arg-1 upwards with force 2",
        "\t\t\tsend \"Yay!\" to sender and arg-1"
      ],
      "usage": "use the console for the console\nsee player for players.",
      "since": [
        "1.0"
      ],
      "patterns": [
        "[(command[s]][ ][)](sender|executor)[s]"
      ]
    },
    {
      "id": "DamageCause",
      "name": "Damage Cause",
      "description": [
        "The cause/type of a damage event, e.g. lava, fall, fire, drowning, explosion, poison, etc.",
        "Please note that support for this type is very rudimentary, e.g. lava, fire and burning, as well as projectile and attack are considered different types."
      ],
      "usage": "contact, attack, sweep attack, projectile, suffocation, fall, fire, burning, melting, lava, drowning, block explosion, entity explosion, void, lightning, suicide, starvation, poison, potion, wither, falling block, thorns, dragon's breath, unknown, hitting wall while flying, magma, cramming, dryout, freeze",
      "since": [
        "2.0"
      ],
      "patterns": [
        "damage[ ]cause[s]"
      ]
    },
    {
      "id": "Date",
      "name": "Date",
      "description": [
        "A date is a certain point in the real world's time which can currently only be obtained with now.",
        "See time and timespan for the other time types of Skript."
      ],
      "examples": [
        "set {_yesterday} to now",
        "subtract a day from {_yesterday}",
        "# now {_yesterday} represents the date 24 hours before now"
      ],
      "since": [
        "1.4"
      ],
      "patterns": [
        "date[s]"
      ]
    },
    {
      "id": "Difficulty",
      "name": "Difficulty",
      "description": [
        "The difficulty of a world."
      ],
      "usage": "peaceful, easy, medium, hard",
      "since": [
        "2.3"
      ],
      "patterns": [
        "difficult(y|ies)"
      ]
    },
    {
      "id": "Direction",
      "name": "Direction",
      "description": [
        "A direction, e.g. north, east, behind, 5 south east, 1.3 meters to the right, etc.",
        "Locations and some blocks also have a direction, but without a length.",
        "Please note that directions have changed extensively in the betas and might not work perfectly. They can also not be used as command arguments."
      ],
      "examples": [
        "set the block below the victim to a chest",
        "loop blocks from the block infront of the player to the block 10 below the player:",
        "\tset the block behind the loop-block to water"
      ],
      "usage": "see direction (expression)",
      "since": [
        "2.0"
      ],
      "patterns": [
        "direction[s]"
      ]
    },
    {
      "id": "Enchantment",
      "name": "Enchantment",
      "description": [
        "An enchantment, e.g. 'sharpness' or 'fortune'. Unlike enchantment type this type has no level, but you usually don't need to use this type anyway."
      ],
      "usage": "Frost Walker, Feather Falling, Unbreaking, Knockback, Projectile Protection, Respiration, Punch, Protection, Blast Protection, Lure, Impaling, Smite, Silk Touch, Infinity, Luck of The Sea, Thorns, Multishot, Curse of Vanishing, Fire Aspect, Flame, Depth Strider, Piercing, Fire Protection, Sharpness, Power, Sweeping Edge, Aqua Affinity, Curse of Binding, Bane of Arthropods, Soul Speed, Looting, Efficiency, Mending, Riptide, Quick Charge, Fortune, Loyalty, Channeling",
      "since": [
        "1.4.6"
      ],
      "patterns": [
        "enchantment[s]"
      ]
    },
    {
      "id": "EnchantmentOffer",
      "name": "Enchantment Offer",
      "description": [
        "The enchantmentoffer in an enchant prepare event."
      ],
      "examples": [
        "on enchant prepare:",
        "\tset enchant offer 1 to sharpness 1",
        "\tset the cost of enchant offer 1 to 10 levels"
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "enchant[ment][ ]offer[s]"
      ]
    },
    {
      "id": "EnchantmentType",
      "name": "Enchantment Type",
      "description": [
        "An enchantment with an optional level, e.g. 'sharpness 2' or 'fortune'."
      ],
      "examples": [
        "enchant the player's tool with sharpness 5",
        "helmet is enchanted with waterbreathing"
      ],
      "usage": "&lt;enchantment&gt; [&lt;level&gt;]",
      "since": [
        "1.4.6"
      ],
      "patterns": [
        "enchant(ing|ment) type[s]"
      ]
    },
    {
      "id": "Entity",
      "name": "Entity",
      "description": [
        "An entity is something in a world that's not a block, e.g. a player, a skeleton, or a zombie, but also projectiles like arrows, fireballs or thrown potions, or special entities like dropped items, falling blocks or paintings."
      ],
      "examples": [
        "entity is a zombie or creeper",
        "player is an op",
        "projectile is an arrow",
        "shoot a fireball from the player"
      ],
      "usage": "player, op, wolf, tamed ocelot, powered creeper, zombie, unsaddled pig, fireball, arrow, dropped item, item frame, etc.",
      "since": [
        "1.0"
      ],
      "patterns": [
        "entit(y|ies)"
      ]
    },
    {
      "id": "EntityData",
      "name": "Entity Type",
      "description": [
        "The type of an entity, e.g. player, wolf, powered creeper, etc."
      ],
      "examples": [
        "victim is a cow",
        "spawn a creeper"
      ],
      "usage": "Detailed usage will be added eventually",
      "since": [
        "1.3"
      ],
      "patterns": [
        "entity[ ]type[s]"
      ]
    },
    {
      "id": "EntityType",
      "name": "Entity Type with Amount",
      "description": [
        "An entity type with an amount, e.g. '2 zombies'. I might remove this type in the future and make a more general 'type' type, i.e. a type that has a number and a type."
      ],
      "examples": [
        "spawn 5 creepers behind the player"
      ],
      "usage": "&lt;number&gt; &lt;entity type&gt;",
      "since": [
        "1.3"
      ],
      "patterns": [
        "entitytype"
      ]
    },
    {
      "id": "Experience",
      "name": "Experience",
      "description": [
        "Experience points. Please note that Bukkit only allows to give XP, but not remove XP from players. You can however change a player's level and level progress freely."
      ],
      "examples": [
        "give 10 xp to the player"
      ],
      "usage": "[&lt;number&gt;] ([e]xp|experience [point[s]])",
      "since": [
        "2.0"
      ],
      "patterns": [
        "experience[ ][point[s]]"
      ]
    },
    {
      "id": "FireworkEffect",
      "name": "Firework Effect",
      "description": [
        "A configuration of effects that defines the firework when exploded",
        "which can be used in the launch firework effect.",
        "See the firework effect expression for detailed patterns."
      ],
      "examples": [
        "launch flickering trailing burst firework colored blue and green at player",
        "launch trailing flickering star coloured purple, yellow, blue, green and red fading to pink at target entity",
        "launch ball large coloured red, purple and white fading to light green and black at player's location with duration 1"
      ],
      "since": [
        "2.4"
      ],
      "patterns": [
        "firework[ ]effect[s]"
      ]
    },
    {
      "id": "TypeFireworkType",
      "name": "Firework Type",
      "description": [
        "The type of a fireworkeffect."
      ],
      "usage": "ball, large ball, star, burst, creeper",
      "since": [
        "2.4"
      ],
      "patterns": [
        "firework[ ]type[s]"
      ]
    },
    {
      "id": "GameMode",
      "name": "Game Mode",
      "description": [
        "The game modes survival, creative, adventure and spectator."
      ],
      "examples": [
        "player's gamemode is survival",
        "set the player argument's game mode to creative"
      ],
      "usage": "creative/survival/adventure/spectator",
      "since": [
        "1.0"
      ],
      "patterns": [
        "game[ ]mode[s]"
      ]
    },
    {
      "id": "GameRule",
      "name": "Gamerule",
      "description": [
        "A gamerule"
      ],
      "usage": "doFireTick, maxCommandChainLength, fireDamage, reducedDebugInfo, disableElytraMovementCheck, announceAdvancements, drowningDamage, commandBlockOutput, forgiveDeadPlayers, doMobSpawning, maxEntityCramming, disableRaids, doWeatherCycle, doDaylightCycle, showDeathMessages, doTileDrops, universalAnger, playersSleepingPercentage, doInsomnia, doImmediateRespawn, naturalRegeneration, doMobLoot, fallDamage, keepInventory, doEntityDrops, doLimitedCrafting, mobGriefing, randomTickSpeed, spawnRadius, freezeDamage, doTraderSpawning, logAdminCommands, spectatorsGenerateChunks, sendCommandFeedback, doPatrolSpawning",
      "since": [
        "2.5"
      ],
      "patterns": [
        "gamerule[s]"
      ]
    },
    {
      "id": "GameruleValue",
      "name": "Gamerule Value",
      "description": [
        "A wrapper for the value of a gamerule for a world."
      ],
      "since": [
        "2.5"
      ],
      "patterns": [
        "gamerule value[s]"
      ]
    },
    {
      "id": "Gene",
      "name": "Gene",
      "description": [
        "Represents a Panda's main or hidden gene. See genetics for more info."
      ],
      "usage": "normal, lazy, worried, playful, brown, weak, aggressive",
      "since": [
        "2.4"
      ],
      "patterns": [
        "[panda ]gene[s]"
      ]
    },
    {
      "id": "RegainReason",
      "name": "Heal Reason",
      "description": [
        "The heal reason in a heal event."
      ],
      "usage": "peaceful regeneration, satiated, eating, end crystal, magic, magic regen, wither spawning, withering, unknown",
      "since": [
        "2.5"
      ],
      "patterns": [
        "(regen|heal) (reason|cause)"
      ]
    },
    {
      "id": "Inventory",
      "name": "Inventory",
      "description": [
        "An inventory of a player or block. Inventories have many effects and conditions regarding the items contained.",
        "An inventory has a fixed amount of slots which represent a specific place in the inventory, e.g. the helmet slot for players (Please note that slot support is still very limited but will be improved eventually)."
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "inventor(y|ies)"
      ]
    },
    {
      "id": "InventoryAction",
      "name": "Inventory Action",
      "description": [
        "What player just did in inventory event. Note that when in creative game mode, most actions do not work correctly."
      ],
      "usage": "nothing, pickup all, pickup some, pickup half, pickup one item, place all, place some, place one, swap with cursor, drop all from cursor, drop one from cursor, drop all from slot, drop one from slot, instant move, hotbar move and readd, swap with hotbar, clone stack, collect to cursor, unknown",
      "since": [
        "2.2-dev16"
      ],
      "patterns": [
        "inventory[ ]action[s]"
      ]
    },
    {
      "id": "Slot",
      "name": "Inventory Slot",
      "description": [
        "Represents a single slot of an inventory. Notable slots are the armour slots and furnace slots. ",
        "The most important property that distinguishes a slot from an item is its ability to be changed, e.g. it can be set, deleted, enchanted, etc. (Some item expressions can be changed as well, e.g. items stored in variables. For that matter: slots are never saved to variables, only the items they represent at the time when the variable is set).",
        "Please note that tool can be regarded a slot, but it can actually change it's position, i.e. doesn't represent always the same slot."
      ],
      "examples": [
        "set tool of player to dirt",
        "delete helmet of the victim",
        "set the colour of the player's tool to green",
        "enchant the player's chestplate with projectile protection 5"
      ],
      "since": [
        ""
      ],
      "patterns": [
        "[inventory ]slot[s]"
      ]
    },
    {
      "id": "InventoryType",
      "name": "Inventory Type",
      "description": [
        "Minecraft has several different inventory types with their own use cases."
      ],
      "usage": "chest inventory, dispenser inventory, dropper inventory, furnace inventory, workbench inventory, crafting table inventory, enchanting table inventory, brewing stand inventory, player inventory, creative inventory, merchant inventory, ender chest inventory, anvil inventory, smithing inventory, beacon inventory, hopper inventory, shulker box inventory, barrel inventory, blast furnace inventory, lectern inventory, smoker inventory, loom inventory, cartography table inventory, grindstone inventory, stonecutter inventory, composter inventory",
      "since": [
        "2.2-dev32"
      ],
      "patterns": [
        "inventory[ ]type[s]"
      ]
    },
    {
      "id": "ItemStack",
      "name": "Item / Material",
      "description": [
        "An item, e.g. a stack of torches, a furnace, or a wooden sword of sharpness 2. Unlike item type an item can only represent exactly one item (e.g. an upside-down cobblestone stair facing west), while an item type can represent a whole range of items (e.g. any cobble stone stairs regardless of direction).",
        "You don't usually need this type except when you want to make a command that only accepts an exact item.",
        "Please note that currently 'material' is exactly the same as 'item', i.e. can have an amount & enchantments."
      ],
      "examples": [
        "set {_item} to type of the targeted block",
        "{_item} is a torch"
      ],
      "usage": "[&lt;number&gt; [of]] &lt;alias&gt; [of &lt;enchantment&gt; &lt;level&gt;], Where &lt;alias&gt; must be an alias that represents exactly one item (i.e cannot be a general alias like 'sword' or 'plant')",
      "since": [
        "1.0"
      ],
      "patterns": [
        "item",
        "material"
      ]
    },
    {
      "id": "ItemType",
      "name": "Item Type",
      "description": [
        "An item type is an alias, e.g. 'a pickaxe', 'all plants', etc., and can result in different items when added to an inventory, and unlike items they are well suited for checking whether an inventory contains a certain item or whether a certain item is of a certain type.",
        "An item type can also have one or more enchantments with or without a specific level defined, and can optionally start with 'all' or 'every' to make this item type represent all types that the alias represents, including data ranges."
      ],
      "examples": [
        "give 4 torches to the player",
        "add all slabs to the inventory of the block",
        "player's tool is a diamond sword of sharpness",
        "remove a pickaxes of fortune 4 from {stored items::*}",
        "set {_item} to 10 of every upside-down stair",
        "block is dirt or farmland"
      ],
      "usage": "[&lt;number&gt; [of]] [all/every] &lt;alias&gt; [of &lt;enchantment&gt; [&lt;level&gt;] [,/and &lt;more enchantments...&gt;]]",
      "since": [
        "1.0"
      ],
      "patterns": [
        "item[ ]type[s]",
        "items",
        "materials"
      ]
    },
    {
      "id": "LivingEntity",
      "name": "Living Entity",
      "description": [
        "A living entity, i.e. a mob or player, not inanimate entities like projectiles or dropped items."
      ],
      "examples": [
        "spawn 5 powered creepers",
        "shoot a zombie from the creeper"
      ],
      "usage": "see entity, but ignore inanimate objects",
      "since": [
        "1.0"
      ],
      "patterns": [
        "living[ ]entit(y|ies)"
      ]
    },
    {
      "id": "Location",
      "name": "Location",
      "description": [
        "A location in a world. Locations are world-specific and even store a direction, e.g. if you save a location and later teleport to it you will face the exact same direction you did when you saved the location."
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "location[s]"
      ]
    },
    {
      "id": "Metadatable",
      "name": "Metadata Holder",
      "description": [
        "Something that can hold metadata (e.g. an entity or block)"
      ],
      "examples": [
        "set metadata value \"super cool\" of player to true"
      ],
      "since": [
        "2.2-dev36"
      ],
      "patterns": [
        "metadata[ ]holder[s]"
      ]
    },
    {
      "id": "Money",
      "name": "Money",
      "description": [
        "A certain amount of money. Please note that this differs from numbers as it includes a currency symbol or name, but usually the two are interchangeable, e.g. you can both add 100$ to the player's balance and add 100 to the player's balance."
      ],
      "examples": [
        "add 10£ to the player's account",
        "remove Fr. 9.95 from the player's money",
        "set the victim's money to 0",
        "increase the attacker's balance by the level of the victim * 100"
      ],
      "usage": "&lt;number&gt; $ or $ &lt;number&gt;, where '$' is your server's currency, e.g. '10 rupees' or '£5.00'",
      "since": [
        "2.0"
      ],
      "patterns": [
        "money"
      ]
    },
    {
      "id": "Number",
      "name": "Number",
      "description": [
        "A number, e.g. 2.5, 3, or -9812454.",
        "Please note that many expressions only need integers, i.e. will discard any fractional parts of any numbers without producing an error."
      ],
      "examples": [
        "set the player's health to 5.5",
        "set {_temp} to 2*{_temp} - 2.5"
      ],
      "usage": "[-]###[.###]</code> (any amount of digits; very large numbers will be truncated though)",
      "since": [
        "1.0"
      ],
      "patterns": [
        "num[ber][s]"
      ]
    },
    {
      "id": "Object",
      "name": "Object",
      "description": [
        "The supertype of all types, meaning that if %object% is used in e.g. a condition it will accept all kinds of expressions."
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "object[s]"
      ]
    },
    {
      "id": "OfflinePlayer",
      "name": "Offline Player",
      "description": [
        "A player that is possibly offline. See player for more information. Please note that while all effects and conditions that require a player can be used with an offline player as well, they will not work if the player is not actually online."
      ],
      "since": [
        ""
      ],
      "patterns": [
        "offline[ ]player[s]"
      ]
    },
    {
      "id": "Player",
      "name": "Player",
      "description": [
        "A player. Depending on whether a player is online or offline several actions can be performed with them, though you won't get any errors when using effects that only work if the player is online (e.g. changing their inventory) on an offline player.",
        "You have two possibilities to use players as command arguments: &lt;player&gt; and &lt;offline player&gt;. The first requires that the player is online and also accepts only part of the name, while the latter doesn't require that the player is online, but the player's name has to be entered exactly."
      ],
      "since": [
        "1.0"
      ],
      "patterns": [
        "player[s]"
      ]
    },
    {
      "id": "PotionEffect",
      "name": "Potion Effect",
      "description": [
        "A potion effect, including the potion effect type, tier and duration."
      ],
      "usage": "speed of tier 1 for 10 seconds",
      "since": [
        "2.5.2"
      ],
      "patterns": [
        "potion[ ]effect[s]"
      ]
    },
    {
      "id": "PotionEffectType",
      "name": "Potion Effect Type",
      "description": [
        "A potion effect type, e.g. 'strength' or 'swiftness'."
      ],
      "examples": [
        "apply swiftness 5 to the player",
        "apply potion of speed 2 to the player for 60 seconds",
        "remove invisibility from the victim"
      ],
      "usage": "null, speed, slowness, haste, mining fatigue, strength, instant health, instant damage, jump boost, nausea, regeneration, resistance, fire resistance, water breathing, invisibility, blindness, night vision, hunger, weakness, poison, wither, health boost, absorption, saturation, glowing, levitation, luck, bad luck, slow falling, conduit power, dolphins grace, bad omen, hero of the village",
      "since": [
        ""
      ],
      "patterns": [
        "potion[[ ]effect][ ]type[s]"
      ]
    },
    {
      "id": "Projectile",
      "name": "Projectile",
      "description": [
        "A projectile, e.g. an arrow, snowball or thrown potion."
      ],
      "examples": [
        "projectile is a snowball",
        "shoot an arrow at speed 5 from the player"
      ],
      "usage": "arrow, fireball, snowball, thrown potion, etc.",
      "since": [
        "1.0"
      ],
      "patterns": [
        "projectile[s]"
      ]
    },
    {
      "id": "Region",
      "name": "Region",
      "description": [
        "A region of a regions plugin. Skript currently supports WorldGuard, Factions, GriefPrevention and PreciousStones.",
        "Please note that some regions plugins do not have named regions, some use numerical ids to identify regions, and some may have regions with the same name in different worlds, thus using regions like \"region name\" in scripts may or may not work."
      ],
      "usage": "\"region name\"",
      "since": [
        "2.1"
      ],
      "patterns": [
        "region[s]"
      ]
    },
    {
      "id": "Status",
      "name": "Resource Pack State",
      "description": [
        "The state in a resource pack request response event."
      ],
      "usage": "successfully load, decline, download fail, accept",
      "since": [
        "2.4"
      ],
      "patterns": [
        "resource[ ]pack[ ]state[s]"
      ]
    },
    {
      "id": "CachedServerIcon",
      "name": "Server Icon",
      "description": [
        "A server icon that was loaded using the load server icon effect."
      ],
      "since": [
        "2.3"
      ],
      "patterns": [
        "server[ ]icon[s]"
      ]
    },
    {
      "id": "SoundCategory",
      "name": "Sound Category",
      "description": [
        "The category of a sound, they are used for sound options of Minecraft. See the play sound and stop sound effects."
      ],
      "usage": "master category, music category, record category, weather category, block category, hostile category, neutral category, player category, ambient category, voice category",
      "since": [
        "2.4"
      ],
      "patterns": [
        "sound[ ]categor(y|ies)"
      ]
    },
    {
      "id": "SpawnReason",
      "name": "Spawn Reason",
      "description": [
        "The spawn reason in a spawn event."
      ],
      "usage": "natural, jockey, chunk generation, mob spawner, egg, spawn egg, lightning, built snowman, built iron golem, built wither, village defense, village invasion, breed, slime split, reinforcements, nether portal, dispense egg, infection, cured, ocelot baby, silverfish reveal, mount, trap, ender pearl, perching, drowned, shear, explosion, raid, patrol, beehive, piglin zombification, frozen, command, customized, default",
      "since": [
        "2.3"
      ],
      "patterns": [
        "spawn[ing][ ]reason[s]"
      ]
    },
    {
      "id": "BeeTeam",
      "name": "Team",
      "description": [
        "Represents a scoreboard team."
      ],
      "patterns": [
        "[bee ]team[s]"
      ]
    },
    {
      "id": "TeleportCause",
      "name": "Teleport Cause",
      "description": [
        "The teleport cause in a teleport event."
      ],
      "usage": "ender pearl, command, plugin, nether portal, end portal, spectate, gateway, chorus, unknown",
      "since": [
        "2.2-dev35"
      ],
      "patterns": [
        "teleport[ ](cause|reason|type)[s]"
      ]
    },
    {
      "id": "String",
      "name": "Text",
      "description": [
        "Text is simply text, i.e. a sequence of characters, which can optionally contain expressions which will be replaced with a meaningful representation (e.g. %player% will be replaced with the player's name).",
        "Because scripts are also text, you have to put text into double quotes to tell Skript which part of the line is an effect/expression and which part is the text.",
        "Please read the article on Texts and Variable Names to learn more."
      ],
      "examples": [
        "broadcast \"Hello World!\"",
        "message \"Hello %player%\"",
        "message \"The id of \"\"%type of tool%\"\" is %id of tool%.\""
      ],
      "usage": "simple: \"...\"\nquotes: \"...\"\"...\"\nexpressions: \"...%expression%...\"\npercent signs: \"...%%...\"",
      "since": [
        "1.0"
      ],
      "patterns": [
        "(text|string)[s]"
      ]
    },
    {
      "id": "Time",
      "name": "Time",
      "description": [
        "A time is a point in a minecraft day's time (i.e. ranges from 0:00 to 23:59), which can vary per world.",
        "See date and timespan for the other time types of Skript."
      ],
      "examples": [
        "at 20:00:",
        "\ttime is 8 pm",
        "\tbroadcast \"It's %time%\""
      ],
      "usage": "##:##\n##[:##][ ]am/pm",
      "since": [
        "1.0"
      ],
      "patterns": [
        "time[s]"
      ]
    },
    {
      "id": "Timeperiod",
      "name": "Timeperiod",
      "description": [
        "A period of time between two times. Mostly useful since you can use this to test for whether it's day, night, dusk or dawn in a specific world.",
        "This type might be removed in the future as you can use 'time of world is between x and y' as a replacement."
      ],
      "examples": [
        "time in world is night"
      ],
      "usage": "##:## - ##:##\ndusk/day/dawn/night",
      "since": [
        "1.0"
      ],
      "patterns": [
        "time[ ]period[s]",
        "duration[s]"
      ]
    },
    {
      "id": "Timespan",
      "name": "Timespan",
      "description": [
        "A timespan is a difference of two different dates or times, e.g '10 minutes'. Timespans are always displayed as real life time, but can be defined as minecraft time, e.g. '5 minecraft days and 12 hours'.",
        "NOTE: Months always have the value of 30 days, and years of 365 days.",
        "See date and time for the other time types of Skript."
      ],
      "examples": [
        "every 5 minecraft days:",
        "\twait a minecraft second and 5 ticks",
        "every 10 mc days and 12 hours:",
        "\thalt for 12.7 irl minutes, 12 hours and 120.5 seconds"
      ],
      "usage": "&lt;number&gt; [minecraft/mc/real/rl/irl] ticks/seconds/minutes/hours/days/weeks/months/years [[,/and] &lt;more...&gt;]\n[###:]##:##[.####] ([hours:]minutes:seconds[.milliseconds])",
      "since": [
        "1.0, 2.6.1 (weeks, months, years)"
      ],
      "patterns": [
        "time[ ]span[s]"
      ]
    },
    {
      "id": "StructureType",
      "name": "Tree Type",
      "description": [
        "A tree type represents a tree species or a huge mushroom species. These can be generated in a world with the generate tree effect."
      ],
      "examples": [
        "grow any regular tree at the block",
        "grow a huge red mushroom above the block"
      ],
      "usage": "[any] &lt;general tree/mushroom type&gt;, e.g. tree/any jungle tree/etc.\n&lt;specific tree/mushroom species&gt;, e.g. red mushroom/small jungle tree/big regular tree/etc.",
      "since": [
        ""
      ],
      "patterns": [
        "tree[ ]type[s]",
        "tree[s]"
      ]
    },
    {
      "id": "ClassInfo",
      "name": "Type",
      "description": [
        "Represents a type, e.g. number, object, item type, location, block, world, entity type, etc.",
        "This is mostly used for expressions like 'event-&lt;type&gt;', '&lt;type&gt;-argument', 'loop-&lt;type&gt;', etc., e.g. event-world, number-argument and loop-player."
      ],
      "examples": [
        "{variable} is a number # check whether the variable contains a number, e.g. -1 or 5.5",
        "{variable} is a type # check whether the variable contains a type, e.g. number or player",
        "{variable} is an object # will always succeed if the variable is set as everything is an object, even types.",
        "disable PvP in the event-world",
        "kill the loop-entity"
      ],
      "usage": "See the type name patterns of all types - including this one",
      "since": [
        "2.0"
      ],
      "patterns": [
        "type[s]"
      ]
    },
    {
      "id": "Vector",
      "name": "Vector",
      "description": [
        "Vector is a collection of numbers. In Minecraft, 3D vectors are used to express velocities of entities."
      ],
      "usage": "vector(x, y, z)",
      "since": [
        "2.2-dev23"
      ],
      "patterns": [
        "vector[s]"
      ]
    },
    {
      "id": "VisualEffect",
      "name": "Visual Effect",
      "description": [
        "A visible effect, e.g. particles."
      ],
      "examples": [
        "show wolf hearts on the clicked wolf",
        "play mob spawner flames at the targeted block to the player"
      ],
      "usage": "smoke, potion break, ender signal, mobspawner flames, arrow particles, jumping rabbit, hurt, wolf smoke, wolf hearts, wolf shaking, sheep eating, iron golem offering rose, villager hearts, angry villager entity, happy villager entity, witch magic, zombie turning to a villager, firework explosion, love hearts, squid rotation reset, entity poof, guardian target, block with shield, shield break, armor stand hit, hurt by thorns, iron golem sheathing rose, resurrection by totem, hurt by drowning, hurt by explosion, explosion, large explosion, huge explosion, firework's spark, water bubble, water splash, water wake, suspended, void fog, critical hit, magical critical hit, smoke particle, large smoke, spell, spell, potion swirl, transparent potion swirl, witch spell, water drip, lava drip, angry villager, happy villager, small smoke, note, portal, flying glyph, flame, lava pop, cloud, coloured dust, snowball break, snow shovel, slime, heart, barrier, item crack, block break, block dust, water drop, mob appearance, dragon breath, end rod, damage indicator, sweep attack, falling dust, totem, spit, squid ink, bubble pop, current down, bubble column up, nautilus, dolphin, sneeze, campfire cosy smoke, campfire signal smoke, composter, flash, falling lava, landing lava, falling water, dripping honey, falling honey, landing honey, falling nectar, soul fire flame, ash, crimson spore, warped spore, soul, dripping obsidian tear, falling obsidian tear, landing obsidian tear, reverse portal, white ash, light, falling spore blossom, spore blossom air, small flame, snowflake, dripping dripstone lava, falling dripstone lava, dripping dripstone water, falling dripstone water, glow squid ink, glow, wax on, wax off, electric spark, scrape",
      "since": [
        "2.1"
      ],
      "patterns": [
        "(visual|particle) effect[s]"
      ]
    },
    {
      "id": "WeatherType",
      "name": "Weather Type",
      "description": [
        "The weather types sunny, rainy, and thundering."
      ],
      "examples": [
        "is raining",
        "is sunny in the player's world",
        "message \"It is %weather in the argument's world% in %world of the argument%\""
      ],
      "usage": "clear/sun/sunny, rain/rainy/raining, and thunder/thundering/thunderstorm",
      "since": [
        "1.0"
      ],
      "patterns": [
        "weather[ ]type[s]",
        "weather condition[s]",
        "weather[s]"
      ]
    },
    {
      "id": "World",
      "name": "World",
      "description": [
        "One of the server's worlds. Worlds can be put into scripts by surrounding their name with double quotes, e.g. \"world_nether\", but this might not work reliably as text uses the same syntax."
      ],
      "examples": [
        "broadcast \"Hello!\" to the world \"world_nether\""
      ],
      "usage": "\"world_name\", e.g. \"world\"",
      "since": [
        "1.0, 2.2 (alternate syntax)"
      ],
      "patterns": [
        "world[s]"
      ]
    },
    {
      "id": "BeeWorldCreator",
      "name": "World Creator",
      "description": [
        "Used to create new worlds."
      ],
      "examples": [
        "set {_creator} to new world creator named \"my-world\""
      ],
      "usage": "world creator",
      "since": [
        "1.8.0"
      ],
      "patterns": [
        "worldcreator"
      ]
    },
    {
      "id": "Section",
      "name": "section",
      "patterns": [
        "section[s]"
      ]
    }
  ],
  "functions": [
    {
      "id": "function_abs",
      "name": "abs",
      "description": [
        "Returns the absolute value of the argument, i.e. makes the argument positive."
      ],
      "examples": [
        "abs(3) = 3",
        "abs(-2) = 2"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Number",
      "patterns": [
        "abs(n: number)"
      ]
    },
    {
      "id": "function_acos",
      "name": "acos",
      "description": [
        "The inverse of the cosine, also called arccos. Returns result in degrees, not radians. Only returns values from 0 to 180."
      ],
      "examples": [
        "acos(0) = 90",
        "acos(1) = 0",
        "acos(0.5) = 30"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Number",
      "patterns": [
        "acos(n: number)"
      ]
    },
    {
      "id": "function_asin",
      "name": "asin",
      "description": [
        "The inverse of the sine, also called arcsin. Returns result in degrees, not radians. Only returns values from -90 to 90."
      ],
      "examples": [
        "asin(0) = 0",
        "asin(1) = 90",
        "asin(0.5) = 30"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Number",
      "patterns": [
        "asin(n: number)"
      ]
    },
    {
      "id": "function_atan",
      "name": "atan",
      "description": [
        "The inverse of the tangent, also called arctan. Returns result in degrees, not radians. Only returns values from -90 to 90."
      ],
      "examples": [
        "atan(0) = 0",
        "atan(1) = 45",
        "atan(10000) = 89.9943"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Number",
      "patterns": [
        "atan(n: number)"
      ]
    },
    {
      "id": "function_atan2",
      "name": "atan2",
      "description": [
        "Similar to atan, but requires two coordinates and returns values from -180 to 180.",
        "The returned angle is measured counterclockwise in a standard mathematical coordinate system (x to the right, y to the top)."
      ],
      "examples": [
        "atan2(0, 1) = 0",
        "atan2(10, 0) = 90",
        "atan2(-10, 5) = -63.4349"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Number",
      "patterns": [
        "atan2(x: number, y: number)"
      ]
    },
    {
      "id": "function_calcExperience",
      "name": "calcExperience",
      "description": [
        "Calculates the total amount of experience needed to achieve given level from scratch in Minecraft."
      ],
      "since": [
        "2.2-dev32"
      ],
      "return type": "long",
      "patterns": [
        "calcExperience(level: long)"
      ]
    },
    {
      "id": "function_ceil",
      "name": "ceil",
      "description": [
        "Rounds a number up, i.e. returns the closest integer larger than or equal to the argument."
      ],
      "examples": [
        "ceil(2.34) = 3",
        "ceil(2) = 2",
        "ceil(2.99) = 3"
      ],
      "since": [
        "2.2"
      ],
      "return type": "long",
      "patterns": [
        "ceil(n: number)"
      ]
    },
    {
      "id": "function_ceiling",
      "name": "ceiling",
      "description": [
        "Alias of ceil."
      ],
      "examples": [
        "ceiling(2.34) = 3",
        "ceiling(2) = 2",
        "ceiling(2.99) = 3"
      ],
      "since": [
        "2.2"
      ],
      "return type": "long",
      "patterns": [
        "ceiling(n: number)"
      ]
    },
    {
      "id": "function_cos",
      "name": "cos",
      "description": [
        "The cosine function. This is basically the sine shifted by 90°, i.e. cos(a) = sin(a + 90°), for any number a. Uses degrees, not radians."
      ],
      "examples": [
        "cos(0) = 1",
        "cos(90) = 0"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Number",
      "patterns": [
        "cos(n: number)"
      ]
    },
    {
      "id": "function_date",
      "name": "date",
      "description": [
        "Creates a date from a year, month, and day, and optionally also from hour, minute, second and millisecond.",
        "A time zone and DST offset can be specified as well (in minutes), if they are left out the server's time zone and DST offset are used (the created date will not retain this information)."
      ],
      "examples": [
        "date(2014, 10, 1) # 0:00, 1st October 2014",
        "date(1990, 3, 5, 14, 30) # 14:30, 5th May 1990",
        "date(1999, 12, 31, 23, 59, 59, 999, -3*60, 0) # almost year 2000 in parts of Brazil (-3 hours offset, no DST)"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Date",
      "patterns": [
        "date(year: number, month: number, day: number, hour: number = [[integer:0]], minute: number = [[integer:0]], second: number = [[integer:0]], millisecond: number = [[integer:0]], zone_offset: number = [[double:NaN]], dst_offset: number = [[double:NaN]])"
      ]
    },
    {
      "id": "function_exp",
      "name": "exp",
      "description": [
        "The exponential function. You probably don't need this if you don't know what this is."
      ],
      "examples": [
        "exp(0) = 1",
        "exp(1) = 2.7183"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Number",
      "patterns": [
        "exp(n: number)"
      ]
    },
    {
      "id": "function_floor",
      "name": "floor",
      "description": [
        "Rounds a number down, i.e. returns the closest integer smaller than or equal to the argument."
      ],
      "examples": [
        "floor(2.34) = 2",
        "floor(2) = 2",
        "floor(2.99) = 2"
      ],
      "since": [
        "2.2"
      ],
      "return type": "long",
      "patterns": [
        "floor(n: number)"
      ]
    },
    {
      "id": "function_ln",
      "name": "ln",
      "description": [
        "The natural logarithm. You probably don't need this if you don't know what this is.",
        "Returns NaN (not a number) if the argument is negative."
      ],
      "examples": [
        "ln(1) = 0",
        "ln(exp(5)) = 5",
        "ln(2) = 0.6931"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Number",
      "patterns": [
        "ln(n: number)"
      ]
    },
    {
      "id": "function_location",
      "name": "location",
      "description": [
        "Creates a location from a world and 3 coordinates, with an optional yaw and pitch.",
        "If for whatever reason the world is not found, it will fallback to the server's main world."
      ],
      "examples": [
        "location(0, 128, 0)",
        "location(player's x-coordinate, player's y-coordinate + 5, player's z-coordinate, player's world, 0, 90)",
        "location(0, 64, 0, world \"world_nether\")",
        "location(100, 110, -145, world(\"my_custom_world\"))"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Location",
      "patterns": [
        "location(x: number, y: number, z: number, world: world = event-world, yaw: number = [[integer:0]], pitch: number = [[integer:0]])"
      ]
    },
    {
      "id": "function_log",
      "name": "log",
      "description": [
        "A logarithm, with base 10 if none is specified. This is the inverse operation to exponentiation (for positive bases only), i.e. log(base ^ exponent, base) = exponent for any positive number 'base' and any number 'exponent'.",
        "Another useful equation is base ^ log(a, base) = a for any numbers 'base' and 'a'.",
        "Please note that due to how numbers are represented in computers, these equations do not hold for all numbers, as the computed values may slightly differ from the correct value.",
        "Returns NaN (not a number) if any of the arguments are negative."
      ],
      "examples": [
        "log(100) = 2 # 10^2 = 100",
        "log(16, 2) = 4 # 2^4 = 16"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Number",
      "patterns": [
        "log(n: number, base: number = [[integer:10]])"
      ]
    },
    {
      "id": "function_max",
      "name": "max",
      "description": [
        "Returns the maximum number from a list of numbers."
      ],
      "examples": [
        "max(1) = 1",
        "max(1, 2, 3, 4) = 4",
        "max({some list variable::*})"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Number",
      "patterns": [
        "max(ns: numbers)"
      ]
    },
    {
      "id": "function_min",
      "name": "min",
      "description": [
        "Returns the minimum number from a list of numbers."
      ],
      "examples": [
        "min(1) = 1",
        "min(1, 2, 3, 4) = 1",
        "min({some list variable::*})"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Number",
      "patterns": [
        "min(ns: numbers)"
      ]
    },
    {
      "id": "function_mod",
      "name": "mod",
      "description": [
        "Returns the modulo of the given arguments, i.e. the remainder of the division d/m, where d and m are the arguments of this function.",
        "The returned value is always positive. Returns NaN (not a number) if the second argument is zero."
      ],
      "examples": [
        "mod(3, 2) = 1",
        "mod(256436, 100) = 36",
        "mod(-1, 10) = 9"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Number",
      "patterns": [
        "mod(d: number, m: number)"
      ]
    },
    {
      "id": "function_product",
      "name": "product",
      "description": [
        "Calculates the product of a list of numbers."
      ],
      "examples": [
        "product(1) = 1",
        "product(2, 3, 4) = 24",
        "product({some list variable::*})",
        "product(2, {_v::*}, and the player's y-coordinate)"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Number",
      "patterns": [
        "product(ns: numbers)"
      ]
    },
    {
      "id": "function_rgb",
      "name": "rgb",
      "description": [
        "Returns a RGB color from the given red, green and blue parameters."
      ],
      "examples": [
        "dye player's leggings rgb(120, 30, 45)"
      ],
      "since": [
        "2.5"
      ],
      "return type": "Colour",
      "patterns": [
        "rgb(red: long, green: long, blue: long)"
      ]
    },
    {
      "id": "function_round",
      "name": "round",
      "description": [
        "Rounds a number, i.e. returns the closest integer to the argument."
      ],
      "examples": [
        "round(2.34) = 2",
        "round(2) = 2",
        "round(2.99) = 3",
        "round(2.5) = 3"
      ],
      "since": [
        "2.2"
      ],
      "return type": "long",
      "patterns": [
        "round(n: number)"
      ]
    },
    {
      "id": "function_sin",
      "name": "sin",
      "description": [
        "The sine function. It starts at 0° with a value of 0, goes to 1 at 90°, back to 0 at 180°, to -1 at 270° and then repeats every 360°. Uses degrees, not radians."
      ],
      "examples": [
        "sin(90) = 1",
        "sin(60) = 0.866"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Number",
      "patterns": [
        "sin(n: number)"
      ]
    },
    {
      "id": "function_sqrt",
      "name": "sqrt",
      "description": [
        "The square root, which is the inverse operation to squaring a number (for positive numbers only). This is the same as (argument) ^ (1/2) – other roots can be calculated via number ^ (1/root), e.g. set {_l} to {_volume}^(1/3).",
        "Returns NaN (not a number) if the argument is negative."
      ],
      "examples": [
        "sqrt(4) = 2",
        "sqrt(2) = 1.4142",
        "sqrt(-1) = NaN"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Number",
      "patterns": [
        "sqrt(n: number)"
      ]
    },
    {
      "id": "function_sum",
      "name": "sum",
      "description": [
        "Sums a list of numbers."
      ],
      "examples": [
        "sum(1) = 1",
        "sum(2, 3, 4) = 9",
        "sum({some list variable::*})",
        "sum(2, {_v::*}, and the player's y-coordinate)"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Number",
      "patterns": [
        "sum(ns: numbers)"
      ]
    },
    {
      "id": "function_tan",
      "name": "tan",
      "description": [
        "The tangent function. This is basically <a href='#sin'>sin(arg)/cos(arg)</code>. Uses degrees, not radians."
      ],
      "examples": [
        "tan(0) = 0",
        "tan(45) = 1",
        "tan(89.99) = 5729.5779"
      ],
      "since": [
        "2.2"
      ],
      "return type": "Number",
      "patterns": [
        "tan(n: number)"
      ]
    },
    {
      "id": "function_vector",
      "name": "vector",
      "description": [
        "Creates a new vector, which can be used with various expressions, effects and functions."
      ],
      "examples": [
        "vector(0, 0, 0)"
      ],
      "since": [
        "2.2-dev23"
      ],
      "return type": "Vector",
      "patterns": [
        "vector(x: number, y: number, z: number)"
      ]
    },
    {
      "id": "function_world",
      "name": "world",
      "description": [
        "Gets a world from its name."
      ],
      "examples": [
        "set {_nether} to world(\"%{_world}%_nether\")"
      ],
      "since": [
        "2.2"
      ],
      "return type": "World",
      "patterns": [
        "world(name: string)"
      ]
    }
  ],
  "sections": [
    {
      "id": "SecConditional",
      "name": "SecConditional",
      "patterns": [
        "else",
        "else [(parse)] if <.+>",
        "[(parse if|if)] <.+>"
      ]
    },
    {
      "id": "SecLoop",
      "name": "SecLoop",
      "patterns": [
        "loop %objects%"
      ]
    },
    {
      "id": "SecWhile",
      "name": "SecWhile",
      "patterns": [
        "[(do)] while <.+>"
      ]
    },
    {
      "id": "EffSecSpawn",
      "name": "Spawn",
      "description": [
        "Spawn a creature. This can be used as an effect and as a section.",
        "If it is used as a section, the section is run before the entity is added to the world.",
        "You can modify the entity in this section, using for example 'event-entity' or 'cow'. ",
        "Do note that other event values, such as 'player', won't work in this section."
      ],
      "examples": [
        "spawn 3 creepers at the targeted block",
        "spawn a ghast 5 meters above the player",
        "spawn a zombie at the player:",
        "\tset name of the zombie to \"\""
      ],
      "since": [
        "1.0, 2.6.1 (with section)"
      ],
      "patterns": [
        "(spawn|summon) %entitytypes% [%directions% %locations%]",
        "(spawn|summon) %number% of %entitytypes% [%directions% %locations%]"
      ]
    }
  ]
}